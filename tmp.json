{
    "kind": "SourceFile",
    "locals": [
        {
            "name": "Console",
            "decls": [
                {
                    "decl": "Console",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Console",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "Console: NodeJS.ConsoleConstructor",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "NodeJS",
                                        "ConsoleConstructor"
                                    ]
                                }
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "assert",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "assert( value: any, message?: string, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "value"
                                },
                                {
                                    "typeName": "string",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "dir",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "dir( obj: any, options?: NodeJS.InspectOptions ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "obj"
                                },
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "InspectOptions"
                                        ]
                                    },
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "error",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "error( message?: any, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "info",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "info( message?: any, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "log",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "log( message?: any, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "time",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "time( label: string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "label"
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "timeEnd",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "timeEnd( label: string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "label"
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "trace",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "trace( message?: any, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "warn",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "warn( message?: any, ...optionalParams: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "message",
                                    "optional": true
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "optionalParams",
                                    "rest": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Error",
            "decls": [
                {
                    "decl": "Error",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "stack",
                    "flags": "Property | Optional",
                    "decls": [
                        {
                            "decl": "stack: string",
                            "type": "string",
                            "kind": "PropertySignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "ErrorConstructor",
            "decls": [
                {
                    "decl": "ErrorConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "captureStackTrace",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "captureStackTrace( targetObject: Object, constructorOpt?: Function ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Object",
                                    "name": "targetObject"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "constructorOpt",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "prepareStackTrace",
                    "flags": "Property | Optional",
                    "decls": [
                        {
                            "decl": "prepareStackTrace: ( err: Error, stackTraces: NodeJS.CallSite[] ) => any",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        },
                                        {
                                            "typeName": {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "CallSite"
                                                    ]
                                                }
                                            },
                                            "isArray": true,
                                            "name": "stackTraces"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "stackTraceLimit",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "stackTraceLimit: number",
                            "type": "number",
                            "kind": "PropertySignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "MapConstructor",
            "decls": [
                {
                    "decl": "MapConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ]
        },
        {
            "name": "WeakMapConstructor",
            "decls": [
                {
                    "decl": "WeakMapConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ]
        },
        {
            "name": "SetConstructor",
            "decls": [
                {
                    "decl": "SetConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ]
        },
        {
            "name": "WeakSetConstructor",
            "decls": [
                {
                    "decl": "WeakSetConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ]
        },
        {
            "name": "Iterable",
            "decls": [
                {
                    "decl": "Iterable<T>",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "T",
                    "flags": "TypeParameter",
                    "decls": [
                        {
                            "decl": "T",
                            "kind": "TypeParameter"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Iterator",
            "decls": [
                {
                    "decl": "Iterator<T>",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "T",
                    "flags": "TypeParameter",
                    "decls": [
                        {
                            "decl": "T",
                            "kind": "TypeParameter"
                        }
                    ]
                },
                {
                    "name": "next",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "next( value?: any ): IteratorResult<T>",
                            "type": {
                                "type": "reference",
                                "typeName": "IteratorResult",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "T"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "value",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "IteratorResult",
            "decls": [
                {
                    "decl": "IteratorResult<T>",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "T",
                    "flags": "TypeParameter",
                    "decls": [
                        {
                            "decl": "T",
                            "kind": "TypeParameter"
                        }
                    ]
                }
            ]
        },
        {
            "name": "SymbolConstructor",
            "decls": [
                {
                    "decl": "SymbolConstructor",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "iterator",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "iterator: symbol",
                            "type": "symbol",
                            "kind": "PropertySignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Symbol",
            "decls": [
                {
                    "decl": "Symbol: SymbolConstructor",
                    "type": {
                        "type": "reference",
                        "typeName": "SymbolConstructor"
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "String",
            "decls": [
                {
                    "decl": "String",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "trimLeft",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "trimLeft(): string",
                            "type": "string",
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "trimRight",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "trimRight(): string",
                            "type": "string",
                            "kind": "MethodSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "process",
            "decls": [
                {
                    "decl": "process: NodeJS.Process",
                    "type": {
                        "type": "reference",
                        "typeName": {
                            "type": "qualified",
                            "names": [
                                "NodeJS",
                                "Process"
                            ]
                        }
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "global",
            "decls": [
                {
                    "decl": "global: NodeJS.Global",
                    "type": {
                        "type": "reference",
                        "typeName": {
                            "type": "qualified",
                            "names": [
                                "NodeJS",
                                "Global"
                            ]
                        }
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "console",
            "decls": [
                {
                    "decl": "console: Console",
                    "type": {
                        "type": "reference",
                        "typeName": "Console"
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "__filename",
            "decls": [
                {
                    "decl": "___filename: string",
                    "type": "string",
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "__dirname",
            "decls": [
                {
                    "decl": "___dirname: string",
                    "type": "string",
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "setTimeout",
            "decls": [
                {
                    "decl": "setTimeout( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ): NodeJS.Timer",
                    "type": {
                        "type": "reference",
                        "typeName": {
                            "type": "qualified",
                            "names": [
                                "NodeJS",
                                "Timer"
                            ]
                        }
                    },
                    "parameters": [
                        {
                            "type": "function",
                            "definition": {
                                "parameters": [
                                    {
                                        "typeName": "any",
                                        "isArray": true,
                                        "name": "args",
                                        "rest": true
                                    }
                                ],
                                "type": {
                                    "typeName": "void"
                                }
                            },
                            "name": "callback"
                        },
                        {
                            "typeName": "number",
                            "name": "ms"
                        },
                        {
                            "typeName": "any",
                            "isArray": true,
                            "name": "args",
                            "rest": true
                        }
                    ],
                    "kind": "FunctionDeclaration"
                },
                {
                    "decl": "setTimeout",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "__promisify__",
                    "namespaces": [
                        "setTimeout"
                    ],
                    "decls": [
                        {
                            "decl": "___promisify__( ms: number ): Promise<void>",
                            "type": {
                                "type": "reference",
                                "typeName": "Promise",
                                "typeArguments": [
                                    {
                                        "typeName": "void"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "ms"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "___promisify__<T>( ms: number, value: T ): Promise<T>",
                            "type": {
                                "type": "reference",
                                "typeName": "Promise",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "T"
                                        }
                                    }
                                ]
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T",
                                    "name": "T"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "ms"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "T",
                                    "name": "value"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "clearTimeout",
            "decls": [
                {
                    "decl": "clearTimeout( timeoutId: NodeJS.Timer ): void",
                    "type": "void",
                    "parameters": [
                        {
                            "type": "reference",
                            "typeName": {
                                "type": "qualified",
                                "names": [
                                    "NodeJS",
                                    "Timer"
                                ]
                            },
                            "name": "timeoutId"
                        }
                    ],
                    "kind": "FunctionDeclaration"
                }
            ]
        },
        {
            "name": "setInterval",
            "decls": [
                {
                    "decl": "setInterval( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ): NodeJS.Timer",
                    "type": {
                        "type": "reference",
                        "typeName": {
                            "type": "qualified",
                            "names": [
                                "NodeJS",
                                "Timer"
                            ]
                        }
                    },
                    "parameters": [
                        {
                            "type": "function",
                            "definition": {
                                "parameters": [
                                    {
                                        "typeName": "any",
                                        "isArray": true,
                                        "name": "args",
                                        "rest": true
                                    }
                                ],
                                "type": {
                                    "typeName": "void"
                                }
                            },
                            "name": "callback"
                        },
                        {
                            "typeName": "number",
                            "name": "ms"
                        },
                        {
                            "typeName": "any",
                            "isArray": true,
                            "name": "args",
                            "rest": true
                        }
                    ],
                    "kind": "FunctionDeclaration"
                }
            ]
        },
        {
            "name": "clearInterval",
            "decls": [
                {
                    "decl": "clearInterval( intervalId: NodeJS.Timer ): void",
                    "type": "void",
                    "parameters": [
                        {
                            "type": "reference",
                            "typeName": {
                                "type": "qualified",
                                "names": [
                                    "NodeJS",
                                    "Timer"
                                ]
                            },
                            "name": "intervalId"
                        }
                    ],
                    "kind": "FunctionDeclaration"
                }
            ]
        },
        {
            "name": "setImmediate",
            "decls": [
                {
                    "decl": "setImmediate( callback: ( ...args: any[] ) => void, ...args: any[] ): any",
                    "type": "any",
                    "parameters": [
                        {
                            "type": "function",
                            "definition": {
                                "parameters": [
                                    {
                                        "typeName": "any",
                                        "isArray": true,
                                        "name": "args",
                                        "rest": true
                                    }
                                ],
                                "type": {
                                    "typeName": "void"
                                }
                            },
                            "name": "callback"
                        },
                        {
                            "typeName": "any",
                            "isArray": true,
                            "name": "args",
                            "rest": true
                        }
                    ],
                    "kind": "FunctionDeclaration"
                },
                {
                    "decl": "setImmediate",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "__promisify__",
                    "namespaces": [
                        "setImmediate"
                    ],
                    "decls": [
                        {
                            "decl": "___promisify__(): Promise<void>",
                            "type": {
                                "type": "reference",
                                "typeName": "Promise",
                                "typeArguments": [
                                    {
                                        "typeName": "void"
                                    }
                                ]
                            },
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "___promisify__<T>( value: T ): Promise<T>",
                            "type": {
                                "type": "reference",
                                "typeName": "Promise",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "T"
                                        }
                                    }
                                ]
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T",
                                    "name": "T"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "T",
                                    "name": "value"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "clearImmediate",
            "decls": [
                {
                    "decl": "clearImmediate( immediateId: any ): void",
                    "type": "void",
                    "parameters": [
                        {
                            "typeName": "any",
                            "name": "immediateId"
                        }
                    ],
                    "kind": "FunctionDeclaration"
                }
            ]
        },
        {
            "name": "NodeRequireFunction",
            "decls": [
                {
                    "decl": "NodeRequireFunction",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Call",
                    "flags": "Signature",
                    "decls": [
                        {
                            "decl": "( id: string ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "id"
                                }
                            ],
                            "kind": "CallSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "NodeRequire",
            "decls": [
                {
                    "decl": "NodeRequire",
                    "heritage": [
                        {
                            "name": "NodeRequireFunction"
                        }
                    ],
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "resolve",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "resolve( id: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "id"
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "cache",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "cache: any",
                            "type": "any",
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "extensions",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "extensions: NodeExtensions",
                            "type": {
                                "type": "reference",
                                "typeName": "NodeExtensions"
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "main",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "main: NodeModule | undefined",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "NodeModule"
                                        }
                                    },
                                    {
                                        "typeName": "undefined"
                                    }
                                ]
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "NodeExtensions",
            "decls": [
                {
                    "decl": "NodeExtensions",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": ".js",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": ": ( m: NodeModule, filename: string ) => any",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "NodeModule",
                                            "name": "m"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "filename"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": ".json",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": ": ( m: NodeModule, filename: string ) => any",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "NodeModule",
                                            "name": "m"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "filename"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": ".node",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": ": ( m: NodeModule, filename: string ) => any",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "NodeModule",
                                            "name": "m"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "filename"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "Index",
                    "flags": "Signature",
                    "decls": [
                        {
                            "decl": "[ ext: string ]: FunctionType",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "NodeModule",
                                            "name": "m"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "filename"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "ext"
                                }
                            ],
                            "kind": "IndexSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "require",
            "decls": [
                {
                    "decl": "require: NodeRequire",
                    "type": {
                        "type": "reference",
                        "typeName": "NodeRequire"
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "NodeModule",
            "decls": [
                {
                    "decl": "NodeModule",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "exports",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "exports: any",
                            "type": "any",
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "require",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "require: NodeRequireFunction",
                            "type": {
                                "type": "reference",
                                "typeName": "NodeRequireFunction"
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "id",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "id: string",
                            "type": "string",
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "filename",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "filename: string",
                            "type": "string",
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "loaded",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "loaded: boolean",
                            "type": "boolean",
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "parent",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "parent: NodeModule | null",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "NodeModule"
                                        }
                                    },
                                    {
                                        "typeName": "null"
                                    }
                                ]
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                },
                {
                    "name": "children",
                    "flags": "Property",
                    "decls": [
                        {
                            "decl": "children: NodeModule[]",
                            "type": {
                                "typeName": {
                                    "type": "reference",
                                    "typeName": "NodeModule"
                                },
                                "isArray": true
                            },
                            "kind": "PropertySignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "module",
            "decls": [
                {
                    "decl": "module: NodeModule",
                    "type": {
                        "type": "reference",
                        "typeName": "NodeModule"
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "exports",
            "decls": [
                {
                    "decl": "exports: any",
                    "type": "any",
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "SlowBuffer",
            "decls": [
                {
                    "decl": "SlowBuffer: { ConstructSignature, ConstructSignature, ConstructSignature, ConstructSignature, prototype, isBuffer, byteLength, concat }",
                    "type": {
                        "type": "typeliteral",
                        "members": [
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "prototype",
                                "name": "prototype"
                            },
                            {
                                "typeName": "isBuffer",
                                "name": "isBuffer"
                            },
                            {
                                "typeName": "byteLength",
                                "name": "byteLength"
                            },
                            {
                                "typeName": "concat",
                                "name": "concat"
                            }
                        ]
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "BufferEncoding",
            "decls": [
                {
                    "decl": "BufferEncoding: 'ascii'  | 'utf8'  | 'utf16le'  | 'ucs2'  | 'base64'  | 'latin1'  | 'binary'  | 'hex' ",
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "ascii"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "utf8"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "utf16le"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "ucs2"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "base64"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "latin1"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "binary"
                            },
                            {
                                "type": "literal",
                                "typeName": "string",
                                "value": "hex"
                            }
                        ]
                    },
                    "kind": "TypeAliasDeclaration"
                }
            ]
        },
        {
            "name": "Buffer",
            "decls": [
                {
                    "decl": "Buffer",
                    "heritage": [
                        {
                            "name": "NodeBuffer"
                        }
                    ],
                    "kind": "InterfaceDeclaration"
                },
                {
                    "decl": "Buffer: { ConstructSignature, ConstructSignature, ConstructSignature, ConstructSignature, ConstructSignature, ConstructSignature, prototype, from, from, from, from, isBuffer, isEncoding, byteLength, concat, compare, alloc, allocUnsafe, allocUnsafeSlow, poolSize }",
                    "type": {
                        "type": "typeliteral",
                        "members": [
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "ConstructSignature"
                            },
                            {
                                "typeName": "prototype",
                                "name": "prototype"
                            },
                            {
                                "typeName": "from",
                                "name": "from"
                            },
                            {
                                "typeName": "from",
                                "name": "from"
                            },
                            {
                                "typeName": "from",
                                "name": "from"
                            },
                            {
                                "typeName": "from",
                                "name": "from"
                            },
                            {
                                "typeName": "isBuffer",
                                "name": "isBuffer"
                            },
                            {
                                "typeName": "isEncoding",
                                "name": "isEncoding"
                            },
                            {
                                "typeName": "byteLength",
                                "name": "byteLength"
                            },
                            {
                                "typeName": "concat",
                                "name": "concat"
                            },
                            {
                                "typeName": "compare",
                                "name": "compare"
                            },
                            {
                                "typeName": "alloc",
                                "name": "alloc"
                            },
                            {
                                "typeName": "allocUnsafe",
                                "name": "allocUnsafe"
                            },
                            {
                                "typeName": "allocUnsafeSlow",
                                "name": "allocUnsafeSlow"
                            },
                            {
                                "typeName": "poolSize",
                                "name": "poolSize"
                            }
                        ]
                    },
                    "kind": "VariableDeclaration"
                }
            ]
        },
        {
            "name": "NodeJS",
            "decls": [
                {
                    "decl": "NodeJS",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "InspectOptions",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "InspectOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "showHidden",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "showHidden: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "depth",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "depth: number | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "colors",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "colors: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "customInspect",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "customInspect: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "showProxy",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "showProxy: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxArrayLength",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxArrayLength: number | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "breakLength",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "breakLength: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ConsoleConstructor",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ConsoleConstructor",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "prototype",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "prototype: Console",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Console"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "New",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Signature",
                            "decls": [
                                {
                                    "decl": "( stdout: WritableStream, stderr?: WritableStream ): Console",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Console"
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "WritableStream",
                                            "name": "stdout"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WritableStream",
                                            "name": "stderr",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "ConstructSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "CallSite",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "CallSite",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "getThis",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getThis(): any",
                                    "type": "any",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getTypeName",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getTypeName(): string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getFunction",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getFunction(): Function | undefined",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Function"
                                                }
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getFunctionName",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getFunctionName(): string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getMethodName",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getMethodName(): string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getFileName",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getFileName(): string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getLineNumber",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getLineNumber(): number | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getColumnNumber",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getColumnNumber(): number | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEvalOrigin",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEvalOrigin(): string | undefined",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isToplevel",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isToplevel(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isEval",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isEval(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isNative",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isNative(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isConstructor",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isConstructor(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ErrnoException",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ErrnoException",
                            "heritage": [
                                {
                                    "name": "Error"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "errno",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "errno: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "code",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "code: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "syscall",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "syscall: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stack",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stack: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "EventEmitter",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "EventEmitter",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "removeListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeListener( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "removeAllListeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeAllListeners( event?: string | symbol ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setMaxListeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setMaxListeners( n: number ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "n"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getMaxListeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getMaxListeners(): number",
                                    "type": "number",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "listeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "listeners( event: string | symbol ): Function[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "Function"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "listenerCount",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "listenerCount( type: string | symbol ): number",
                                    "type": "number",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "type"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "eventNames",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "eventNames(): Array<string | symbol>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Array",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "typeName": "symbol"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ReadableStream",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ReadableStream",
                            "heritage": [
                                {
                                    "name": "EventEmitter"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "readable",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "readable: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "read",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "read( size?: number ): string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "size",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setEncoding",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setEncoding( encoding: string ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "pause",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "pause(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "resume",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "resume(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isPaused",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isPaused(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "pipe",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "pipe<T extends WritableStream>( destination: T, options?: { end ): T",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "T"
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "WritableStream",
                                            "name": "T",
                                            "typeOperator": " extends"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T",
                                            "name": "destination"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "end",
                                                    "name": "end",
                                                    "optional": true
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "unpipe",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unpipe<T extends WritableStream>( destination?: T ): ThisType",
                                    "type": "ThisType",
                                    "typeParameters": [
                                        {
                                            "typeName": "WritableStream",
                                            "name": "T",
                                            "typeOperator": " extends"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T",
                                            "name": "destination",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "unshift",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unshift( chunk: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "chunk"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "unshift( chunk: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "chunk"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "wrap",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "wrap( oldStream: ReadableStream ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "ReadableStream",
                                            "name": "oldStream"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "WritableStream",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "WritableStream",
                            "heritage": [
                                {
                                    "name": "EventEmitter"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "writable",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "writable: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "write",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "write( buffer: Buffer | string, cb?: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "buffer"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "write( str: string, encoding?: string, cb?: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "end",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "end( cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "end( buffer: Buffer, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "end( str: string, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "end( str: string, encoding?: string, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ReadWriteStream",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ReadWriteStream",
                            "heritage": [
                                {
                                    "name": "ReadableStream"
                                },
                                {
                                    "name": "WritableStream"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Events",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Events",
                            "heritage": [
                                {
                                    "name": "EventEmitter"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Domain",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Domain",
                            "heritage": [
                                {
                                    "name": "Events"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "run",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "run( fn: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "fn"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "add",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "add( emitter: Events ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Events",
                                            "name": "emitter"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "remove( emitter: Events ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Events",
                                            "name": "emitter"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "bind",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "bind( cb: ( err: Error, data: any ) => any ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "any"
                                                }
                                            },
                                            "name": "cb"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "intercept",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "intercept( cb: ( data: any ) => any ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "any"
                                                }
                                            },
                                            "name": "cb"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "dispose",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "dispose(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "removeListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "removeAllListeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeAllListeners( event?: string ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "MemoryUsage",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "MemoryUsage",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "rss",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rss: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "heapTotal",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "heapTotal: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "heapUsed",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "heapUsed: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "CpuUsage",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "CpuUsage",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "user",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "user: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "system",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "system: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ProcessVersions",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ProcessVersions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "http_parser",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "http_parser: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "node",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "node: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "v8",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "v8: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ares",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ares: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uv",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "uv: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "zlib",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "zlib: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "modules",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "modules: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "openssl",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "openssl: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Platform",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Platform: 'aix'  | 'android'  | 'darwin'  | 'freebsd'  | 'linux'  | 'openbsd'  | 'sunos'  | 'win32'  | 'cygwin' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "aix"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "android"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "darwin"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "freebsd"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "linux"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "openbsd"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "sunos"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "win32"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "cygwin"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Signals",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Signals: 'SIGABRT'  | 'SIGALRM'  | 'SIGBUS'  | 'SIGCHLD'  | 'SIGCONT'  | 'SIGFPE'  | 'SIGHUP'  | 'SIGILL'  | 'SIGINT'  | 'SIGIO'  | 'SIGIOT'  | 'SIGKILL'  | 'SIGPIPE'  | 'SIGPOLL'  | 'SIGPROF'  | 'SIGPWR'  | 'SIGQUIT'  | 'SIGSEGV'  | 'SIGSTKFLT'  | 'SIGSTOP'  | 'SIGSYS'  | 'SIGTERM'  | 'SIGTRAP'  | 'SIGTSTP'  | 'SIGTTIN'  | 'SIGTTOU'  | 'SIGUNUSED'  | 'SIGURG'  | 'SIGUSR1'  | 'SIGUSR2'  | 'SIGVTALRM'  | 'SIGWINCH'  | 'SIGXCPU'  | 'SIGXFSZ'  | 'SIGBREAK'  | 'SIGLOST'  | 'SIGINFO' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGABRT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGALRM"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGBUS"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGCHLD"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGCONT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGFPE"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGHUP"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGILL"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGINT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGIO"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGIOT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGKILL"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGPIPE"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGPOLL"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGPROF"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGPWR"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGQUIT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGSEGV"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGSTKFLT"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGSTOP"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGSYS"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGTERM"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGTRAP"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGTSTP"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGTTIN"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGTTOU"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGUNUSED"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGURG"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGUSR1"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGUSR2"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGVTALRM"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGWINCH"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGXCPU"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGXFSZ"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGBREAK"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGLOST"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "SIGINFO"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "BeforeExitListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "BeforeExitListener: ( code: number ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "DisconnectListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "DisconnectListener: () => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "ExitListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ExitListener: ( code: number ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "RejectionHandledListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "RejectionHandledListener: ( promise: Promise<any> ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Promise",
                                            "typeArguments": [
                                                {
                                                    "typeName": "any"
                                                }
                                            ],
                                            "name": "promise"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "UncaughtExceptionListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "UncaughtExceptionListener: ( error: Error ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "UnhandledRejectionListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "UnhandledRejectionListener: ( reason: any, promise: Promise<any> ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "reason"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Promise",
                                            "typeArguments": [
                                                {
                                                    "typeName": "any"
                                                }
                                            ],
                                            "name": "promise"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "WarningListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "WarningListener: ( warning: Error ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "warning"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "MessageListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "MessageListener: ( message: any, sendHandle: any ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sendHandle"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "SignalsListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "SignalsListener: () => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "NewListenerListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "NewListenerListener: ( type: string | symbol, listener: ( ...args: any[] ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "type"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "RemoveListenerListener",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "RemoveListenerListener: ( type: string | symbol, listener: ( ...args: any[] ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "type"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Socket",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Socket",
                            "heritage": [
                                {
                                    "name": "ReadWriteStream"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "isTTY",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "isTTY: true",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "boolean",
                                        "value": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ProcessEnv",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ProcessEnv",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Index",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Signature",
                            "decls": [
                                {
                                    "decl": "[ key: string ]: UnionType",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "key"
                                        }
                                    ],
                                    "kind": "IndexSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "WriteStream",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "WriteStream",
                            "heritage": [
                                {
                                    "name": "Socket"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "columns",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "columns: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rows",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "rows: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "_write",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "_write( chunk: any, encoding: string, callback: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "chunk"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "_destroy",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "_destroy( err: Error, callback: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "_final",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "_final( callback: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setDefaultEncoding",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setDefaultEncoding( encoding: string ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "cork",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "cork(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "uncork",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "uncork(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( error?: Error ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ReadStream",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "ReadStream",
                            "heritage": [
                                {
                                    "name": "Socket"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "isRaw",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "isRaw: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setRawMode",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "setRawMode( mode: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "mode"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "_read",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "_read( size: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "size"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "_destroy",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "_destroy( err: Error, callback: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "push",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "push( chunk: any, encoding?: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "chunk"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( error?: Error ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Process",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Process",
                            "heritage": [
                                {
                                    "name": "EventEmitter"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "stdout",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdout: WriteStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "WriteStream"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stderr",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stderr: WriteStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "WriteStream"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdin",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdin: ReadStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ReadStream"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "openStdin",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "openStdin(): Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Socket"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "argv",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "argv: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "argv0",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "argv0: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "execArgv",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "execArgv: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "execPath",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "execPath: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "abort",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "abort(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "chdir",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "chdir( directory: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "directory"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "cwd",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "cwd(): string",
                                    "type": "string",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emitWarning",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emitWarning( warning: string | Error, name?: string, ctor?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Error"
                                                    }
                                                }
                                            ],
                                            "name": "warning"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "name",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "ctor",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "env: ProcessEnv",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ProcessEnv"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exit",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "exit( code?: number ): never",
                                    "type": "never",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "code",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "exitCode",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "exitCode: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getgid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getgid(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setgid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setgid( id: number | string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "id"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getuid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getuid(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setuid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setuid( id: number | string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "id"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "geteuid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "geteuid(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "seteuid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "seteuid( id: number | string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "id"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getegid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getegid(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setegid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setegid( id: number | string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "id"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getgroups",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getgroups(): number[]",
                                    "type": {
                                        "typeName": "number",
                                        "isArray": true
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setgroups",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setgroups( groups: Array<string | number> ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Array",
                                            "typeArguments": [
                                                {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "typeName": "string"
                                                        },
                                                        {
                                                            "typeName": "number"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "groups"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "version",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "version: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "versions",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "versions: ProcessVersions",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ProcessVersions"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "config",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "config: { target_defaults, variables }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "target_defaults",
                                                "name": "target_defaults"
                                            },
                                            {
                                                "typeName": "variables",
                                                "name": "variables"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "kill",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "kill( pid: number, signal?: string | number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "pid"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "signal",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "pid",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "title",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "title: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "arch",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "arch: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "platform",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "platform: Platform",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Platform"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "mainModule",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "mainModule: NodeModule",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "NodeModule"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "memoryUsage",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "memoryUsage(): MemoryUsage",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "MemoryUsage"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "cpuUsage",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "cpuUsage( previousValue?: CpuUsage ): CpuUsage",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "CpuUsage"
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "CpuUsage",
                                            "name": "previousValue",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "nextTick",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "nextTick( callback: Function, ...args: any[] ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "umask",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "umask( mask?: number ): number",
                                    "type": "number",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "mask",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "uptime",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "uptime(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "hrtime",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "hrtime( time?: [ number, number ] ): [ number, number ]",
                                    "type": {
                                        "type": "tuple",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "number"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "tuple",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "time",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "domain",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "domain: Domain",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Domain"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "send( message: any, sendHandle?: any ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sendHandle",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disconnect(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "connected",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connected: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: 'beforeExit' , listener: BeforeExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'disconnect' , listener: DisconnectListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "DisconnectListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'exit' , listener: ExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'rejectionHandled' , listener: RejectionHandledListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'uncaughtException' , listener: UncaughtExceptionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'unhandledRejection' , listener: UnhandledRejectionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'warning' , listener: WarningListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WarningListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'message' , listener: MessageListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: Signals, listener: SignalsListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "SignalsListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'newListener' , listener: NewListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "NewListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'removeListener' , listener: RemoveListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: 'beforeExit' , code: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'disconnect'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'exit' , code: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'rejectionHandled' , promise: Promise<any> ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Promise",
                                            "typeArguments": [
                                                {
                                                    "typeName": "any"
                                                }
                                            ],
                                            "name": "promise"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'uncaughtException' , error: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'unhandledRejection' , reason: any, promise: Promise<any> ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "reason"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Promise",
                                            "typeArguments": [
                                                {
                                                    "typeName": "any"
                                                }
                                            ],
                                            "name": "promise"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'warning' , warning: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "warning"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'message' , message: any, sendHandle: any ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sendHandle"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: Signals ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'newListener' , eventName: string | symbol, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "eventName"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'removeListener' , eventName: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "eventName"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: 'beforeExit' , listener: BeforeExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'disconnect' , listener: DisconnectListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "DisconnectListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'exit' , listener: ExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'rejectionHandled' , listener: RejectionHandledListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'uncaughtException' , listener: UncaughtExceptionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'unhandledRejection' , listener: UnhandledRejectionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'warning' , listener: WarningListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WarningListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'message' , listener: MessageListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: Signals, listener: SignalsListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "SignalsListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'newListener' , listener: NewListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "NewListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'removeListener' , listener: RemoveListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: 'beforeExit' , listener: BeforeExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'disconnect' , listener: DisconnectListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "DisconnectListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'exit' , listener: ExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'rejectionHandled' , listener: RejectionHandledListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'uncaughtException' , listener: UncaughtExceptionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'unhandledRejection' , listener: UnhandledRejectionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'warning' , listener: WarningListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WarningListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'message' , listener: MessageListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: Signals, listener: SignalsListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "SignalsListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'newListener' , listener: NewListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "NewListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'removeListener' , listener: RemoveListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: 'beforeExit' , listener: BeforeExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'disconnect' , listener: DisconnectListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "DisconnectListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'exit' , listener: ExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'rejectionHandled' , listener: RejectionHandledListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'uncaughtException' , listener: UncaughtExceptionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'unhandledRejection' , listener: UnhandledRejectionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'warning' , listener: WarningListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WarningListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'message' , listener: MessageListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: Signals, listener: SignalsListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "SignalsListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'newListener' , listener: NewListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "NewListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'removeListener' , listener: RemoveListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: 'beforeExit' , listener: BeforeExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'disconnect' , listener: DisconnectListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "DisconnectListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'exit' , listener: ExitListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExitListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'rejectionHandled' , listener: RejectionHandledListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'uncaughtException' , listener: UncaughtExceptionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'unhandledRejection' , listener: UnhandledRejectionListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'warning' , listener: WarningListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "WarningListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'message' , listener: MessageListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: Signals, listener: SignalsListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "SignalsListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'newListener' , listener: NewListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "NewListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'removeListener' , listener: RemoveListenerListener ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener",
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "listeners",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "listeners( event: 'beforeExit'  ): BeforeExitListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "BeforeExitListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "beforeExit",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'disconnect'  ): DisconnectListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "DisconnectListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'exit'  ): ExitListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "ExitListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'rejectionHandled'  ): RejectionHandledListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "RejectionHandledListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "rejectionHandled",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'uncaughtException'  ): UncaughtExceptionListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "UncaughtExceptionListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "uncaughtException",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'unhandledRejection'  ): UnhandledRejectionListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "UnhandledRejectionListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unhandledRejection",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'warning'  ): WarningListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "WarningListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "warning",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'message'  ): MessageListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "MessageListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: Signals ): SignalsListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "SignalsListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Signals",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'newListener'  ): NewListenerListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "NewListenerListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newListener",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "listeners( event: 'removeListener'  ): RemoveListenerListener[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "RemoveListenerListener"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "removeListener",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Global",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Global",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Array: Array",
                                    "type": "Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ArrayBuffer",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ArrayBuffer: ArrayBuffer",
                                    "type": "ArrayBuffer",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Boolean",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Boolean: Boolean",
                                    "type": "Boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Buffer",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Buffer: Buffer",
                                    "type": "Buffer",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "DataView",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "DataView: DataView",
                                    "type": "DataView",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Date",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Date: Date",
                                    "type": "Date",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Error",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Error: Error",
                                    "type": "Error",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "EvalError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "EvalError: EvalError",
                                    "type": "EvalError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Float32Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Float32Array: Float32Array",
                                    "type": "Float32Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Float64Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Float64Array: Float64Array",
                                    "type": "Float64Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Function",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Function: Function",
                                    "type": "Function",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "GLOBAL",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "GLOBAL: Global",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Global"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Infinity",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Infinity: Infinity",
                                    "type": "Infinity",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Int16Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Int16Array: Int16Array",
                                    "type": "Int16Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Int32Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Int32Array: Int32Array",
                                    "type": "Int32Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Int8Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Int8Array: Int8Array",
                                    "type": "Int8Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Intl",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Intl: Intl",
                                    "type": "Intl",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "JSON",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "JSON: JSON",
                                    "type": "JSON",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Map",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Map: MapConstructor",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "MapConstructor"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Math",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Math: Math",
                                    "type": "Math",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "NaN",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "NaN: NaN",
                                    "type": "NaN",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Number",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Number: Number",
                                    "type": "Number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Object",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Object: Object",
                                    "type": "Object",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Promise",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Promise: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "RangeError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "RangeError: RangeError",
                                    "type": "RangeError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ReferenceError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ReferenceError: ReferenceError",
                                    "type": "ReferenceError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "RegExp",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "RegExp: RegExp",
                                    "type": "RegExp",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Set",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Set: SetConstructor",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "SetConstructor"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "String",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "String: String",
                                    "type": "String",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Symbol",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Symbol: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "SyntaxError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "SyntaxError: SyntaxError",
                                    "type": "SyntaxError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "TypeError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "TypeError: TypeError",
                                    "type": "TypeError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "URIError",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "URIError: URIError",
                                    "type": "URIError",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Uint16Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Uint16Array: Uint16Array",
                                    "type": "Uint16Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Uint32Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Uint32Array: Uint32Array",
                                    "type": "Uint32Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Uint8Array",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Uint8Array: Uint8Array",
                                    "type": "Uint8Array",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Uint8ClampedArray",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Uint8ClampedArray: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "WeakMap",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "WeakMap: WeakMapConstructor",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "WeakMapConstructor"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "WeakSet",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "WeakSet: WeakSetConstructor",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "WeakSetConstructor"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "clearImmediate",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "clearImmediate: ( immediateId: any ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "any",
                                                    "name": "immediateId"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "clearInterval",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "clearInterval: ( intervalId: NodeJS.Timer ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "NodeJS",
                                                            "Timer"
                                                        ]
                                                    },
                                                    "name": "intervalId"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "clearTimeout",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "clearTimeout: ( timeoutId: NodeJS.Timer ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "NodeJS",
                                                            "Timer"
                                                        ]
                                                    },
                                                    "name": "timeoutId"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "console",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "console: console",
                                    "type": "console",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "decodeURI",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "decodeURI: decodeURI",
                                    "type": "decodeURI",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "decodeURIComponent",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "decodeURIComponent: decodeURIComponent",
                                    "type": "decodeURIComponent",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "encodeURI",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encodeURI: encodeURI",
                                    "type": "encodeURI",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "encodeURIComponent",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encodeURIComponent: encodeURIComponent",
                                    "type": "encodeURIComponent",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "escape",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "escape: ( str: string ) => string",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "string",
                                                    "name": "str"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "string"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "eval",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "eval: eval",
                                    "type": "eval",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "global",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "global: Global",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Global"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "isFinite",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "isFinite: isFinite",
                                    "type": "isFinite",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "isNaN",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "isNaN: isNaN",
                                    "type": "isNaN",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "parseFloat",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "parseFloat: parseFloat",
                                    "type": "parseFloat",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "parseInt",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "parseInt: parseInt",
                                    "type": "parseInt",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "process",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "process: Process",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Process"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "root",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "root: Global",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Global"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setImmediate",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "setImmediate: ( callback: ( ...args: any[] ) => void, ...args: any[] ) => any",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "typeName": "any",
                                                                "isArray": true,
                                                                "name": "args",
                                                                "rest": true
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "callback"
                                                },
                                                {
                                                    "typeName": "any",
                                                    "isArray": true,
                                                    "name": "args",
                                                    "rest": true
                                                }
                                            ],
                                            "type": {
                                                "typeName": "any"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setInterval",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "setInterval: ( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ) => NodeJS.Timer",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "typeName": "any",
                                                                "isArray": true,
                                                                "name": "args",
                                                                "rest": true
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "callback"
                                                },
                                                {
                                                    "typeName": "number",
                                                    "name": "ms"
                                                },
                                                {
                                                    "typeName": "any",
                                                    "isArray": true,
                                                    "name": "args",
                                                    "rest": true
                                                }
                                            ],
                                            "type": {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "Timer"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "setTimeout: ( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ) => NodeJS.Timer",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "typeName": "any",
                                                                "isArray": true,
                                                                "name": "args",
                                                                "rest": true
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "callback"
                                                },
                                                {
                                                    "typeName": "number",
                                                    "name": "ms"
                                                },
                                                {
                                                    "typeName": "any",
                                                    "isArray": true,
                                                    "name": "args",
                                                    "rest": true
                                                }
                                            ],
                                            "type": {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "Timer"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "undefined",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "undefined: undefined",
                                    "type": "undefined",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "unescape",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "unescape: ( str: string ) => string",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "string",
                                                    "name": "str"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "string"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gc",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "gc: () => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "v8debug",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "v8debug: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Timer",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Timer",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "ref",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "ref(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "unref",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unref(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Module",
                    "namespaces": [
                        "NodeJS"
                    ],
                    "decls": [
                        {
                            "decl": "Module",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "exports",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "exports: any",
                                    "type": "any",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "require",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "require: NodeRequireFunction",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "NodeRequireFunction"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "id",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "id: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "filename",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "filename: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "loaded",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "loaded: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "parent",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "parent: Module | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Module"
                                                }
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "children",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "children: Module[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "Module"
                                        },
                                        "isArray": true
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "paths",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "paths: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                "NodeJS"
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( id: string, parent?: Module )",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "id"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Module",
                                            "name": "parent",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "IterableIterator",
            "decls": [
                {
                    "decl": "IterableIterator<T>",
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "T",
                    "flags": "TypeParameter",
                    "decls": [
                        {
                            "decl": "T",
                            "kind": "TypeParameter"
                        }
                    ]
                }
            ]
        },
        {
            "name": "NodeBuffer",
            "decls": [
                {
                    "decl": "NodeBuffer",
                    "heritage": [
                        {
                            "name": "Uint8Array"
                        }
                    ],
                    "kind": "InterfaceDeclaration"
                }
            ],
            "members": [
                {
                    "name": "write",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "write( string: string, offset?: number, length?: number, encoding?: string ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "string"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "length",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "encoding",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "__toString",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "toString( encoding?: string, start?: number, end?: number ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "encoding",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "start",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "end",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "toJSON",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "toJSON(): { type, data }",
                            "type": {
                                "type": "typeliteral",
                                "members": [
                                    {
                                        "typeName": "type",
                                        "name": "type"
                                    },
                                    {
                                        "typeName": "data",
                                        "name": "data"
                                    }
                                ]
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "equals",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "equals( otherBuffer: Buffer ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "otherBuffer"
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "compare",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "compare( otherBuffer: Buffer, targetStart?: number, targetEnd?: number, sourceStart?: number, sourceEnd?: number ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "otherBuffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "targetStart",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "targetEnd",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "sourceStart",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "sourceEnd",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "copy",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "copy( targetBuffer: Buffer, targetStart?: number, sourceStart?: number, sourceEnd?: number ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "targetBuffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "targetStart",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "sourceStart",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "sourceEnd",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "slice",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "slice( start?: number, end?: number ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "start",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "end",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUIntLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUIntLE( value: number, offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUIntBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUIntBE( value: number, offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeIntLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeIntLE( value: number, offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeIntBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeIntBE( value: number, offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUIntLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUIntLE( offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUIntBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUIntBE( offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readIntLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readIntLE( offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readIntBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readIntBE( offset: number, byteLength: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteLength"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUInt8",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUInt8( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUInt16LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUInt16LE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUInt16BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUInt16BE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUInt32LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUInt32LE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readUInt32BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readUInt32BE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readInt8",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readInt8( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readInt16LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readInt16LE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readInt16BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readInt16BE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readInt32LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readInt32LE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readInt32BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readInt32BE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readFloatLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readFloatLE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readFloatBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readFloatBE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readDoubleLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readDoubleLE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "readDoubleBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "readDoubleBE( offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "swap16",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "swap16(): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "swap32",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "swap32(): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "swap64",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "swap64(): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUInt8",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUInt8( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUInt16LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUInt16LE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUInt16BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUInt16BE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUInt32LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUInt32LE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeUInt32BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeUInt32BE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeInt8",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeInt8( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeInt16LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeInt16LE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeInt16BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeInt16BE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeInt32LE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeInt32LE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeInt32BE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeInt32BE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeFloatLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeFloatLE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeFloatBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeFloatBE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeDoubleLE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeDoubleLE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "writeDoubleBE",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "writeDoubleBE( value: number, offset: number, noAssert?: boolean ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "noAssert",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "fill",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "fill( value: any, offset?: number, end?: number ): ThisType",
                            "type": "ThisType",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "end",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "indexOf",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "indexOf( value: string | number | Buffer, byteOffset?: number, encoding?: string ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteOffset",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "encoding",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "lastIndexOf",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "lastIndexOf( value: string | number | Buffer, byteOffset?: number, encoding?: string ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteOffset",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "encoding",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "entries",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "entries(): IterableIterator<[ number, number ]>",
                            "type": {
                                "type": "reference",
                                "typeName": "IterableIterator",
                                "typeArguments": [
                                    {
                                        "type": "tuple",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "number"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "includes",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "includes( value: string | number | Buffer, byteOffset?: number, encoding?: string ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "value"
                                },
                                {
                                    "typeName": "number",
                                    "name": "byteOffset",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "encoding",
                                    "optional": true
                                }
                            ],
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "keys",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "keys(): IterableIterator<number>",
                            "type": {
                                "type": "reference",
                                "typeName": "IterableIterator",
                                "typeArguments": [
                                    {
                                        "typeName": "number"
                                    }
                                ]
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                },
                {
                    "name": "values",
                    "flags": "Method",
                    "decls": [
                        {
                            "decl": "values(): IterableIterator<number>",
                            "type": {
                                "type": "reference",
                                "typeName": "IterableIterator",
                                "typeArguments": [
                                    {
                                        "typeName": "number"
                                    }
                                ]
                            },
                            "kind": "MethodSignature"
                        }
                    ]
                }
            ]
        },
        {
            "name": "buffer",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "querystring",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "StringifyOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "StringifyOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encodeURIComponent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "encodeURIComponent: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ParseOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ParseOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "maxKeys",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxKeys: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "decodeURIComponent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "decodeURIComponent: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ParsedUrlQuery",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ParsedUrlQuery",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Index",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Signature",
                            "decls": [
                                {
                                    "decl": "[ key: string ]: UnionType",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "key"
                                        }
                                    ],
                                    "kind": "IndexSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "stringify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "stringify<T>( obj: T, sep?: string, eq?: string, options?: StringifyOptions ): string",
                            "type": "string",
                            "typeParameters": [
                                {
                                    "typeName": "T",
                                    "name": "T"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "T",
                                    "name": "obj"
                                },
                                {
                                    "typeName": "string",
                                    "name": "sep",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "eq",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "StringifyOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "parse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "parse( str: string, sep?: string, eq?: string, options?: ParseOptions ): ParsedUrlQuery",
                            "type": {
                                "type": "reference",
                                "typeName": "ParsedUrlQuery"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "str"
                                },
                                {
                                    "typeName": "string",
                                    "name": "sep",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "eq",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ParseOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "parse<T extends TypeLiteral>( str: string, sep?: string, eq?: string, options?: ParseOptions ): T",
                            "type": {
                                "type": "reference",
                                "typeName": "T"
                            },
                            "typeParameters": [
                                {
                                    "typeName": "TypeLiteral",
                                    "name": "T",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "str"
                                },
                                {
                                    "typeName": "string",
                                    "name": "sep",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "eq",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ParseOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "escape",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "escape( str: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "str"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "unescape",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unescape( str: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "str"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "events",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "http",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "IncomingHttpHeaders",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "IncomingHttpHeaders",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "accept",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-allow-origin",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-allow-credentials",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-expose-headers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-max-age",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-allow-methods",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "access-control-allow-headers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "accept-patch",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "accept-ranges",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "age",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "allow",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "alt-svc",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cache-control",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-disposition",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-language",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-length",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-location",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-range",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "content-type",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "date",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "expires",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "last-modified",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "location",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pragma",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "proxy-authenticate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "public-key-pins",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "retry-after",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "set-cookie",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "strict-transport-security",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "trailer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "transfer-encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "tk",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "upgrade",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "vary",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "via",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "warning",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "www-authenticate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": ": string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "Index",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Signature",
                            "decls": [
                                {
                                    "decl": "[ header: string ]: UnionType",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "header"
                                        }
                                    ],
                                    "kind": "IndexSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "OutgoingHttpHeaders",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "OutgoingHttpHeaders",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Index",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Signature",
                            "decls": [
                                {
                                    "decl": "[ header: string ]: UnionType",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "header"
                                        }
                                    ],
                                    "kind": "IndexSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientRequestArgs",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientRequestArgs",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "protocol",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "protocol: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hostname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "hostname: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "family: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: number | string",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "defaultPort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "defaultPort: number | string",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "localAddress",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "localAddress: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "socketPath",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "socketPath: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "method",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "method: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "headers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "headers: OutgoingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "OutgoingHttpHeaders"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "auth",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "auth: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "agent: Agent | boolean",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Agent"
                                                }
                                            },
                                            {
                                                "typeName": "boolean"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "_defaultAgent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "_defaultAgent: Agent",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Agent"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "createConnection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "createConnection: ( options: ClientRequestArgs, oncreate: ( err: Error, socket: net.Socket ) => void ) => net.Socket",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": "ClientRequestArgs",
                                                    "name": "options"
                                                },
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": "Error",
                                                                "name": "err"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                },
                                                                "name": "socket"
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "oncreate"
                                                }
                                            ],
                                            "type": {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "net",
                                                        "Socket"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Server",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Server",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( requestListener?: ( req: IncomingMessage, res: ServerResponse ) => void )",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingMessage",
                                                        "name": "req"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerResponse",
                                                        "name": "res"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "requestListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs?: number, callback?: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "setTimeout( callback: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "maxHeadersCount",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "maxHeadersCount: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "keepAliveTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "keepAliveTimeout: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerRequest",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerRequest",
                            "heritage": [
                                {
                                    "name": "IncomingMessage"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connection: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "OutgoingMessage",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "OutgoingMessage",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "upgrading",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "upgrading: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "chunkedEncoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "chunkedEncoding: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "shouldKeepAlive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "shouldKeepAlive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "useChunkedEncodingByDefault",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "useChunkedEncodingByDefault: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "sendDate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "sendDate: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "finished",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "finished: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "headersSent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "headersSent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connection: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "()",
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback?: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( error: Error ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setHeader( name: string, value: number | string | string[] ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                }
                                            ],
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeader( name: string ): number | string | string[] | undefined",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "typeName": "undefined"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeaders(): OutgoingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "OutgoingHttpHeaders"
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getHeaderNames",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeaderNames(): string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "hasHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "hasHeader( name: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "removeHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeHeader( name: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addTrailers( headers: OutgoingHttpHeaders | Array<[ string, string ]> ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "OutgoingHttpHeaders"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Array"
                                                    },
                                                    "typeArguments": [
                                                        {
                                                            "type": "tuple",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "typeName": "string"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "headers"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "flushHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "flushHeaders(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerResponse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerResponse",
                            "heritage": [
                                {
                                    "name": "OutgoingMessage"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "statusCode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "statusCode: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "statusMessage",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "statusMessage: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( req: IncomingMessage )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingMessage",
                                            "name": "req"
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "assignSocket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "assignSocket( socket: net.Socket ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            },
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "detachSocket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "detachSocket( socket: net.Socket ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            },
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "writeContinue",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "writeContinue( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "writeHead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "writeHead( statusCode: number, reasonPhrase?: string, headers?: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "statusCode"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "reasonPhrase",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "writeHead( statusCode: number, headers?: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "statusCode"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientRequest",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientRequest",
                            "heritage": [
                                {
                                    "name": "OutgoingMessage"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connection: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "aborted",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "aborted: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( url: string | URL | ClientRequestArgs, cb?: ( res: IncomingMessage ) => void )",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "URL"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "ClientRequestArgs"
                                                    }
                                                }
                                            ],
                                            "name": "url"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingMessage",
                                                        "name": "res"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "abort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "abort(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "onSocket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "onSocket( socket: net.Socket ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            },
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( timeout: number, callback?: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "timeout"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setNoDelay",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setNoDelay( noDelay?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "noDelay",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setSocketKeepAlive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setSocketKeepAlive( enable?: boolean, initialDelay?: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "enable",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "initialDelay",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "IncomingMessage",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "IncomingMessage",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( socket: net.Socket )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            },
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "httpVersion",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "httpVersion: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "httpVersionMajor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "httpVersionMajor: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "httpVersionMinor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "httpVersionMinor: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connection: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "headers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "headers: IncomingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IncomingHttpHeaders"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "rawHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rawHeaders: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "trailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "trailers: { [ key: string ]: string | undefined }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "type": "index",
                                                "typeName": {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "typeName": "string"
                                                        },
                                                        {
                                                            "typeName": "undefined"
                                                        }
                                                    ]
                                                },
                                                "parameters": [
                                                    {
                                                        "name": "key",
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "rawTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rawTrailers: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "method",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "method: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "url",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "url: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "statusCode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "statusCode: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "statusMessage",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "statusMessage: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( error?: Error ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientResponse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientResponse",
                            "heritage": [
                                {
                                    "name": "IncomingMessage"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ]
                },
                {
                    "name": "AgentOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "AgentOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "keepAlive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "keepAlive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "keepAliveMsecs",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "keepAliveMsecs: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxSockets",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxSockets: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxFreeSockets",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxFreeSockets: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Agent",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Agent",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "maxSockets",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "maxSockets: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "sockets",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "sockets: any",
                                    "type": "any",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "requests",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "requests: any",
                                    "type": "any",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( opts?: AgentOptions )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "AgentOptions",
                                            "name": "opts",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createServer( requestListener?: ( request: IncomingMessage, response: ServerResponse ) => void ): Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Server"
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "IncomingMessage",
                                                "name": "request"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "ServerResponse",
                                                "name": "response"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "requestListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createClient",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createClient( port?: number, host?: string ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "port",
                                    "optional": true
                                },
                                {
                                    "typeName": "string",
                                    "name": "host",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "RequestOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RequestOptions",
                            "heritage": [
                                {
                                    "name": "ClientRequestArgs"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "request",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "request( options: RequestOptions | string | URL, callback?: ( res: IncomingMessage ) => void ): ClientRequest",
                            "type": {
                                "type": "reference",
                                "typeName": "ClientRequest"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RequestOptions"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "URL"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "IncomingMessage",
                                                "name": "res"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "get",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "get( options: RequestOptions | string | URL, callback?: ( res: IncomingMessage ) => void ): ClientRequest",
                            "type": {
                                "type": "reference",
                                "typeName": "ClientRequest"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RequestOptions"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "URL"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "IncomingMessage",
                                                "name": "res"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "cluster",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ClusterSettings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClusterSettings",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "execArgv",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "execArgv: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exec",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exec: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "args",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "args: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "silent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "silent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any[]",
                                    "type": {
                                        "typeName": "any",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClusterSetupMasterSettings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClusterSetupMasterSettings",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "exec",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exec: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "args",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "args: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "silent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "silent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any[]",
                                    "type": {
                                        "typeName": "any",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Address",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Address",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addressType",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "addressType: number | 'udp4'  | 'udp6' ",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "number"
                                            },
                                            {
                                                "type": "literal",
                                                "typeName": "string",
                                                "value": "udp4"
                                            },
                                            {
                                                "type": "literal",
                                                "typeName": "string",
                                                "value": "udp6"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Worker",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Worker",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "id",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "id: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "process",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "process: child.ChildProcess",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "child",
                                                "ChildProcess"
                                            ]
                                        }
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "suicide",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "suicide: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "send( message: any, sendHandle?: any, callback?: ( error: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sendHandle",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "kill",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "kill( signal?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "signal",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( signal?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "signal",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disconnect(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isConnected",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isConnected(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isDead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isDead(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "exitedAfterDisconnect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "exitedAfterDisconnect: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'listening' , listener: ( address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'message' , listener: ( message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'online' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'disconnect'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'error' , error: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'exit' , code: number, signal: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "signal"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'listening' , address: Address ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Address",
                                            "name": "address"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'message' , message: any, handle: net.Socket | net.Server ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Server"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "handle"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'online'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'listening' , listener: ( address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'message' , listener: ( message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'online' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'listening' , listener: ( address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'message' , listener: ( message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'online' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'listening' , listener: ( address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'message' , listener: ( message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'online' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'listening' , listener: ( address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'message' , listener: ( message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'online' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Cluster",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Cluster",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Worker",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "Worker: Worker",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Worker"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disconnect( callback?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "fork",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "fork( env?: any ): Worker",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Worker"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "env",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "isMaster",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "isMaster: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "isWorker",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "isWorker: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "settings",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "settings: ClusterSettings",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ClusterSettings"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setupMaster",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setupMaster( settings?: ClusterSetupMasterSettings ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "ClusterSetupMasterSettings",
                                            "name": "settings",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "worker",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "worker: Worker",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Worker"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "workers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "workers: { [ index: string ]: Worker | undefined }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "type": "index",
                                                "typeName": {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": {
                                                                "name": "Worker"
                                                            }
                                                        },
                                                        {
                                                            "typeName": "undefined"
                                                        }
                                                    ]
                                                },
                                                "parameters": [
                                                    {
                                                        "name": "index",
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'fork' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'online' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'setup' , listener: ( settings: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'disconnect' , worker: Worker ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'exit' , worker: Worker, code: number, signal: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "signal"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'fork' , worker: Worker ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'listening' , worker: Worker, address: Address ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Address",
                                            "name": "address"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'message' , worker: Worker, message: any, handle: net.Socket | net.Server ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Server"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "handle"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'online' , worker: Worker ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Worker",
                                            "name": "worker"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'setup' , settings: any ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "settings"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'disconnect' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'fork' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'online' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'setup' , listener: ( settings: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'disconnect' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'fork' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'online' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'setup' , listener: ( settings: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'fork' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'online' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'setup' , listener: ( settings: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'fork' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "fork",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Address",
                                                        "name": "address"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "handle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'online' , listener: ( worker: Worker ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "online",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Worker",
                                                        "name": "worker"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'setup' , listener: ( settings: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "setup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "disconnect( callback?: Function ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fork",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fork( env?: any ): Worker",
                            "type": {
                                "type": "reference",
                                "typeName": "Worker"
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "env",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setupMaster",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setupMaster( settings?: ClusterSetupMasterSettings ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ClusterSetupMasterSettings",
                                    "name": "settings",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "addListener",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "code"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "signal"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'fork' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Address",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "any",
                                                "name": "message"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Server"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "handle"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'online' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "addListener( event: 'setup' , listener: ( settings: any ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "name": "settings"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "emit",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "symbol"
                                        }
                                    ],
                                    "name": "event"
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "args",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'disconnect' , worker: Worker ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'exit' , worker: Worker, code: number, signal: string ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                },
                                {
                                    "typeName": "number",
                                    "name": "code"
                                },
                                {
                                    "typeName": "string",
                                    "name": "signal"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'fork' , worker: Worker ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'listening' , worker: Worker, address: Address ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Address",
                                    "name": "address"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'message' , worker: Worker, message: any, handle: net.Socket | net.Server ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                },
                                {
                                    "typeName": "any",
                                    "name": "message"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Server"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": "handle"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'online' , worker: Worker ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Worker",
                                    "name": "worker"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "emit( event: 'setup' , settings: any ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "typeName": "any",
                                    "name": "settings"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "on",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "on( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'disconnect' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "code"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "signal"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'fork' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Address",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "any",
                                                "name": "message"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Server"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "handle"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'online' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "on( event: 'setup' , listener: ( settings: any ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "name": "settings"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "once",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "once( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'disconnect' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "code"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "signal"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'fork' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Address",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "any",
                                                "name": "message"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Server"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "handle"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'online' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "once( event: 'setup' , listener: ( settings: any ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "name": "settings"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "removeListener",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "removeListener( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "removeAllListeners",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "removeAllListeners( event?: string ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setMaxListeners",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setMaxListeners( n: number ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "n"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getMaxListeners",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getMaxListeners(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "listeners",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "listeners( event: string ): Function[]",
                            "type": {
                                "typeName": {
                                    "type": "reference",
                                    "typeName": "Function"
                                },
                                "isArray": true
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "listenerCount",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "listenerCount( type: string ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "type"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "prependListener",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "code"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "signal"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'fork' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Address",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "any",
                                                "name": "message"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Server"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "handle"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'online' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependListener( event: 'setup' , listener: ( settings: any ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "name": "settings"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "prependOnceListener",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'disconnect' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "disconnect",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'exit' , listener: ( worker: Worker, code: number, signal: string ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "exit",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "code"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "signal"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'fork' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "fork",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'listening' , listener: ( worker: Worker, address: Address ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "listening",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Address",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'message' , listener: ( worker: Worker, message: any, handle: net.Socket | net.Server ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "message",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            },
                                            {
                                                "typeName": "any",
                                                "name": "message"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Server"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "handle"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'online' , listener: ( worker: Worker ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "online",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Worker",
                                                "name": "worker"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "prependOnceListener( event: 'setup' , listener: ( settings: any ) => void ): Cluster",
                            "type": {
                                "type": "reference",
                                "typeName": "Cluster"
                            },
                            "parameters": [
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "setup",
                                    "name": "event"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "name": "settings"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "eventNames",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "eventNames(): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "zlib",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ZlibOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ZlibOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "flush",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "flush: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "finishFlush",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "finishFlush: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "chunkSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "chunkSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "windowBits",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "windowBits: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "level",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "level: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "memLevel",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "memLevel: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "strategy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "strategy: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "dictionary",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "dictionary: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Zlib",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Zlib",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "bytesRead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bytesRead: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "flush",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "flush( kind?: number | ( () => void ), callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "type": "parens",
                                                    "types": {
                                                        "type": "function",
                                                        "definition": {
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "name": "kind",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ZlibParams",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ZlibParams",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "params",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "params( level: number, strategy: number, callback: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "level"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "strategy"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ZlibReset",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ZlibReset",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "reset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "reset(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Gzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Gzip",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Gunzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Gunzip",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Deflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Deflate",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                },
                                {
                                    "name": "ZlibReset"
                                },
                                {
                                    "name": "ZlibParams"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Inflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Inflate",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                },
                                {
                                    "name": "ZlibReset"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "DeflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "DeflateRaw",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                },
                                {
                                    "name": "ZlibReset"
                                },
                                {
                                    "name": "ZlibParams"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "InflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "InflateRaw",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                },
                                {
                                    "name": "ZlibReset"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "Unzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Unzip",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                },
                                {
                                    "name": "Zlib"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "createGzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createGzip( options?: ZlibOptions ): Gzip",
                            "type": {
                                "type": "reference",
                                "typeName": "Gzip"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createGunzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createGunzip( options?: ZlibOptions ): Gunzip",
                            "type": {
                                "type": "reference",
                                "typeName": "Gunzip"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createDeflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createDeflate( options?: ZlibOptions ): Deflate",
                            "type": {
                                "type": "reference",
                                "typeName": "Deflate"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createInflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createInflate( options?: ZlibOptions ): Inflate",
                            "type": {
                                "type": "reference",
                                "typeName": "Inflate"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createDeflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createDeflateRaw( options?: ZlibOptions ): DeflateRaw",
                            "type": {
                                "type": "reference",
                                "typeName": "DeflateRaw"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createInflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createInflateRaw( options?: ZlibOptions ): InflateRaw",
                            "type": {
                                "type": "reference",
                                "typeName": "InflateRaw"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createUnzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createUnzip( options?: ZlibOptions ): Unzip",
                            "type": {
                                "type": "reference",
                                "typeName": "Unzip"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "deflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "deflate( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "deflate( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "deflateSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "deflateSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "deflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "deflateRaw( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "deflateRaw( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "deflateRawSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "deflateRawSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "gzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "gzip( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "gzip( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "gzipSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "gzipSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "gunzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "gunzip( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "gunzip( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "gunzipSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "gunzipSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "inflate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "inflate( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "inflate( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "inflateSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "inflateSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "inflateRaw",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "inflateRaw( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "inflateRaw( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "inflateRawSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "inflateRawSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "unzip",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unzip( buf: Buffer | string, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "unzip( buf: Buffer | string, options: ZlibOptions, callback: ( error: Error | null, result: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "result"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "unzipSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unzipSync( buf: Buffer | string, options?: ZlibOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "buf"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ZlibOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "constants",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "constants",
                            "kind": "ModuleDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "os",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "CpuInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "CpuInfo",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "model",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "model: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "speed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "speed: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "times",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "times: { user, nice, sys, idle, irq }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "user",
                                                "name": "user"
                                            },
                                            {
                                                "typeName": "nice",
                                                "name": "nice"
                                            },
                                            {
                                                "typeName": "sys",
                                                "name": "sys"
                                            },
                                            {
                                                "typeName": "idle",
                                                "name": "idle"
                                            },
                                            {
                                                "typeName": "irq",
                                                "name": "irq"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NetworkInterfaceBase",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NetworkInterfaceBase",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "netmask",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "netmask: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "mac",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "mac: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "internal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "internal: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NetworkInterfaceInfoIPv4",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NetworkInterfaceInfoIPv4",
                            "heritage": [
                                {
                                    "name": "NetworkInterfaceBase"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "family: 'IPv4' ",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "IPv4"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NetworkInterfaceInfoIPv6",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NetworkInterfaceInfoIPv6",
                            "heritage": [
                                {
                                    "name": "NetworkInterfaceBase"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "family: 'IPv6' ",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "IPv6"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "scopeid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "scopeid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NetworkInterfaceInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NetworkInterfaceInfo: NetworkInterfaceInfoIPv4 | NetworkInterfaceInfoIPv6",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "NetworkInterfaceInfoIPv4"
                                        }
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "NetworkInterfaceInfoIPv6"
                                        }
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "hostname",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "hostname(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "loadavg",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "loadavg(): number[]",
                            "type": {
                                "typeName": "number",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "uptime",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "uptime(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "freemem",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "freemem(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "totalmem",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "totalmem(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "cpus",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "cpus(): CpuInfo[]",
                            "type": {
                                "typeName": {
                                    "type": "reference",
                                    "typeName": "CpuInfo"
                                },
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "type",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "type(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "release",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "release(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "networkInterfaces",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "networkInterfaces(): { [ index: string ]: NetworkInterfaceInfo[] }",
                            "type": {
                                "type": "typeliteral",
                                "members": [
                                    {
                                        "type": "index",
                                        "typeName": {
                                            "typeName": {
                                                "type": "reference",
                                                "typeName": "NetworkInterfaceInfo"
                                            },
                                            "isArray": true
                                        },
                                        "parameters": [
                                            {
                                                "name": "index",
                                                "type": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "homedir",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "homedir(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "userInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "userInfo( options?: { encoding ): { username, uid, gid, shell, homedir }",
                            "type": {
                                "type": "typeliteral",
                                "members": [
                                    {
                                        "typeName": "username",
                                        "name": "username"
                                    },
                                    {
                                        "typeName": "uid",
                                        "name": "uid"
                                    },
                                    {
                                        "typeName": "gid",
                                        "name": "gid"
                                    },
                                    {
                                        "typeName": "shell",
                                        "name": "shell"
                                    },
                                    {
                                        "typeName": "homedir",
                                        "name": "homedir"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "type": "typeliteral",
                                    "members": [
                                        {
                                            "typeName": "encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "arch",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "arch(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "platform",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "platform(): NodeJS.Platform",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "NodeJS",
                                        "Platform"
                                    ]
                                }
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "tmpdir",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "tmpdir(): string",
                            "type": "string",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "endianness",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "endianness(): 'BE'  | 'LE' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "BE"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "LE"
                                    }
                                ]
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "https",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ServerOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "pfx",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "pfx: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "key: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "passphrase",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "passphrase: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cert: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ca",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ca: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "crl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "crl: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ciphers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ciphers: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "honorCipherOrder",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "honorCipherOrder: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "requestCert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "requestCert: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rejectUnauthorized",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "rejectUnauthorized: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "NPNProtocols",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "NPNProtocols: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "SNICallback",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "SNICallback: ( servername: string, cb: ( err: Error | null, ctx: tls.SecureContext ) => void ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "string",
                                                    "name": "servername"
                                                },
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "type": "union",
                                                                "types": [
                                                                    {
                                                                        "type": "reference",
                                                                        "typeName": {
                                                                            "name": "Error"
                                                                        }
                                                                    },
                                                                    {
                                                                        "typeName": "null"
                                                                    }
                                                                ],
                                                                "name": "err"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "SecureContext"
                                                                    ]
                                                                },
                                                                "name": "ctx"
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "cb"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Agent",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Agent",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( options?: AgentOptions )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "AgentOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Server",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Server",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( callback: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "setTimeout( msecs?: number, callback?: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "keepAliveTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "keepAliveTimeout: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createServer( options: ServerOptions, requestListener?: ( req: http.IncomingMessage, res: http.ServerResponse ) => void ): Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Server"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ServerOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "http",
                                                        "IncomingMessage"
                                                    ]
                                                },
                                                "name": "req"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "http",
                                                        "ServerResponse"
                                                    ]
                                                },
                                                "name": "res"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "requestListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "request",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "request( options: RequestOptions | string | URL, callback?: ( res: http.IncomingMessage ) => void ): http.ClientRequest",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "http",
                                        "ClientRequest"
                                    ]
                                }
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RequestOptions"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "URL"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "http",
                                                        "IncomingMessage"
                                                    ]
                                                },
                                                "name": "res"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "get",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "get( options: RequestOptions | string | URL, callback?: ( res: http.IncomingMessage ) => void ): http.ClientRequest",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "http",
                                        "ClientRequest"
                                    ]
                                }
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RequestOptions"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "URL"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "http",
                                                        "IncomingMessage"
                                                    ]
                                                },
                                                "name": "res"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "punycode",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "decode",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "decode( string: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "string"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "encode",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "encode( string: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "string"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "toUnicode",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "toUnicode( domain: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "domain"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "toASCII",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "toASCII( domain: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "domain"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "repl",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ReplOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ReplOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "prompt",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "prompt: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "input",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "input: NodeJS.ReadableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "ReadableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "output",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "output: NodeJS.WritableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "WritableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "terminal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "terminal: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "eval",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "eval: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "useColors",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "useColors: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "useGlobal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "useGlobal: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ignoreUndefined",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ignoreUndefined: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "writer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "writer: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "completer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "completer: Function",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Function"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "replMode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "replMode: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "breakEvalOnSigint",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "breakEvalOnSigint: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "REPLServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "REPLServer",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "context",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "context: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "inputStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "inputStream: NodeJS.ReadableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "ReadableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "outputStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "outputStream: NodeJS.WritableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "WritableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "defineCommand",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "defineCommand( keyword: string, cmd: Function | { help, action } ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "keyword"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Function"
                                                    }
                                                },
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "help",
                                                            "name": "help"
                                                        },
                                                        {
                                                            "typeName": "action",
                                                            "name": "action"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "cmd"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "displayPrompt",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "displayPrompt( preserveCursor?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "preserveCursor",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'exit' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'reset' , listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'exit'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'reset' , context: any ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "context"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'exit' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'reset' , listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'exit' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'reset' , listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'exit' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'reset' , listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'exit' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'reset' , listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "reset",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "start",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "start( options?: string | ReplOptions ): REPLServer",
                            "type": {
                                "type": "reference",
                                "typeName": "REPLServer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "ReplOptions"
                                            }
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Recoverable",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Recoverable",
                            "heritage": [
                                {
                                    "name": "SyntaxError"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "err",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "err: Error",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Error"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( err: Error )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "readline",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Key",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Key",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "sequence",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sequence: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ctrl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ctrl: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "meta",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "meta: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "shift",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "shift: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ReadLine",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ReadLine",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "setPrompt",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setPrompt( prompt: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "prompt"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prompt",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prompt( preserveCursor?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "preserveCursor",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "question",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "question( query: string, callback: ( answer: string ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "query"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "answer"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "pause",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "pause(): ReadLine",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ReadLine"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "resume",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "resume(): ReadLine",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ReadLine"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "write",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "write( data: string | Buffer, key?: Key ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Key",
                                            "name": "key",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'line' , listener: ( input: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "input"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'pause' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'resume' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'SIGCONT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'SIGINT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'SIGTSTP' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'line' , input: any ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "input"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'pause'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'resume'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'SIGCONT'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'SIGINT'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'SIGTSTP'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'line' , listener: ( input: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "input"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'pause' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'resume' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'SIGCONT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'SIGINT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'SIGTSTP' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'line' , listener: ( input: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "input"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'pause' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'resume' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'SIGCONT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'SIGINT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'SIGTSTP' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'line' , listener: ( input: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "input"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'pause' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'resume' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'SIGCONT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'SIGINT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'SIGTSTP' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'line' , listener: ( input: any ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "line",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "input"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'pause' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pause",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'resume' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resume",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'SIGCONT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGCONT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'SIGINT' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGINT",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'SIGTSTP' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SIGTSTP",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Completer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Completer: ( line: string ) => CompleterResult",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "line"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "CompleterResult"
                                        }
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "AsyncCompleter",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "AsyncCompleter: ( line: string, callback: ( err: any, result: CompleterResult ) => void ) => any",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "line"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "CompleterResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "any"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "CompleterResult",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "CompleterResult: [ string[], string ]",
                            "type": {
                                "type": "tuple",
                                "types": [
                                    {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    {
                                        "typeName": "string"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "ReadLineOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ReadLineOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "input",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "input: NodeJS.ReadableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "ReadableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "output",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "output: NodeJS.WritableStream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "NodeJS",
                                                "WritableStream"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "completer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "completer: Completer | AsyncCompleter",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Completer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "AsyncCompleter"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "terminal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "terminal: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "historySize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "historySize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createInterface",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createInterface( input: NodeJS.ReadableStream, output?: NodeJS.WritableStream, completer?: Completer | AsyncCompleter, terminal?: boolean ): ReadLine",
                            "type": {
                                "type": "reference",
                                "typeName": "ReadLine"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "ReadableStream"
                                        ]
                                    },
                                    "name": "input"
                                },
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "WritableStream"
                                        ]
                                    },
                                    "name": "output",
                                    "optional": true
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Completer"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "AsyncCompleter"
                                            }
                                        }
                                    ],
                                    "name": "completer",
                                    "optional": true
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "terminal",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createInterface( options: ReadLineOptions ): ReadLine",
                            "type": {
                                "type": "reference",
                                "typeName": "ReadLine"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ReadLineOptions",
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "cursorTo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "cursorTo( stream: NodeJS.WritableStream, x: number, y?: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "WritableStream"
                                        ]
                                    },
                                    "name": "stream"
                                },
                                {
                                    "typeName": "number",
                                    "name": "x"
                                },
                                {
                                    "typeName": "number",
                                    "name": "y",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "emitKeypressEvents",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "emitKeypressEvents( stream: NodeJS.ReadableStream, interface?: ReadLine ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "ReadableStream"
                                        ]
                                    },
                                    "name": "stream"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ReadLine",
                                    "name": "interface",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "moveCursor",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "moveCursor( stream: NodeJS.WritableStream, dx: number | string, dy: number | string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "WritableStream"
                                        ]
                                    },
                                    "name": "stream"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "dx"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "dy"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "clearLine",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "clearLine( stream: NodeJS.WritableStream, dir: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "WritableStream"
                                        ]
                                    },
                                    "name": "stream"
                                },
                                {
                                    "typeName": "number",
                                    "name": "dir"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "clearScreenDown",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "clearScreenDown( stream: NodeJS.WritableStream ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "WritableStream"
                                        ]
                                    },
                                    "name": "stream"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "vm",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Context",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Context",
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "ScriptOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ScriptOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "filename",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "filename: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lineOffset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lineOffset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "columnOffset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "columnOffset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "displayErrors",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "displayErrors: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cachedData",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cachedData: Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "produceCachedData",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "produceCachedData: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "RunningScriptOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RunningScriptOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "filename",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "filename: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lineOffset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lineOffset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "columnOffset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "columnOffset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "displayErrors",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "displayErrors: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Script",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Script",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( code: string, options?: ScriptOptions )",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "code"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ScriptOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "runInContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "runInContext( contextifiedSandbox: Context, options?: RunningScriptOptions ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Context",
                                            "name": "contextifiedSandbox"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RunningScriptOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "runInNewContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "runInNewContext( sandbox?: Context, options?: RunningScriptOptions ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Context",
                                            "name": "sandbox",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "RunningScriptOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "runInThisContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "runInThisContext( options?: RunningScriptOptions ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "RunningScriptOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createContext( sandbox?: Context ): Context",
                            "type": {
                                "type": "reference",
                                "typeName": "Context"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Context",
                                    "name": "sandbox",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isContext( sandbox: Context ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Context",
                                    "name": "sandbox"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "runInContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "runInContext( code: string, contextifiedSandbox: Context, options?: RunningScriptOptions ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "code"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Context",
                                    "name": "contextifiedSandbox"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "RunningScriptOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "runInDebugContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "runInDebugContext( code: string ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "code"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "runInNewContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "runInNewContext( code: string, sandbox?: Context, options?: RunningScriptOptions ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "code"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Context",
                                    "name": "sandbox",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "RunningScriptOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "runInThisContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "runInThisContext( code: string, options?: RunningScriptOptions ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "code"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "RunningScriptOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "child_process",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ChildProcess",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ChildProcess",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "stdin",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdin: stream.Writable",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "stream",
                                                "Writable"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdout: stream.Readable",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "stream",
                                                "Readable"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stderr",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stderr: stream.Readable",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "stream",
                                                "Readable"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdio: [ stream.Writable, stream.Readable, stream.Readable ]",
                                    "type": {
                                        "type": "tuple",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "stream",
                                                        "Writable"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "stream",
                                                        "Readable"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "stream",
                                                        "Readable"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "killed: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "kill",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "kill( signal?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "signal",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "send( message: any, callback?: ( error: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "send( message: any, sendHandle?: net.Socket | net.Server, callback?: ( error: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Server"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "sendHandle",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "send( message: any, sendHandle?: net.Socket | net.Server, options?: MessageOptions, callback?: ( error: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Server"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "sendHandle",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "MessageOptions",
                                            "name": "options",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "connected",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connected: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disconnect(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "unref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unref(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "ref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "ref(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'message' , listener: ( message: any, sendHandle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "sendHandle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'close' , code: number, signal: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "signal"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'disconnect'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'exit' , code: number, signal: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "signal"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'message' , message: any, sendHandle: net.Socket | net.Server ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "message"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Server"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "sendHandle"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'message' , listener: ( message: any, sendHandle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "sendHandle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'message' , listener: ( message: any, sendHandle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "sendHandle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'message' , listener: ( message: any, sendHandle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "sendHandle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'disconnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "disconnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'exit' , listener: ( code: number, signal: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "exit",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "signal"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'message' , listener: ( message: any, sendHandle: net.Socket | net.Server ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "message"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Server"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "sendHandle"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "MessageOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "MessageOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "keepOpen",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "keepOpen: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SpawnOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SpawnOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "detached",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "detached: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "shell",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "shell: boolean | string",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "boolean"
                                            },
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "windowsVerbatimArguments",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "windowsVerbatimArguments: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "spawn",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "spawn( command: string, args?: string[], options?: SpawnOptions ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "ExecOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "shell",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "shell: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxBuffer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxBuffer: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killSignal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "killSignal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecOptionsWithStringEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecOptionsWithStringEncoding",
                            "heritage": [
                                {
                                    "name": "ExecOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: BufferEncoding",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "BufferEncoding"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecOptionsWithBufferEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecOptionsWithBufferEncoding",
                            "heritage": [
                                {
                                    "name": "ExecOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "exec",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "exec( command: string, callback?: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec( command: string, options: { encoding & ExecOptions, callback?: ( error: Error | null, stdout: Buffer, stderr: Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "intersection",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "ExecOptions"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec( command: string, options: { encoding & ExecOptions, callback?: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "intersection",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "ExecOptions"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec( command: string, options: { encoding & ExecOptions, callback?: ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "intersection",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "ExecOptions"
                                            }
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec( command: string, options: ExecOptions, callback?: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec( command: string, options: ( { encoding & ExecOptions ) | undefined | null, callback?: ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "intersection",
                                                "types": [
                                                    {
                                                        "type": "typeliteral",
                                                        "members": [
                                                            {
                                                                "typeName": "encoding",
                                                                "name": "encoding",
                                                                "optional": true
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "ExecOptions"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exec",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "exec"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( command: string ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "command"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( command: string, options: { encoding & ExecOptions ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "command"
                                        },
                                        {
                                            "type": "intersection",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "ExecOptions"
                                                    }
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( command: string, options: ExecOptions ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "command"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( command: string, options?: ( { encoding & ExecOptions ) | null ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "command"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "parens",
                                                    "types": {
                                                        "type": "intersection",
                                                        "types": [
                                                            {
                                                                "type": "typeliteral",
                                                                "members": [
                                                                    {
                                                                        "typeName": "encoding",
                                                                        "name": "encoding",
                                                                        "optional": true
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "ExecOptions"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxBuffer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxBuffer: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killSignal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "killSignal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "windowsVerbatimArguments",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "windowsVerbatimArguments: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileOptionsWithStringEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileOptionsWithStringEncoding",
                            "heritage": [
                                {
                                    "name": "ExecFileOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: BufferEncoding",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "BufferEncoding"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileOptionsWithBufferEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileOptionsWithBufferEncoding",
                            "heritage": [
                                {
                                    "name": "ExecFileOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: 'buffer'  | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "typeName": "string",
                                                "value": "buffer"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileOptionsWithOtherEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileOptionsWithOtherEncoding",
                            "heritage": [
                                {
                                    "name": "ExecFileOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "execFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "execFile( file: string ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ( { encoding & ExecFileOptions ) | undefined | null ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "intersection",
                                                "types": [
                                                    {
                                                        "type": "typeliteral",
                                                        "members": [
                                                            {
                                                                "typeName": "encoding",
                                                                "name": "encoding",
                                                                "optional": true
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "ExecFileOptions"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ( { encoding & ExecFileOptions ) | undefined | null ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "intersection",
                                                "types": [
                                                    {
                                                        "type": "typeliteral",
                                                        "members": [
                                                            {
                                                                "typeName": "encoding",
                                                                "name": "encoding",
                                                                "optional": true
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "ExecFileOptions"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ExecFileOptionsWithBufferEncoding, callback: ( error: Error | null, stdout: Buffer, stderr: Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithBufferEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithBufferEncoding, callback: ( error: Error | null, stdout: Buffer, stderr: Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithBufferEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ExecFileOptionsWithStringEncoding, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithStringEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithStringEncoding, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithStringEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ExecFileOptionsWithOtherEncoding, callback: ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithOtherEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithOtherEncoding, callback: ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptionsWithOtherEncoding",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stdout"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ExecFileOptions, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ExecFileOptions, callback: ( error: Error | null, stdout: string, stderr: string ) => void ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Error"
                                                        }
                                                    },
                                                    {
                                                        "typeName": "null"
                                                    }
                                                ],
                                                "name": "error"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stdout"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "stderr"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, options: ( { encoding & ExecFileOptions ) | undefined | null, callback: ( ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ) | undefined | null ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "intersection",
                                                "types": [
                                                    {
                                                        "type": "typeliteral",
                                                        "members": [
                                                            {
                                                                "typeName": "encoding",
                                                                "name": "encoding",
                                                                "optional": true
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "ExecFileOptions"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Error"
                                                                    }
                                                                },
                                                                {
                                                                    "typeName": "null"
                                                                }
                                                            ],
                                                            "name": "error"
                                                        },
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Buffer"
                                                                    }
                                                                }
                                                            ],
                                                            "name": "stdout"
                                                        },
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Buffer"
                                                                    }
                                                                }
                                                            ],
                                                            "name": "stderr"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile( file: string, args: string[] | undefined | null, options: ( { encoding & ExecFileOptions ) | undefined | null, callback: ( ( error: Error | null, stdout: string | Buffer, stderr: string | Buffer ) => void ) | undefined | null ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "file"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string",
                                            "isArray": true
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "args"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "intersection",
                                                "types": [
                                                    {
                                                        "type": "typeliteral",
                                                        "members": [
                                                            {
                                                                "typeName": "encoding",
                                                                "name": "encoding",
                                                                "optional": true
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "ExecFileOptions"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "parens",
                                            "types": {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Error"
                                                                    }
                                                                },
                                                                {
                                                                    "typeName": "null"
                                                                }
                                                            ],
                                                            "name": "error"
                                                        },
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Buffer"
                                                                    }
                                                                }
                                                            ],
                                                            "name": "stdout"
                                                        },
                                                        {
                                                            "type": "union",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": {
                                                                        "name": "Buffer"
                                                                    }
                                                                }
                                                            ],
                                                            "name": "stderr"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFile",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "execFile"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( file: string ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, options: ExecFileOptionsWithBufferEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithBufferEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithBufferEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithBufferEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, options: ExecFileOptionsWithStringEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithStringEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithStringEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithStringEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, options: ExecFileOptionsWithOtherEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithOtherEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null, options: ExecFileOptionsWithOtherEncoding ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptionsWithOtherEncoding",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, options: ExecFileOptions ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null, options: ExecFileOptions ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ExecFileOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, options: ( { encoding & ExecFileOptions ) | undefined | null ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "parens",
                                                    "types": {
                                                        "type": "intersection",
                                                        "types": [
                                                            {
                                                                "type": "typeliteral",
                                                                "members": [
                                                                    {
                                                                        "typeName": "encoding",
                                                                        "name": "encoding",
                                                                        "optional": true
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "ExecFileOptions"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( file: string, args: string[] | undefined | null, options: ( { encoding & ExecFileOptions ) | undefined | null ): Promise<{ stdout, stderr }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "stdout",
                                                        "name": "stdout"
                                                    },
                                                    {
                                                        "typeName": "stderr",
                                                        "name": "stderr"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "file"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "args"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "parens",
                                                    "types": {
                                                        "type": "intersection",
                                                        "types": [
                                                            {
                                                                "type": "typeliteral",
                                                                "members": [
                                                                    {
                                                                        "typeName": "encoding",
                                                                        "name": "encoding",
                                                                        "optional": true
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "ExecFileOptions"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "typeName": "undefined"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ForkOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ForkOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "execPath",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "execPath: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "execArgv",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "execArgv: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "silent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "silent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any[]",
                                    "type": {
                                        "typeName": "any",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "windowsVerbatimArguments",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "windowsVerbatimArguments: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fork",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fork( modulePath: string, args?: string[], options?: ForkOptions ): ChildProcess",
                            "type": {
                                "type": "reference",
                                "typeName": "ChildProcess"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "modulePath"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ForkOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "SpawnSyncOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SpawnSyncOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "input",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "input: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killSignal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "killSignal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxBuffer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxBuffer: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "shell",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "shell: boolean | string",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "boolean"
                                            },
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "windowsVerbatimArguments",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "windowsVerbatimArguments: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SpawnSyncOptionsWithStringEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SpawnSyncOptionsWithStringEncoding",
                            "heritage": [
                                {
                                    "name": "SpawnSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: BufferEncoding",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "BufferEncoding"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SpawnSyncOptionsWithBufferEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SpawnSyncOptionsWithBufferEncoding",
                            "heritage": [
                                {
                                    "name": "SpawnSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SpawnSyncReturns",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SpawnSyncReturns<T>",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "T",
                            "namespaces": [
                                ""
                            ],
                            "flags": "TypeParameter",
                            "decls": [
                                {
                                    "decl": "T",
                                    "kind": "TypeParameter"
                                }
                            ]
                        },
                        {
                            "name": "pid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "output",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "output: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stdout: T",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "T"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stderr",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stderr: T",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "T"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "status",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "status: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "signal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "signal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "error",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "error: Error",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Error"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "spawnSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "spawnSync( command: string ): SpawnSyncReturns<Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, options?: SpawnSyncOptionsWithStringEncoding ): SpawnSyncReturns<string>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "typeName": "string"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptionsWithStringEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, options?: SpawnSyncOptionsWithBufferEncoding ): SpawnSyncReturns<Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptionsWithBufferEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, options?: SpawnSyncOptions ): SpawnSyncReturns<Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, args?: string[], options?: SpawnSyncOptionsWithStringEncoding ): SpawnSyncReturns<string>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "typeName": "string"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptionsWithStringEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, args?: string[], options?: SpawnSyncOptionsWithBufferEncoding ): SpawnSyncReturns<Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptionsWithBufferEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "spawnSync( command: string, args?: string[], options?: SpawnSyncOptions ): SpawnSyncReturns<Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "SpawnSyncReturns",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "SpawnSyncOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "ExecSyncOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecSyncOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "input",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "input: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "shell",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "shell: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killSignal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "killSignal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxBuffer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxBuffer: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecSyncOptionsWithStringEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecSyncOptionsWithStringEncoding",
                            "heritage": [
                                {
                                    "name": "ExecSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: BufferEncoding",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "BufferEncoding"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecSyncOptionsWithBufferEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecSyncOptionsWithBufferEncoding",
                            "heritage": [
                                {
                                    "name": "ExecSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "execSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "execSync( command: string ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execSync( command: string, options?: ExecSyncOptionsWithStringEncoding ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecSyncOptionsWithStringEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execSync( command: string, options?: ExecSyncOptionsWithBufferEncoding ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecSyncOptionsWithBufferEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execSync( command: string, options?: ExecSyncOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecSyncOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "ExecFileSyncOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileSyncOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "cwd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cwd: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "input",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "input: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stdio",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "stdio: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "env",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "env: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "killSignal",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "killSignal: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxBuffer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxBuffer: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileSyncOptionsWithStringEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileSyncOptionsWithStringEncoding",
                            "heritage": [
                                {
                                    "name": "ExecFileSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: BufferEncoding",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "BufferEncoding"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ExecFileSyncOptionsWithBufferEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ExecFileSyncOptionsWithBufferEncoding",
                            "heritage": [
                                {
                                    "name": "ExecFileSyncOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encoding: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "execFileSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "execFileSync( command: string ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, options?: ExecFileSyncOptionsWithStringEncoding ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptionsWithStringEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, options?: ExecFileSyncOptionsWithBufferEncoding ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptionsWithBufferEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, options?: ExecFileSyncOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, args?: string[], options?: ExecFileSyncOptionsWithStringEncoding ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptionsWithStringEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, args?: string[], options?: ExecFileSyncOptionsWithBufferEncoding ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptionsWithBufferEncoding",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "execFileSync( command: string, args?: string[], options?: ExecFileSyncOptions ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "command"
                                },
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "args",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ExecFileSyncOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "url",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "UrlObjectCommon",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "UrlObjectCommon",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "auth",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "auth: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hash",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "hash: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hostname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "hostname: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "href",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "href: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pathname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "pathname: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "protocol",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "protocol: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "search",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "search: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "slashes",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "slashes: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "UrlObject",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "UrlObject",
                            "heritage": [
                                {
                                    "name": "UrlObjectCommon"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: string | number",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "number"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "query",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "query: string | null | { [ key: string ]: any }",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            },
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "type": "index",
                                                        "typeName": "any",
                                                        "parameters": [
                                                            {
                                                                "name": "key",
                                                                "type": "string"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Url",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Url",
                            "heritage": [
                                {
                                    "name": "UrlObjectCommon"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "query",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "query: string | null | ParsedUrlQuery",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "ParsedUrlQuery"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "parse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "parse( urlStr: string, parseQueryString?: boolean, slashesDenoteHost?: boolean ): Url",
                            "type": {
                                "type": "reference",
                                "typeName": "Url"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "urlStr"
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "parseQueryString",
                                    "optional": true
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "slashesDenoteHost",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "format",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "format( URL: URL, options?: URLFormatOptions ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "URL",
                                    "name": "URL"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "URLFormatOptions",
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "format( urlObject: UrlObject | string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "UrlObject"
                                            }
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "urlObject"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolve( from: string, to: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "from"
                                },
                                {
                                    "typeName": "string",
                                    "name": "to"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "URLFormatOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "URLFormatOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "auth",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "auth: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "fragment",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "fragment: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "search",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "search: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "unicode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "unicode: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "URLSearchParams",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "URLSearchParams",
                            "heritage": [
                                {
                                    "name": "Iterable",
                                    "typeArguments": [
                                        "TupleType"
                                    ]
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( init?: URLSearchParams | string | { [ key: string ]: string | string[] | undefined } | Iterable<[ string, string ]> | Array<[ string, string ]> )",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "URLSearchParams"
                                                    }
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "type": "index",
                                                            "typeName": {
                                                                "type": "union",
                                                                "types": [
                                                                    {
                                                                        "typeName": "string"
                                                                    },
                                                                    {
                                                                        "typeName": "string",
                                                                        "isArray": true
                                                                    },
                                                                    {
                                                                        "typeName": "undefined"
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "name": "key",
                                                                    "type": "string"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Iterable"
                                                    },
                                                    "typeArguments": [
                                                        {
                                                            "type": "tuple",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "typeName": "string"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Array"
                                                    },
                                                    "typeArguments": [
                                                        {
                                                            "type": "tuple",
                                                            "types": [
                                                                {
                                                                    "typeName": "string"
                                                                },
                                                                {
                                                                    "typeName": "string"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "init",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "append",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "append( name: string, value: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "delete",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "delete( name: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "entries",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "entries(): IterableIterator<[ string, string ]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IterableIterator",
                                        "typeArguments": [
                                            {
                                                "type": "tuple",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "typeName": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "forEach",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "forEach( callback: ( value: string, name: string ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "value"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "name"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "get( name: string ): string | null",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "null"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getAll",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getAll( name: string ): string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "has",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "has( name: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "keys",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "keys(): IterableIterator<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IterableIterator",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "set",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "set( name: string, value: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "sort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "sort(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "__toString",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "toString(): string",
                                    "type": "string",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "values",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "values(): IterableIterator<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IterableIterator",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "__@iterator",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "(): IterableIterator<[ string, string ]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IterableIterator",
                                        "typeArguments": [
                                            {
                                                "type": "tuple",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "typeName": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "URL",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "URL",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( input: string, base?: string | URL )",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "input"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "URL"
                                                    }
                                                }
                                            ],
                                            "name": "base",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "hash",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "hash: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "hostname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "hostname: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "href",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "href: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "origin",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "origin: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "password",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "password: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "pathname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pathname: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "protocol",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "protocol: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "search",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "search: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "searchParams",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "searchParams: URLSearchParams",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "URLSearchParams"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "username",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "username: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "__toString",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "toString(): string",
                                    "type": "string",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "toJSON",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "toJSON(): string",
                                    "type": "string",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "dns",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "LookupOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "LookupOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "family: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hints",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "hints: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "all",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "all: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "LookupOneOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "LookupOneOptions",
                            "heritage": [
                                {
                                    "name": "LookupOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "all",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "all: false",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "boolean",
                                        "value": false
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "LookupAllOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "LookupAllOptions",
                            "heritage": [
                                {
                                    "name": "LookupOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "all",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "all: true",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "boolean",
                                        "value": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "LookupAddress",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "LookupAddress",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "family: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "lookup",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lookup( hostname: string, family: number, callback: ( err: NodeJS.ErrnoException, address: string, family: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "typeName": "number",
                                    "name": "family"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "address"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "family"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lookup( hostname: string, options: LookupOneOptions, callback: ( err: NodeJS.ErrnoException, address: string, family: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "LookupOneOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "address"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "family"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lookup( hostname: string, options: LookupAllOptions, callback: ( err: NodeJS.ErrnoException, addresses: LookupAddress[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "LookupAllOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "LookupAddress"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lookup( hostname: string, options: LookupOptions, callback: ( err: NodeJS.ErrnoException, address: string | LookupAddress[], family: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "LookupOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "LookupAddress"
                                                        },
                                                        "isArray": true
                                                    }
                                                ],
                                                "name": "address"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "family"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lookup( hostname: string, callback: ( err: NodeJS.ErrnoException, address: string, family: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "address"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "family"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lookup",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "lookup"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( hostname: string, options: LookupAllOptions ): Promise<{ address>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "address",
                                                        "name": "address"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "LookupAllOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options?: LookupOneOptions | number ): Promise<{ address, family }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "address",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "typeName": "family",
                                                        "name": "family"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "LookupOneOptions"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options?: LookupOptions | number ): Promise<{ address, family }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "address",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "typeName": "family",
                                                        "name": "family",
                                                        "optional": true
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "LookupOptions"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ResolveOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ResolveOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "ttl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ttl: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ResolveWithTtlOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ResolveWithTtlOptions",
                            "heritage": [
                                {
                                    "name": "ResolveOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "ttl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ttl: true",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "boolean",
                                        "value": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "RecordWithTtl",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RecordWithTtl",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ttl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ttl: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "MxRecord",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "MxRecord",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "priority",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "priority: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exchange",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "exchange: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NaptrRecord",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NaptrRecord",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "flags",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "flags: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "service",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "service: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "regexp",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "regexp: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "replacement",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "replacement: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "order",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "order: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "preference",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "preference: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SoaRecord",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SoaRecord",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "nsname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "nsname: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hostmaster",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "hostmaster: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "serial",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "serial: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "refresh",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "refresh: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "retry",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "retry: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "expire",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "expire: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "minttl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "minttl: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SrvRecord",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SrvRecord",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "priority",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "priority: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "weight",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "weight: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolve( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'A' , callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "A",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'AAAA' , callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "AAAA",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'CNAME' , callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "CNAME",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'MX' , callback: ( err: NodeJS.ErrnoException, addresses: MxRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "MX",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "MxRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'NAPTR' , callback: ( err: NodeJS.ErrnoException, addresses: NaptrRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "NAPTR",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "NaptrRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'NS' , callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "NS",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'PTR' , callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "PTR",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'SOA' , callback: ( err: NodeJS.ErrnoException, addresses: SoaRecord ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "SOA",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "SoaRecord",
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'SRV' , callback: ( err: NodeJS.ErrnoException, addresses: SrvRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "SRV",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "SrvRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: 'TXT' , callback: ( err: NodeJS.ErrnoException, addresses: string[][] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "literal",
                                    "typeName": "string",
                                    "value": "TXT",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve( hostname: string, rrtype: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] | MxRecord[] | NaptrRecord[] | SoaRecord | SrvRecord[] | string[][] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "typeName": "string",
                                    "name": "rrtype"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "MxRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "NaptrRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "SoaRecord"
                                                        }
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "SrvRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "typeName": "string",
                                                            "isArray": true
                                                        },
                                                        "isArray": true
                                                    }
                                                ],
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "resolve"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( hostname: string, rrtype?: 'A'  | 'AAAA'  | 'CNAME'  | 'NS'  | 'PTR'  ): Promise<string[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "A"
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "AAAA"
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "CNAME"
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "NS"
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "PTR"
                                                }
                                            ],
                                            "name": "rrtype",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype: 'MX'  ): Promise<MxRecord[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "MxRecord"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "MX",
                                            "name": "rrtype"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype: 'NAPTR'  ): Promise<NaptrRecord[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "NaptrRecord"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "NAPTR",
                                            "name": "rrtype"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype: 'SOA'  ): Promise<SoaRecord>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "SoaRecord"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SOA",
                                            "name": "rrtype"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype: 'SRV'  ): Promise<SrvRecord[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "SrvRecord"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "SRV",
                                            "name": "rrtype"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype: 'TXT'  ): Promise<string[][]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "TXT",
                                            "name": "rrtype"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, rrtype?: string ): Promise<string[] | MxRecord[] | NaptrRecord[] | SoaRecord | SrvRecord[] | string[][]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "MxRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "NaptrRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "SoaRecord"
                                                        }
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "SrvRecord"
                                                        },
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "typeName": "string",
                                                            "isArray": true
                                                        },
                                                        "isArray": true
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "rrtype",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "resolve4",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolve4( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve4( hostname: string, options: ResolveWithTtlOptions, callback: ( err: NodeJS.ErrnoException, addresses: RecordWithTtl[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ResolveWithTtlOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "RecordWithTtl"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve4( hostname: string, options: ResolveOptions, callback: ( err: NodeJS.ErrnoException, addresses: string[] | RecordWithTtl[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ResolveOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "RecordWithTtl"
                                                        },
                                                        "isArray": true
                                                    }
                                                ],
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve4",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "resolve4"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( hostname: string ): Promise<string[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options: ResolveWithTtlOptions ): Promise<RecordWithTtl[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "RecordWithTtl"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ResolveWithTtlOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options?: ResolveOptions ): Promise<string[] | RecordWithTtl[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "RecordWithTtl"
                                                        },
                                                        "isArray": true
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ResolveOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "resolve6",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolve6( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve6( hostname: string, options: ResolveWithTtlOptions, callback: ( err: NodeJS.ErrnoException, addresses: RecordWithTtl[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ResolveWithTtlOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "RecordWithTtl"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve6( hostname: string, options: ResolveOptions, callback: ( err: NodeJS.ErrnoException, addresses: string[] | RecordWithTtl[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ResolveOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "RecordWithTtl"
                                                        },
                                                        "isArray": true
                                                    }
                                                ],
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "resolve6",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "resolve6"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( hostname: string ): Promise<string[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options: ResolveWithTtlOptions ): Promise<RecordWithTtl[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "RecordWithTtl"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ResolveWithTtlOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( hostname: string, options?: ResolveOptions ): Promise<string[] | RecordWithTtl[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string",
                                                        "isArray": true
                                                    },
                                                    {
                                                        "typeName": {
                                                            "type": "reference",
                                                            "typeName": "RecordWithTtl"
                                                        },
                                                        "isArray": true
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ResolveOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "resolveCname",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveCname( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveMx",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveMx( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: MxRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "MxRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveNaptr",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveNaptr( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: NaptrRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "NaptrRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveNs",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveNs( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolvePtr",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolvePtr( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveSoa",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveSoa( hostname: string, callback: ( err: NodeJS.ErrnoException, address: SoaRecord ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "SoaRecord",
                                                "name": "address"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveSrv",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveSrv( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: SrvRecord[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "SrvRecord"
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolveTxt",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolveTxt( hostname: string, callback: ( err: NodeJS.ErrnoException, addresses: string[][] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "hostname"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "typeName": "string",
                                                    "isArray": true
                                                },
                                                "isArray": true,
                                                "name": "addresses"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "reverse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "reverse( ip: string, callback: ( err: NodeJS.ErrnoException, hostnames: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "ip"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "hostnames"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setServers",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setServers( servers: string[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "servers"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "net",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "LookupFunction",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "LookupFunction: ( hostname: string, options: dns.LookupOneOptions, callback: ( err: NodeJS.ErrnoException | null, address: string, family: number ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostname"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "dns",
                                                    "LookupOneOptions"
                                                ]
                                            },
                                            "name": "options"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "NodeJS",
                                                                        "ErrnoException"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "family"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "SocketConstructorOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SocketConstructorOpts",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "fd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "fd: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "allowHalfOpen",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "allowHalfOpen: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "readable",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "readable: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "writable",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "writable: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "TcpSocketConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "TcpSocketConnectOpts",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "localAddress",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "localAddress: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "localPort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "localPort: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "hints",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "hints: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "family: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lookup",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lookup: LookupFunction",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "LookupFunction"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "IpcSocketConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "IpcSocketConnectOpts",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SocketConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SocketConnectOpts: TcpSocketConnectOpts | IpcSocketConnectOpts",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "TcpSocketConnectOpts"
                                        }
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "IpcSocketConnectOpts"
                                        }
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Socket",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Socket",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( options?: SocketConstructorOpts )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "SocketConstructorOpts",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "write",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "write( buffer: Buffer ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "write( buffer: Buffer, cb?: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "write( str: string, cb?: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "write( str: string, encoding?: string, cb?: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "write( str: string, encoding?: string, fd?: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "fd",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "write( data: any, encoding?: string, callback?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "data"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "connect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "connect( options: SocketConnectOpts, connectionListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "SocketConnectOpts",
                                            "name": "options"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "connect( port: number, host: string, connectionListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "host"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "connect( port: number, connectionListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "connect( path: string, connectionListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "path"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bufferSize: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setEncoding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setEncoding( encoding?: string ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy( err?: any ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "err",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "pause",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "pause(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "resume",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "resume(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( timeout: number, callback?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "timeout"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setNoDelay",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setNoDelay( noDelay?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "noDelay",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setKeepAlive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setKeepAlive( enable?: boolean, initialDelay?: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "enable",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "initialDelay",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "address(): { port, family, address }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "port",
                                                "name": "port"
                                            },
                                            {
                                                "typeName": "family",
                                                "name": "family"
                                            },
                                            {
                                                "typeName": "address",
                                                "name": "address"
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "unref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unref(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "ref(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "remoteAddress",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "remoteAddress: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "remoteFamily",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "remoteFamily: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "remotePort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "remotePort: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "localAddress",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "localAddress: string",
                                    "type": "string",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "localPort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "localPort: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bytesRead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bytesRead: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bytesWritten",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bytesWritten: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "connecting",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connecting: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroyed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "destroyed: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "end",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "end(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "end( buffer: Buffer, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "end( str: string, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "end( str: string, encoding?: string, cb?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "str"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "cb",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "end( data?: any, encoding?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "data",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: ( had_error: boolean ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "had_error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'connect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'data' , listener: ( data: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'lookup' , listener: ( err: Error, address: string, family: string | number, host: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "typeName": "number"
                                                            }
                                                        ],
                                                        "name": "family"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "host"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'close' , had_error: boolean ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "boolean",
                                            "name": "had_error"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'connect'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'data' , data: Buffer ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'drain'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'end'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'lookup' , err: Error, address: string, family: string | number, host: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "address"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "family"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "host"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'timeout'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: ( had_error: boolean ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "had_error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'connect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'data' , listener: ( data: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'lookup' , listener: ( err: Error, address: string, family: string | number, host: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "typeName": "number"
                                                            }
                                                        ],
                                                        "name": "family"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "host"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: ( had_error: boolean ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "had_error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'connect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'data' , listener: ( data: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'lookup' , listener: ( err: Error, address: string, family: string | number, host: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "typeName": "number"
                                                            }
                                                        ],
                                                        "name": "family"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "host"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: ( had_error: boolean ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "had_error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'connect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'data' , listener: ( data: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'lookup' , listener: ( err: Error, address: string, family: string | number, host: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "typeName": "number"
                                                            }
                                                        ],
                                                        "name": "family"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "host"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: ( had_error: boolean ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "had_error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'connect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'data' , listener: ( data: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'lookup' , listener: ( err: Error, address: string, family: string | number, host: string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "lookup",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "address"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "typeName": "number"
                                                            }
                                                        ],
                                                        "name": "family"
                                                    },
                                                    {
                                                        "typeName": "string",
                                                        "name": "host"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ListenOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ListenOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "backlog",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "backlog: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exclusive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exclusive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Server",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Server",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( connectionListener?: ( socket: Socket ) => void )",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                },
                                {
                                    "decl": "( options?: { allowHalfOpen, pauseOnConnect }, connectionListener?: ( socket: Socket ) => void )",
                                    "parameters": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "allowHalfOpen",
                                                    "name": "allowHalfOpen",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "pauseOnConnect",
                                                    "name": "pauseOnConnect",
                                                    "optional": true
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "connectionListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "listen",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "listen( port?: number, hostname?: string, backlog?: number, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "hostname",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "backlog",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( port?: number, hostname?: string, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "hostname",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( port?: number, backlog?: number, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "backlog",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( port?: number, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( path: string, backlog?: number, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "path"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "backlog",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( path: string, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "path"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( options: ListenOptions, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "ListenOptions",
                                            "name": "options"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( handle: any, backlog?: number, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "handle"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "backlog",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "listen( handle: any, listeningListener?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "name": "handle"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "listeningListener",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close( callback?: Function ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "address(): { port, family, address }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "port",
                                                "name": "port"
                                            },
                                            {
                                                "typeName": "family",
                                                "name": "family"
                                            },
                                            {
                                                "typeName": "address",
                                                "name": "address"
                                            }
                                        ]
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getConnections",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getConnections( cb: ( error: Error | null, count: number ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Error"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "error"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "count"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "cb"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "ref(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "unref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unref(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "maxConnections",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "maxConnections: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "connections",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connections: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "listening",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "listening: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'connection' , listener: ( socket: Socket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'connection' , socket: Socket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Socket",
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'listening'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'connection' , listener: ( socket: Socket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'connection' , listener: ( socket: Socket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'connection' , listener: ( socket: Socket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'connection' , listener: ( socket: Socket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Socket",
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "TcpNetConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "TcpNetConnectOpts",
                            "heritage": [
                                {
                                    "name": "TcpSocketConnectOpts"
                                },
                                {
                                    "name": "SocketConstructorOpts"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "IpcNetConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "IpcNetConnectOpts",
                            "heritage": [
                                {
                                    "name": "IpcSocketConnectOpts"
                                },
                                {
                                    "name": "SocketConstructorOpts"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "timeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "timeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "NetConnectOpts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NetConnectOpts: TcpNetConnectOpts | IpcNetConnectOpts",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "TcpNetConnectOpts"
                                        }
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "IpcNetConnectOpts"
                                        }
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "createServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createServer( connectionListener?: ( socket: Socket ) => void ): Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Server"
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Socket",
                                                "name": "socket"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createServer( options?: { allowHalfOpen, pauseOnConnect }, connectionListener?: ( socket: Socket ) => void ): Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Server"
                            },
                            "parameters": [
                                {
                                    "type": "typeliteral",
                                    "members": [
                                        {
                                            "typeName": "allowHalfOpen",
                                            "name": "allowHalfOpen",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "pauseOnConnect",
                                            "name": "pauseOnConnect",
                                            "optional": true
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Socket",
                                                "name": "socket"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "connect",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "connect( options: NetConnectOpts, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "NetConnectOpts",
                                    "name": "options"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "connect( port: number, host?: string, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "port"
                                },
                                {
                                    "typeName": "string",
                                    "name": "host",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "connect( path: string, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "path"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createConnection",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createConnection( options: NetConnectOpts, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "NetConnectOpts",
                                    "name": "options"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createConnection( port: number, host?: string, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "port"
                                },
                                {
                                    "typeName": "string",
                                    "name": "host",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createConnection( path: string, connectionListener?: Function ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "path"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "connectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isIP",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isIP( input: string ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "input"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isIPv4",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isIPv4( input: string ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "input"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isIPv6",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isIPv6( input: string ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "input"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "dgram",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "RemoteInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RemoteInfo",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "family: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "AddressInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "AddressInfo",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "family",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "family: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "BindOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "BindOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "address: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exclusive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exclusive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SocketType",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SocketType: 'udp4'  | 'udp6' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "udp4"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "udp6"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "SocketOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SocketOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "type",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "type: SocketType",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "SocketType"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "reuseAddr",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "reuseAddr: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "recvBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "recvBufferSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "sendBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sendBufferSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lookup",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lookup: ( hostname: string, options: dns.LookupOneOptions, callback: ( err: NodeJS.ErrnoException, address: string, family: number ) => void ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "string",
                                                    "name": "hostname"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "dns",
                                                            "LookupOneOptions"
                                                        ]
                                                    },
                                                    "name": "options"
                                                },
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "NodeJS",
                                                                        "ErrnoException"
                                                                    ]
                                                                },
                                                                "name": "err"
                                                            },
                                                            {
                                                                "typeName": "string",
                                                                "name": "address"
                                                            },
                                                            {
                                                                "typeName": "number",
                                                                "name": "family"
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "callback"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createSocket",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createSocket( type: SocketType, callback?: ( msg: Buffer, rinfo: RemoteInfo ) => void ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "SocketType",
                                    "name": "type"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "msg"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "RemoteInfo",
                                                "name": "rinfo"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createSocket( options: SocketOptions, callback?: ( msg: Buffer, rinfo: RemoteInfo ) => void ): Socket",
                            "type": {
                                "type": "reference",
                                "typeName": "Socket"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "SocketOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "msg"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "RemoteInfo",
                                                "name": "rinfo"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Socket",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Socket",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "send",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "send( msg: Buffer | String | any[], port: number, address: string, callback?: ( error: Error | null, bytes: number ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "String"
                                                    }
                                                },
                                                {
                                                    "typeName": "any",
                                                    "isArray": true
                                                }
                                            ],
                                            "name": "msg"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "port"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "address"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Error"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "error"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "bytes"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "send( msg: Buffer | String | any[], offset: number, length: number, port: number, address: string, callback?: ( error: Error | null, bytes: number ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "String"
                                                    }
                                                },
                                                {
                                                    "typeName": "any",
                                                    "isArray": true
                                                }
                                            ],
                                            "name": "msg"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "offset"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "length"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "port"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "address"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Error"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "error"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "bytes"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bind",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "bind( port?: number, address?: string, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "address",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "bind( port?: number, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "port",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "bind( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "bind( options: BindOptions, callback?: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "BindOptions",
                                            "name": "options"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "address(): AddressInfo",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "AddressInfo"
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setBroadcast",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setBroadcast( flag: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "flag"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setTTL",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTTL( ttl: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "ttl"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setMulticastTTL",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setMulticastTTL( ttl: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "ttl"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setMulticastInterface",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setMulticastInterface( multicastInterface: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "multicastInterface"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setMulticastLoopback",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setMulticastLoopback( flag: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "flag"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addMembership",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addMembership( multicastAddress: string, multicastInterface?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "multicastAddress"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "multicastInterface",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "dropMembership",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "dropMembership( multicastAddress: string, multicastInterface?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "multicastAddress"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "multicastInterface",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "ref(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "unref",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "unref(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setRecvBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setRecvBufferSize( size: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "size"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setSendBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setSendBufferSize( size: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "size"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getRecvBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getRecvBufferSize(): number",
                                    "type": "number",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getSendBufferSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getSendBufferSize(): number",
                                    "type": "number",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'message' , listener: ( msg: Buffer, rinfo: AddressInfo ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "msg"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "AddressInfo",
                                                        "name": "rinfo"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'listening'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'message' , msg: Buffer, rinfo: AddressInfo ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "msg"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "AddressInfo",
                                            "name": "rinfo"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'message' , listener: ( msg: Buffer, rinfo: AddressInfo ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "msg"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "AddressInfo",
                                                        "name": "rinfo"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'message' , listener: ( msg: Buffer, rinfo: AddressInfo ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "msg"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "AddressInfo",
                                                        "name": "rinfo"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'message' , listener: ( msg: Buffer, rinfo: AddressInfo ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "msg"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "AddressInfo",
                                                        "name": "rinfo"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'listening' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "listening",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'message' , listener: ( msg: Buffer, rinfo: AddressInfo ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "message",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "msg"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "AddressInfo",
                                                        "name": "rinfo"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "fs",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "PathLike",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PathLike: string | Buffer | URL",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "typeName": "string"
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "URL"
                                        }
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Stats",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Stats",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "isFile",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isFile(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isDirectory",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isDirectory(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isBlockDevice",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isBlockDevice(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isCharacterDevice",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isCharacterDevice(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isSymbolicLink",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isSymbolicLink(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isFIFO",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isFIFO(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isSocket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "isSocket(): boolean",
                                    "type": "boolean",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "dev",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "dev: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ino",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ino: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "mode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "mode: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "nlink",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "nlink: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "uid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "uid: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "gid",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "gid: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "rdev",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rdev: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "size: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "blksize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "blksize: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "blocks",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "blocks: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "atimeMs",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "atimeMs: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "mtimeMs",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "mtimeMs: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ctimeMs",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ctimeMs: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "birthtimeMs",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "birthtimeMs: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "atime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "atime: Date",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Date"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "mtime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "mtime: Date",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Date"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "ctime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ctime: Date",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Date"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "birthtime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "birthtime: Date",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Date"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "FSWatcher",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "FSWatcher",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'change' , listener: ( eventType: string, filename: string | Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "change",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "eventType"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ],
                                                        "name": "filename"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'change' , listener: ( eventType: string, filename: string | Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "change",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "eventType"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ],
                                                        "name": "filename"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'change' , listener: ( eventType: string, filename: string | Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "change",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "eventType"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ],
                                                        "name": "filename"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'change' , listener: ( eventType: string, filename: string | Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "change",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "eventType"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ],
                                                        "name": "filename"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'change' , listener: ( eventType: string, filename: string | Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "change",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "string",
                                                        "name": "eventType"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ],
                                                        "name": "filename"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ReadStream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ReadStream",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bytesRead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bytesRead: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "path: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "WriteStream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "WriteStream",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "close",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "close(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bytesWritten",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bytesWritten: number",
                                    "type": "number",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "path: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'open' , listener: ( fd: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "open",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "fd"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "rename",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "rename( oldPath: PathLike, newPath: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "oldPath"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "newPath"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "rename",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "rename"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( oldPath: PathLike, newPath: PathLike ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "oldPath"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "newPath"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "renameSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "renameSync( oldPath: PathLike, newPath: PathLike ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "oldPath"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "newPath"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "truncate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "truncate( path: PathLike, len: number | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "len"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "truncate( path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "truncate",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "truncate"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, len?: number | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "len",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "truncateSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "truncateSync( path: PathLike, len?: number | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "len",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "ftruncate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ftruncate( fd: number, len: number | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "len"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "ftruncate( fd: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "ftruncate",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "ftruncate"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number, len?: number | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "len",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ftruncateSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ftruncateSync( fd: number, len?: number | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "len",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "chown",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "chown( path: PathLike, uid: number, gid: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "chown",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "chown"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, uid: number, gid: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "uid"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "gid"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "chownSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "chownSync( path: PathLike, uid: number, gid: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fchown",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fchown( fd: number, uid: number, gid: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "fchown",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "fchown"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number, uid: number, gid: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "uid"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "gid"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fchownSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fchownSync( fd: number, uid: number, gid: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "lchown",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lchown( path: PathLike, uid: number, gid: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lchown",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "lchown"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, uid: number, gid: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "uid"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "gid"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "lchownSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lchownSync( path: PathLike, uid: number, gid: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "typeName": "number",
                                    "name": "uid"
                                },
                                {
                                    "typeName": "number",
                                    "name": "gid"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "chmod",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "chmod( path: PathLike, mode: string | number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "chmod",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "chmod"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, mode: string | number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "mode"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "chmodSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "chmodSync( path: PathLike, mode: string | number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fchmod",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fchmod( fd: number, mode: string | number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "fchmod",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "fchmod"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number, mode: string | number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "mode"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fchmodSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fchmodSync( fd: number, mode: string | number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "lchmod",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lchmod( path: PathLike, mode: string | number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lchmod",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "lchmod"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, mode: string | number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "mode"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "lchmodSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lchmodSync( path: PathLike, mode: string | number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "mode"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "stat",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "stat( path: PathLike, callback: ( err: NodeJS.ErrnoException, stats: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "stats"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "stat",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "stat"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike ): Promise<Stats>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Stats"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "statSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "statSync( path: PathLike ): Stats",
                            "type": {
                                "type": "reference",
                                "typeName": "Stats"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fstat",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fstat( fd: number, callback: ( err: NodeJS.ErrnoException, stats: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "stats"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "fstat",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "fstat"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number ): Promise<Stats>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Stats"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fstatSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fstatSync( fd: number ): Stats",
                            "type": {
                                "type": "reference",
                                "typeName": "Stats"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "lstat",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lstat( path: PathLike, callback: ( err: NodeJS.ErrnoException, stats: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "stats"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "lstat",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "lstat"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike ): Promise<Stats>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Stats"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "lstatSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "lstatSync( path: PathLike ): Stats",
                            "type": {
                                "type": "reference",
                                "typeName": "Stats"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "link",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "link( existingPath: PathLike, newPath: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "existingPath"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "newPath"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "link",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "link",
                            "namespaces": [
                                "",
                                "link"
                            ],
                            "decls": [
                                {
                                    "decl": "link( existingPath: PathLike, newPath: PathLike ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "existingPath"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "newPath"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "linkSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "linkSync( existingPath: PathLike, newPath: PathLike ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "existingPath"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "newPath"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "symlink",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "symlink( target: PathLike, path: PathLike, type: string | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "target"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "type"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "symlink( target: PathLike, path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "target"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "symlink",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "symlink"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( target: PathLike, path: PathLike, type?: string | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "target"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "type",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "symlinkSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "symlinkSync( target: PathLike, path: PathLike, type?: string | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "target"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "type",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "readlink",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readlink( path: PathLike, options: { encoding | BufferEncoding | undefined | null, callback: ( err: NodeJS.ErrnoException, linkString: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "linkString"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlink( path: PathLike, options: { encoding | 'buffer' , callback: ( err: NodeJS.ErrnoException, linkString: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "linkString"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlink( path: PathLike, options: { encoding | string | undefined | null, callback: ( err: NodeJS.ErrnoException, linkString: string | Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "linkString"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlink( path: PathLike, callback: ( err: NodeJS.ErrnoException, linkString: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "linkString"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlink",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "readlink"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | BufferEncoding | null ): Promise<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "BufferEncoding"
                                                    }
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options: { encoding | 'buffer'  ): Promise<Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "buffer"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | string | null ): Promise<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "readlinkSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readlinkSync( path: PathLike, options?: { encoding | BufferEncoding | null ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlinkSync( path: PathLike, options: { encoding | 'buffer'  ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readlinkSync( path: PathLike, options?: { encoding | string | null ): string | Buffer",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "typeName": "string"
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "realpath",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "realpath( path: PathLike, options: { encoding | BufferEncoding | undefined | null, callback: ( err: NodeJS.ErrnoException, resolvedPath: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "resolvedPath"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpath( path: PathLike, options: { encoding | 'buffer' , callback: ( err: NodeJS.ErrnoException, resolvedPath: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "resolvedPath"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpath( path: PathLike, options: { encoding | string | undefined | null, callback: ( err: NodeJS.ErrnoException, resolvedPath: string | Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "resolvedPath"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpath( path: PathLike, callback: ( err: NodeJS.ErrnoException, resolvedPath: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "resolvedPath"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpath",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "realpath"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | BufferEncoding | null ): Promise<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "BufferEncoding"
                                                    }
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options: { encoding | 'buffer'  ): Promise<Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "buffer"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | string | null ): Promise<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "realpathSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "realpathSync( path: PathLike, options?: { encoding | BufferEncoding | null ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpathSync( path: PathLike, options: { encoding | 'buffer'  ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "realpathSync( path: PathLike, options?: { encoding | string | null ): string | Buffer",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "typeName": "string"
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "unlink",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unlink( path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "unlink",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "unlink"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "unlinkSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unlinkSync( path: PathLike ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "rmdir",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "rmdir( path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "rmdir",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "rmdir"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "rmdirSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "rmdirSync( path: PathLike ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "mkdir",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "mkdir( path: PathLike, mode: number | string | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdir( path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdir",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "mkdir"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, mode?: number | string | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "mode",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "mkdirSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "mkdirSync( path: PathLike, mode?: number | string | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "mode",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "mkdtemp",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "mkdtemp( prefix: string, options: { encoding | BufferEncoding | undefined | null, callback: ( err: NodeJS.ErrnoException, folder: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "folder"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtemp( prefix: string, options: 'buffer'  | { encoding, callback: ( err: NodeJS.ErrnoException, folder: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "folder"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtemp( prefix: string, options: { encoding | string | undefined | null, callback: ( err: NodeJS.ErrnoException, folder: string | Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "folder"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtemp( prefix: string, callback: ( err: NodeJS.ErrnoException, folder: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "folder"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtemp",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "mkdtemp"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( prefix: string, options?: { encoding | BufferEncoding | null ): Promise<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "prefix"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "BufferEncoding"
                                                    }
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( prefix: string, options: { encoding | 'buffer'  ): Promise<Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "prefix"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "buffer"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( prefix: string, options?: { encoding | string | null ): Promise<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "prefix"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "mkdtempSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "mkdtempSync( prefix: string, options?: { encoding | BufferEncoding | null ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtempSync( prefix: string, options: { encoding | 'buffer'  ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "mkdtempSync( prefix: string, options?: { encoding | string | null ): string | Buffer",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "typeName": "string"
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prefix"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "readdir",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readdir( path: PathLike, options: { encoding | BufferEncoding | undefined | null, callback: ( err: NodeJS.ErrnoException, files: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "files"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdir( path: PathLike, options: { encoding | 'buffer' , callback: ( err: NodeJS.ErrnoException, files: Buffer[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "Buffer"
                                                },
                                                "isArray": true,
                                                "name": "files"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdir( path: PathLike, options: { encoding | string | undefined | null, callback: ( err: NodeJS.ErrnoException, files: Array<string | Buffer> ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Array",
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "name": "files"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdir( path: PathLike, callback: ( err: NodeJS.ErrnoException, files: string[] ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true,
                                                "name": "files"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdir",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "readdir"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | BufferEncoding | null ): Promise<string[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "BufferEncoding"
                                                    }
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options: 'buffer'  | { encoding ): Promise<Buffer[]>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "Buffer"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "literal",
                                                    "typeName": "string",
                                                    "value": "buffer"
                                                },
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike, options?: { encoding | string | null ): Promise<Array<string | Buffer>>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "readdirSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readdirSync( path: PathLike, options?: { encoding | BufferEncoding | null ): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdirSync( path: PathLike, options: { encoding | 'buffer'  ): Buffer[]",
                            "type": {
                                "typeName": {
                                    "type": "reference",
                                    "typeName": "Buffer"
                                },
                                "isArray": true
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readdirSync( path: PathLike, options?: { encoding | string | null ): Array<string | Buffer>",
                            "type": {
                                "type": "reference",
                                "typeName": "Array",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "close",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "close( fd: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "close",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "close"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "closeSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "closeSync( fd: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "open",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "open( path: PathLike, flags: string | number, mode: string | number | undefined | null, callback: ( err: NodeJS.ErrnoException, fd: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "flags"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "fd"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "open( path: PathLike, flags: string | number, callback: ( err: NodeJS.ErrnoException, fd: number ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "flags"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "fd"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "open",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "open"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, flags: string | number, mode?: string | number | null ): Promise<number>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "number"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "flags"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "mode",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "openSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "openSync( path: PathLike, flags: string | number, mode?: string | number | null ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "flags"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "mode",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "utimes",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "utimes( path: PathLike, atime: string | number | Date, mtime: string | number | Date, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "atime"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "mtime"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "utimes",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "utimes"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, atime: string | number | Date, mtime: string | number | Date ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Date"
                                                    }
                                                }
                                            ],
                                            "name": "atime"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Date"
                                                    }
                                                }
                                            ],
                                            "name": "mtime"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "utimesSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "utimesSync( path: PathLike, atime: string | number | Date, mtime: string | number | Date ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "atime"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "mtime"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "futimes",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "futimes( fd: number, atime: string | number | Date, mtime: string | number | Date, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "atime"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "mtime"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "futimes",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "futimes"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number, atime: string | number | Date, mtime: string | number | Date ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Date"
                                                    }
                                                }
                                            ],
                                            "name": "atime"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Date"
                                                    }
                                                }
                                            ],
                                            "name": "mtime"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "futimesSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "futimesSync( fd: number, atime: string | number | Date, mtime: string | number | Date ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "atime"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Date"
                                            }
                                        }
                                    ],
                                    "name": "mtime"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fsync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fsync( fd: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "fsync",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "fsync"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fsyncSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fsyncSync( fd: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "write",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "write<TBuffer extends UnionType>( fd: number, buffer: TBuffer, offset: number | undefined | null, length: number | undefined | null, position: number | undefined | null, callback: ( err: NodeJS.ErrnoException, written: number, buffer: TBuffer ) => void ): void",
                            "type": "void",
                            "typeParameters": [
                                {
                                    "typeName": "UnionType",
                                    "name": "TBuffer",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "TBuffer",
                                    "name": "buffer"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "offset"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "length"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "TBuffer",
                                                "name": "buffer"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write<TBuffer extends UnionType>( fd: number, buffer: TBuffer, offset: number | undefined | null, length: number | undefined | null, callback: ( err: NodeJS.ErrnoException, written: number, buffer: TBuffer ) => void ): void",
                            "type": "void",
                            "typeParameters": [
                                {
                                    "typeName": "UnionType",
                                    "name": "TBuffer",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "TBuffer",
                                    "name": "buffer"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "offset"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "length"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "TBuffer",
                                                "name": "buffer"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write<TBuffer extends UnionType>( fd: number, buffer: TBuffer, offset: number | undefined | null, callback: ( err: NodeJS.ErrnoException, written: number, buffer: TBuffer ) => void ): void",
                            "type": "void",
                            "typeParameters": [
                                {
                                    "typeName": "UnionType",
                                    "name": "TBuffer",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "TBuffer",
                                    "name": "buffer"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "offset"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "TBuffer",
                                                "name": "buffer"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write<TBuffer extends UnionType>( fd: number, buffer: TBuffer, callback: ( err: NodeJS.ErrnoException, written: number, buffer: TBuffer ) => void ): void",
                            "type": "void",
                            "typeParameters": [
                                {
                                    "typeName": "UnionType",
                                    "name": "TBuffer",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "TBuffer",
                                    "name": "buffer"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "TBuffer",
                                                "name": "buffer"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write( fd: number, string: any, position: number | undefined | null, encoding: string | undefined | null, callback: ( err: NodeJS.ErrnoException, written: number, str: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "any",
                                    "name": "string"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "encoding"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "str"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write( fd: number, string: any, position: number | undefined | null, callback: ( err: NodeJS.ErrnoException, written: number, str: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "any",
                                    "name": "string"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "str"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write( fd: number, string: any, callback: ( err: NodeJS.ErrnoException, written: number, str: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "any",
                                    "name": "string"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "written"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "str"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "write",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "write"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__<TBuffer extends UnionType>( fd: number, buffer?: TBuffer, offset?: number, length?: number, position?: number | null ): Promise<{ bytesWritten, buffer }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "bytesWritten",
                                                        "name": "bytesWritten"
                                                    },
                                                    {
                                                        "typeName": "buffer",
                                                        "name": "buffer"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "UnionType",
                                            "name": "TBuffer",
                                            "typeOperator": " extends"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "TBuffer",
                                            "name": "buffer",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "offset",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "length",
                                            "optional": true
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "position",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( fd: number, string: any, position?: number | null, encoding?: string | null ): Promise<{ bytesWritten, buffer }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "bytesWritten",
                                                        "name": "bytesWritten"
                                                    },
                                                    {
                                                        "typeName": "buffer",
                                                        "name": "buffer"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "string"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "position",
                                            "optional": true
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "encoding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "writeSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "writeSync( fd: number, buffer: Buffer | Uint8Array, offset?: number | null, length?: number | null, position?: number | null ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Uint8Array"
                                            }
                                        }
                                    ],
                                    "name": "buffer"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "offset",
                                    "optional": true
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "length",
                                    "optional": true
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "writeSync( fd: number, string: any, position?: number | null, encoding?: string | null ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "typeName": "any",
                                    "name": "string"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position",
                                    "optional": true
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "encoding",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "read",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "read<TBuffer extends UnionType>( fd: number, buffer: TBuffer, offset: number, length: number, position: number | null, callback?: ( err: NodeJS.ErrnoException, bytesRead: number, buffer: TBuffer ) => void ): void",
                            "type": "void",
                            "typeParameters": [
                                {
                                    "typeName": "UnionType",
                                    "name": "TBuffer",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "TBuffer",
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "length"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "number",
                                                "name": "bytesRead"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "TBuffer",
                                                "name": "buffer"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "read",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "read"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__<TBuffer extends UnionType>( fd: number, buffer: TBuffer, offset: number, length: number, position: number | null ): Promise<{ bytesRead, buffer }>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "typeliteral",
                                                "members": [
                                                    {
                                                        "typeName": "bytesRead",
                                                        "name": "bytesRead"
                                                    },
                                                    {
                                                        "typeName": "buffer",
                                                        "name": "buffer"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "UnionType",
                                            "name": "TBuffer",
                                            "typeOperator": " extends"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "TBuffer",
                                            "name": "buffer"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "offset"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "length"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "position"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "readSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readSync( fd: number, buffer: Buffer | Uint8Array, offset: number, length: number, position: number | null ): number",
                            "type": "number",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Uint8Array"
                                            }
                                        }
                                    ],
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "length"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "position"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "readFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readFile( path: PathLike | number, options: { encoding, flag } | undefined | null, callback: ( err: NodeJS.ErrnoException, data: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "data"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFile( path: PathLike | number, options: { encoding, flag } | string, callback: ( err: NodeJS.ErrnoException, data: string ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "data"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFile( path: PathLike | number, options: { encoding, flag } | string | undefined | null, callback: ( err: NodeJS.ErrnoException, data: string | Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "data"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFile( path: PathLike | number, callback: ( err: NodeJS.ErrnoException, data: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "data"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFile",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "readFile"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike | number, options?: { encoding, flag } | null ): Promise<Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "PathLike"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "flag",
                                                            "name": "flag",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike | number, options: { encoding, flag } | string ): Promise<string>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "string"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "PathLike"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding"
                                                        },
                                                        {
                                                            "typeName": "flag",
                                                            "name": "flag",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__( path: PathLike | number, options?: { encoding, flag } | string | null ): Promise<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "PathLike"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "path"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "flag",
                                                            "name": "flag",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "readFileSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "readFileSync( path: PathLike | number, options?: { encoding, flag } | null ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFileSync( path: PathLike | number, options: { encoding, flag } | string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        }
                                    ],
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "readFileSync( path: PathLike | number, options?: { encoding, flag } | string | null ): string | Buffer",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "typeName": "string"
                                    },
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Buffer"
                                        }
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "writeFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "writeFile( path: PathLike | number, data: any, options: { encoding, mode, flag } | string | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "writeFile( path: PathLike | number, data: any, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "writeFile",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "writeFile"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike | number, data: any, options?: { encoding, mode, flag } | string | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "PathLike"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "path"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "data"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "mode",
                                                            "name": "mode",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "flag",
                                                            "name": "flag",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "writeFileSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "writeFileSync( path: PathLike | number, data: any, options?: { encoding, mode, flag } | string | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "path"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "appendFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "appendFile( file: PathLike | number, data: any, options: { encoding, mode, flag } | string | undefined | null, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "file"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "appendFile( file: PathLike | number, data: any, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "file"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "appendFile",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "appendFile"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( file: PathLike | number, data: any, options?: { encoding, mode, flag } | string | null ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "PathLike"
                                                    }
                                                },
                                                {
                                                    "typeName": "number"
                                                }
                                            ],
                                            "name": "file"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "data"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "encoding",
                                                            "name": "encoding",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "mode",
                                                            "name": "mode",
                                                            "optional": true
                                                        },
                                                        {
                                                            "typeName": "flag",
                                                            "name": "flag",
                                                            "optional": true
                                                        }
                                                    ]
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "null"
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "appendFileSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "appendFileSync( file: PathLike | number, data: any, options?: { encoding, mode, flag } | string | null ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "PathLike"
                                            }
                                        },
                                        {
                                            "typeName": "number"
                                        }
                                    ],
                                    "name": "file"
                                },
                                {
                                    "typeName": "any",
                                    "name": "data"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "flag",
                                                    "name": "flag",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "watchFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "watchFile( filename: PathLike, options: { persistent, interval } | undefined, listener: ( curr: Stats, prev: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "persistent",
                                                    "name": "persistent",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "interval",
                                                    "name": "interval",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "undefined"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "curr"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "prev"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "watchFile( filename: PathLike, listener: ( curr: Stats, prev: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "curr"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "prev"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "unwatchFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "unwatchFile( filename: PathLike, listener?: ( curr: Stats, prev: Stats ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "curr"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Stats",
                                                "name": "prev"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "watch",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "watch( filename: PathLike, options: { encoding, persistent, recursive } | BufferEncoding | undefined | null, listener?: ( event: string, filename: string ) => void ): FSWatcher",
                            "type": {
                                "type": "reference",
                                "typeName": "FSWatcher"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "persistent",
                                                    "name": "persistent",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "recursive",
                                                    "name": "recursive",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "BufferEncoding"
                                            }
                                        },
                                        {
                                            "typeName": "undefined"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "string",
                                                "name": "event"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "filename"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "watch( filename: PathLike, options: { encoding, persistent, recursive } | 'buffer' , listener?: ( event: string, filename: Buffer ) => void ): FSWatcher",
                            "type": {
                                "type": "reference",
                                "typeName": "FSWatcher"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding"
                                                },
                                                {
                                                    "typeName": "persistent",
                                                    "name": "persistent",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "recursive",
                                                    "name": "recursive",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "buffer"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "string",
                                                "name": "event"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "filename"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "watch( filename: PathLike, options: { encoding, persistent, recursive } | string | null, listener?: ( event: string, filename: string | Buffer ) => void ): FSWatcher",
                            "type": {
                                "type": "reference",
                                "typeName": "FSWatcher"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "persistent",
                                                    "name": "persistent",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "recursive",
                                                    "name": "recursive",
                                                    "optional": true
                                                }
                                            ]
                                        },
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "typeName": "null"
                                        }
                                    ],
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "string",
                                                "name": "event"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ],
                                                "name": "filename"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "watch( filename: PathLike, listener?: ( event: string, filename: string ) => any ): FSWatcher",
                            "type": {
                                "type": "reference",
                                "typeName": "FSWatcher"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "filename"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "string",
                                                "name": "event"
                                            },
                                            {
                                                "typeName": "string",
                                                "name": "filename"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "any"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "exists",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "exists( path: PathLike, callback: ( exists: boolean ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "boolean",
                                                "name": "exists"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "exists",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "exists"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike ): Promise<boolean>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "boolean"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "existsSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "existsSync( path: PathLike ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "constants",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "constants",
                            "kind": "ModuleDeclaration"
                        }
                    ]
                },
                {
                    "name": "access",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "access( path: PathLike, mode: number | undefined, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "typeName": "undefined"
                                        }
                                    ],
                                    "name": "mode"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "access( path: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "access",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "access"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( path: PathLike, mode?: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "path"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "mode",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "accessSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "accessSync( path: PathLike, mode?: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "typeName": "number",
                                    "name": "mode",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createReadStream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createReadStream( path: PathLike, options?: string | { flags, encoding, fd, mode, autoClose, start, end, highWaterMark } ): ReadStream",
                            "type": {
                                "type": "reference",
                                "typeName": "ReadStream"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "flags",
                                                    "name": "flags",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "fd",
                                                    "name": "fd",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "autoClose",
                                                    "name": "autoClose",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "start",
                                                    "name": "start",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "end",
                                                    "name": "end",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "highWaterMark",
                                                    "name": "highWaterMark",
                                                    "optional": true
                                                }
                                            ]
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createWriteStream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createWriteStream( path: PathLike, options?: string | { flags, encoding, fd, mode, autoClose, start } ): WriteStream",
                            "type": {
                                "type": "reference",
                                "typeName": "WriteStream"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "path"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "flags",
                                                    "name": "flags",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "encoding",
                                                    "name": "encoding",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "fd",
                                                    "name": "fd",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "mode",
                                                    "name": "mode",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "autoClose",
                                                    "name": "autoClose",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "start",
                                                    "name": "start",
                                                    "optional": true
                                                }
                                            ]
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "fdatasync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fdatasync( fd: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "fdatasync",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "fdatasync"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( fd: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fdatasyncSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "fdatasyncSync( fd: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "copyFile",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "copyFile( src: PathLike, dest: PathLike, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "src"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "dest"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "copyFile( src: PathLike, dest: PathLike, flags: number, callback: ( err: NodeJS.ErrnoException ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "src"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "dest"
                                },
                                {
                                    "typeName": "number",
                                    "name": "flags"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "NodeJS",
                                                        "ErrnoException"
                                                    ]
                                                },
                                                "name": "err"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "copyFile",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "copyFile"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( src: PathLike, dst: PathLike, flags?: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "src"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "PathLike",
                                            "name": "dst"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "copyFileSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "copyFileSync( src: PathLike, dest: PathLike, flags?: number ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "src"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PathLike",
                                    "name": "dest"
                                },
                                {
                                    "typeName": "number",
                                    "name": "flags",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "path",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "ParsedPath",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ParsedPath",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "root",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "root: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "dir",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "dir: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "base",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "base: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ext: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "FormatInputPathObject",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "FormatInputPathObject",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "root",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "root: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "dir",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "dir: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "base",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "base: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ext: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "normalize",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "normalize( p: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "p"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "join",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "join( ...paths: string[] ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "isArray": true,
                                    "name": "paths",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "resolve( ...pathSegments: any[] ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "pathSegments",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isAbsolute",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isAbsolute( path: string ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "path"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "relative",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "relative( from: string, to: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "from"
                                },
                                {
                                    "typeName": "string",
                                    "name": "to"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "dirname",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "dirname( p: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "p"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "basename",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "basename( p: string, ext?: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "p"
                                },
                                {
                                    "typeName": "string",
                                    "name": "ext",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "extname",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "extname( p: string ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "p"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "parse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "parse( pathString: string ): ParsedPath",
                            "type": {
                                "type": "reference",
                                "typeName": "ParsedPath"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "pathString"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "format",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "format( pathObject: FormatInputPathObject ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "FormatInputPathObject",
                                    "name": "pathObject"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "posix",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "posix",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "normalize",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "normalize( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "join",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "join( ...paths: any[] ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "paths",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "resolve",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "resolve( ...pathSegments: any[] ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "pathSegments",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isAbsolute",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "isAbsolute( p: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "relative",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "relative( from: string, to: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "from"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "to"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "dirname",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "dirname( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "basename",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "basename( p: string, ext?: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "ext",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "extname",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "extname( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "parse",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "parse( p: string ): ParsedPath",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ParsedPath"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "format",
                            "namespaces": [
                                "",
                                "posix"
                            ],
                            "decls": [
                                {
                                    "decl": "format( pP: ParsedPath ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "ParsedPath",
                                            "name": "pP"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "win32",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "win32",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "normalize",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "normalize( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "join",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "join( ...paths: any[] ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "paths",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "resolve",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "resolve( ...pathSegments: any[] ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "pathSegments",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "isAbsolute",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "isAbsolute( p: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "relative",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "relative( from: string, to: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "from"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "to"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "dirname",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "dirname( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "basename",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "basename( p: string, ext?: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "ext",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "extname",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "extname( p: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "parse",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "parse( p: string ): ParsedPath",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ParsedPath"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "p"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "format",
                            "namespaces": [
                                "",
                                "win32"
                            ],
                            "decls": [
                                {
                                    "decl": "format( pP: ParsedPath ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "ParsedPath",
                                            "name": "pP"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "string_decoder",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "NodeStringDecoder",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "NodeStringDecoder",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "write",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "write( buffer: Buffer ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "end",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "end( buffer?: Buffer ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "tls",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Certificate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Certificate",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "C",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "C: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ST",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ST: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "L",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "L: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "O",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "O: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "OU",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "OU: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "CN",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "CN: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "PeerCertificate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PeerCertificate",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "subject",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "subject: Certificate",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Certificate"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "issuer",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "issuer: Certificate",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Certificate"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "subjectaltname",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "subjectaltname: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "infoAccess",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "infoAccess: { [ index: string ]: string[] | undefined }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "type": "index",
                                                "typeName": {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "typeName": "string",
                                                            "isArray": true
                                                        },
                                                        {
                                                            "typeName": "undefined"
                                                        }
                                                    ]
                                                },
                                                "parameters": [
                                                    {
                                                        "name": "index",
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "modulus",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "modulus: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exponent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "exponent: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "valid_from",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "valid_from: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "valid_to",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "valid_to: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "fingerprint",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "fingerprint: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ext_key_usage",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ext_key_usage: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "serialNumber",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "serialNumber: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "raw",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "raw: Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "DetailedPeerCertificate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "DetailedPeerCertificate",
                            "heritage": [
                                {
                                    "name": "PeerCertificate"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "issuerCertificate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "issuerCertificate: DetailedPeerCertificate",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "DetailedPeerCertificate"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "CipherNameAndProtocol",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "CipherNameAndProtocol",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "version",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "version: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "TLSSocket",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "TLSSocket",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( socket: net.Socket, options?: { secureContext, isServer, server, requestCert, rejectUnauthorized, NPNProtocols, ALPNProtocols, SNICallback, session, requestOCSP } )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "net",
                                                    "Socket"
                                                ]
                                            },
                                            "name": "socket"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "secureContext",
                                                    "name": "secureContext",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "isServer",
                                                    "name": "isServer",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "server",
                                                    "name": "server",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "requestCert",
                                                    "name": "requestCert",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "rejectUnauthorized",
                                                    "name": "rejectUnauthorized",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "NPNProtocols",
                                                    "name": "NPNProtocols",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "ALPNProtocols",
                                                    "name": "ALPNProtocols",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "SNICallback",
                                                    "name": "SNICallback",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "session",
                                                    "name": "session",
                                                    "optional": true
                                                },
                                                {
                                                    "typeName": "requestOCSP",
                                                    "name": "requestOCSP",
                                                    "optional": true
                                                }
                                            ],
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "authorized",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "authorized: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "authorizationError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "authorizationError: Error",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Error"
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "encrypted",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encrypted: boolean",
                                    "type": "boolean",
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getCipher",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getCipher(): CipherNameAndProtocol",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "CipherNameAndProtocol"
                                    },
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getPeerCertificate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPeerCertificate( detailed: true ): DetailedPeerCertificate",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "DetailedPeerCertificate"
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "boolean",
                                            "value": true,
                                            "name": "detailed"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "getPeerCertificate( detailed?: false ): PeerCertificate",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "PeerCertificate"
                                    },
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "boolean",
                                            "value": false,
                                            "name": "detailed",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "getPeerCertificate( detailed?: boolean ): PeerCertificate | DetailedPeerCertificate",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "PeerCertificate"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "DetailedPeerCertificate"
                                                }
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "detailed",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getSession",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getSession(): any",
                                    "type": "any",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "getTLSTicket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getTLSTicket(): any",
                                    "type": "any",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "renegotiate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "renegotiate( options: TlsOptions, callback: ( err: Error | null ) => void ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "TlsOptions",
                                            "name": "options"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Error"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "setMaxSendFragment",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setMaxSendFragment( size: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "size"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'OCSPResponse' , listener: ( response: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'secureConnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'OCSPResponse' , response: Buffer ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "response"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'secureConnect'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'OCSPResponse' , listener: ( response: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'secureConnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'OCSPResponse' , listener: ( response: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'secureConnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'OCSPResponse' , listener: ( response: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'secureConnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'OCSPResponse' , listener: ( response: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPResponse",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'secureConnect' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "TlsOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "TlsOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pfx",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "pfx: string | Buffer[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "Buffer"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "key: string | string[] | Buffer | any[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "typeName": "any",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "passphrase",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "passphrase: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cert: string | string[] | Buffer | Buffer[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "Buffer"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ca",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ca: string | string[] | Buffer | Buffer[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "typeName": {
                                                    "type": "reference",
                                                    "typeName": "Buffer"
                                                },
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "crl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "crl: string | string[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ciphers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ciphers: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "honorCipherOrder",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "honorCipherOrder: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "requestCert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "requestCert: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rejectUnauthorized",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "rejectUnauthorized: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "NPNProtocols",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "NPNProtocols: string[] | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "SNICallback",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "SNICallback: ( servername: string, cb: ( err: Error | null, ctx: SecureContext ) => void ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "string",
                                                    "name": "servername"
                                                },
                                                {
                                                    "type": "function",
                                                    "definition": {
                                                        "parameters": [
                                                            {
                                                                "type": "union",
                                                                "types": [
                                                                    {
                                                                        "type": "reference",
                                                                        "typeName": {
                                                                            "name": "Error"
                                                                        }
                                                                    },
                                                                    {
                                                                        "typeName": "null"
                                                                    }
                                                                ],
                                                                "name": "err"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": "SecureContext",
                                                                "name": "ctx"
                                                            }
                                                        ],
                                                        "type": {
                                                            "typeName": "void"
                                                        }
                                                    },
                                                    "name": "cb"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ecdhCurve",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ecdhCurve: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "dhparam",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "dhparam: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "handshakeTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "handshakeTimeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ALPNProtocols",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ALPNProtocols: string[] | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "sessionTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sessionTimeout: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ticketKeys",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ticketKeys: Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "sessionIdContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sessionIdContext: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "secureProtocol",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "secureProtocol: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "secureOptions",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "secureOptions: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ConnectionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ConnectionOptions",
                            "heritage": [
                                {
                                    "name": "SecureContextOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "host",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "host: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "port",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "port: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "path",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "path: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "Socket"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rejectUnauthorized",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "rejectUnauthorized: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "NPNProtocols",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "NPNProtocols: Array<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Array",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ALPNProtocols",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ALPNProtocols: Array<string | Buffer>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Array",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "string"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "name": "Buffer"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "checkServerIdentity",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "checkServerIdentity: checkServerIdentity",
                                    "type": "checkServerIdentity",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "servername",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "servername: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "session",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "session: Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "minDHSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "minDHSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "secureContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "secureContext: SecureContext",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "SecureContext"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lookup",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lookup: net.LookupFunction",
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "type": "qualified",
                                            "names": [
                                                "net",
                                                "LookupFunction"
                                            ]
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Server",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Server",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addContext( hostName: string, credentials: { key, cert, ca } ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "hostName"
                                        },
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "key",
                                                    "name": "key"
                                                },
                                                {
                                                    "typeName": "cert",
                                                    "name": "cert"
                                                },
                                                {
                                                    "typeName": "ca",
                                                    "name": "ca"
                                                }
                                            ],
                                            "name": "credentials"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'tlsClientError' , listener: ( err: Error, tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'newSession' , listener: ( sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Buffer",
                                                                    "name": "resp"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'OCSPRequest' , listener: ( certificate: Buffer, issuer: Buffer, callback: Function ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "certificate"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "issuer"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Function",
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'resumeSession' , listener: ( sessionId: any, callback: ( err: Error, sessionData: any ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "typeName": "any",
                                                                    "name": "sessionData"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "addListener( event: 'secureConnection' , listener: ( tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'tlsClientError' , err: Error, tlsSocket: TLSSocket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "TLSSocket",
                                            "name": "tlsSocket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'newSession' , sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sessionId"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sessionData"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "resp"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'OCSPRequest' , certificate: Buffer, issuer: Buffer, callback: Function ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "certificate"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "issuer"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'resumeSession' , sessionId: any, callback: ( err: Error, sessionData: any ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "sessionId"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "emit( event: 'secureConnection' , tlsSocket: TLSSocket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "TLSSocket",
                                            "name": "tlsSocket"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'tlsClientError' , listener: ( err: Error, tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'newSession' , listener: ( sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Buffer",
                                                                    "name": "resp"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'OCSPRequest' , listener: ( certificate: Buffer, issuer: Buffer, callback: Function ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "certificate"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "issuer"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Function",
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'resumeSession' , listener: ( sessionId: any, callback: ( err: Error, sessionData: any ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "typeName": "any",
                                                                    "name": "sessionData"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "on( event: 'secureConnection' , listener: ( tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'tlsClientError' , listener: ( err: Error, tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'newSession' , listener: ( sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Buffer",
                                                                    "name": "resp"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'OCSPRequest' , listener: ( certificate: Buffer, issuer: Buffer, callback: Function ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "certificate"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "issuer"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Function",
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'resumeSession' , listener: ( sessionId: any, callback: ( err: Error, sessionData: any ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "typeName": "any",
                                                                    "name": "sessionData"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "once( event: 'secureConnection' , listener: ( tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'tlsClientError' , listener: ( err: Error, tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'newSession' , listener: ( sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Buffer",
                                                                    "name": "resp"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'OCSPRequest' , listener: ( certificate: Buffer, issuer: Buffer, callback: Function ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "certificate"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "issuer"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Function",
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'resumeSession' , listener: ( sessionId: any, callback: ( err: Error, sessionData: any ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "typeName": "any",
                                                                    "name": "sessionData"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependListener( event: 'secureConnection' , listener: ( tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'tlsClientError' , listener: ( err: Error, tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "tlsClientError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'newSession' , listener: ( sessionId: any, sessionData: any, callback: ( err: Error, resp: Buffer ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "newSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionData"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Buffer",
                                                                    "name": "resp"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'OCSPRequest' , listener: ( certificate: Buffer, issuer: Buffer, callback: Function ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "OCSPRequest",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "certificate"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "issuer"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Function",
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'resumeSession' , listener: ( sessionId: any, callback: ( err: Error, sessionData: any ) => void ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "resumeSession",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "sessionId"
                                                    },
                                                    {
                                                        "type": "function",
                                                        "definition": {
                                                            "parameters": [
                                                                {
                                                                    "type": "reference",
                                                                    "typeName": "Error",
                                                                    "name": "err"
                                                                },
                                                                {
                                                                    "typeName": "any",
                                                                    "name": "sessionData"
                                                                }
                                                            ],
                                                            "type": {
                                                                "typeName": "void"
                                                            }
                                                        },
                                                        "name": "callback"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'secureConnection' , listener: ( tlsSocket: TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "secureConnection",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TLSSocket",
                                                        "name": "tlsSocket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClearTextStream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClearTextStream",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "authorized",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "authorized: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "authorizationError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "authorizationError: Error",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Error"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getPeerCertificate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPeerCertificate(): any",
                                    "type": "any",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getCipher",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "getCipher: { name, version }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "name",
                                                "name": "name"
                                            },
                                            {
                                                "typeName": "version",
                                                "name": "version"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "address",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "address: { port, family, address }",
                                    "type": {
                                        "type": "typeliteral",
                                        "members": [
                                            {
                                                "typeName": "port",
                                                "name": "port"
                                            },
                                            {
                                                "typeName": "family",
                                                "name": "family"
                                            },
                                            {
                                                "typeName": "address",
                                                "name": "address"
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "remoteAddress",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "remoteAddress: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "remotePort",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "remotePort: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SecurePair",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecurePair",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "encrypted",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "encrypted: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cleartext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "cleartext: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SecureContextOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecureContextOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "pfx",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "pfx: string | Buffer | Array<string | Buffer | Object>",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Object"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "key: string | Buffer | Array<Buffer | Object>",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Object"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "passphrase",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "passphrase: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "cert: string | Buffer | Array<string | Buffer>",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ca",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ca: string | Buffer | Array<string | Buffer>",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ciphers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ciphers: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "honorCipherOrder",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "honorCipherOrder: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ecdhCurve",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "ecdhCurve: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "crl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "crl: string | Buffer | Array<string | Buffer>",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Array"
                                                },
                                                "typeArguments": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "typeName": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "dhparam",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "dhparam: string | Buffer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "secureOptions",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "secureOptions: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "secureProtocol",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "secureProtocol: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "sessionIdContext",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sessionIdContext: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SecureContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecureContext",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "context",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "context: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "checkServerIdentity",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "checkServerIdentity( host: string, cert: PeerCertificate ): Error | undefined",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Error"
                                        }
                                    },
                                    {
                                        "typeName": "undefined"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "host"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "PeerCertificate",
                                    "name": "cert"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createServer( options: TlsOptions, secureConnectionListener?: ( socket: TLSSocket ) => void ): Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Server"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "TlsOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "TLSSocket",
                                                "name": "socket"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "secureConnectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "connect",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "connect( options: ConnectionOptions, secureConnectionListener?: () => void ): TLSSocket",
                            "type": {
                                "type": "reference",
                                "typeName": "TLSSocket"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ConnectionOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "secureConnectionListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "connect( port: number, host?: string, options?: ConnectionOptions, secureConnectListener?: () => void ): TLSSocket",
                            "type": {
                                "type": "reference",
                                "typeName": "TLSSocket"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "port"
                                },
                                {
                                    "typeName": "string",
                                    "name": "host",
                                    "optional": true
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ConnectionOptions",
                                    "name": "options",
                                    "optional": true
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "secureConnectListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "connect( port: number, options?: ConnectionOptions, secureConnectListener?: () => void ): TLSSocket",
                            "type": {
                                "type": "reference",
                                "typeName": "TLSSocket"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "port"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "ConnectionOptions",
                                    "name": "options",
                                    "optional": true
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "secureConnectListener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createSecurePair",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createSecurePair( credentials?: crypto.Credentials, isServer?: boolean, requestCert?: boolean, rejectUnauthorized?: boolean ): SecurePair",
                            "type": {
                                "type": "reference",
                                "typeName": "SecurePair"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "crypto",
                                            "Credentials"
                                        ]
                                    },
                                    "name": "credentials",
                                    "optional": true
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "isServer",
                                    "optional": true
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "requestCert",
                                    "optional": true
                                },
                                {
                                    "typeName": "boolean",
                                    "name": "rejectUnauthorized",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createSecureContext",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createSecureContext( details: SecureContextOptions ): SecureContext",
                            "type": {
                                "type": "reference",
                                "typeName": "SecureContext"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "SecureContextOptions",
                                    "name": "details"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getCiphers",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getCiphers(): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "crypto",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "CredentialDetails",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "CredentialDetails",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "pfx",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pfx: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "key: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "passphrase",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "passphrase: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "cert",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "cert: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ca",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ca: string | string[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "crl",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "crl: string | string[]",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "typeName": "string"
                                            },
                                            {
                                                "typeName": "string",
                                                "isArray": true
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "ciphers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "ciphers: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Credentials",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Credentials",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "context",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "context: any",
                                    "type": "any",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createCredentials",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createCredentials( details: CredentialDetails ): Credentials",
                            "type": {
                                "type": "reference",
                                "typeName": "Credentials"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "CredentialDetails",
                                    "name": "details"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createHash",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createHash( algorithm: string ): Hash",
                            "type": {
                                "type": "reference",
                                "typeName": "Hash"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createHmac",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createHmac( algorithm: string, key: string | Buffer ): Hmac",
                            "type": {
                                "type": "reference",
                                "typeName": "Hmac"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "key"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Utf8AsciiLatin1Encoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Utf8AsciiLatin1Encoding: 'utf8'  | 'ascii'  | 'latin1' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "utf8"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "ascii"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "latin1"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "HexBase64Latin1Encoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "HexBase64Latin1Encoding: 'latin1'  | 'hex'  | 'base64' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "latin1"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "hex"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "base64"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Utf8AsciiBinaryEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Utf8AsciiBinaryEncoding: 'utf8'  | 'ascii'  | 'binary' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "utf8"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "ascii"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "binary"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "HexBase64BinaryEncoding",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "HexBase64BinaryEncoding: 'binary'  | 'base64'  | 'hex' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "binary"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "base64"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "hex"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "ECDHKeyFormat",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ECDHKeyFormat: 'compressed'  | 'uncompressed'  | 'hybrid' ",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "compressed"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "uncompressed"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": "hybrid"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "Hash",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Hash",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: string | Buffer | DataView ): Hash",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Hash"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding ): Hash",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Hash"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiLatin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "digest",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "digest(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "digest( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Hmac",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Hmac",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: string | Buffer | DataView ): Hmac",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Hmac"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding ): Hmac",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Hmac"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiLatin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "digest",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "digest(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "digest( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createCipher",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createCipher( algorithm: string, password: any ): Cipher",
                            "type": {
                                "type": "reference",
                                "typeName": "Cipher"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                },
                                {
                                    "typeName": "any",
                                    "name": "password"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createCipheriv",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createCipheriv( algorithm: string, key: any, iv: any ): Cipher",
                            "type": {
                                "type": "reference",
                                "typeName": "Cipher"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                },
                                {
                                    "typeName": "any",
                                    "name": "key"
                                },
                                {
                                    "typeName": "any",
                                    "name": "iv"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Cipher",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Cipher",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: Buffer | DataView ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string, input_encoding: Utf8AsciiBinaryEncoding ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiBinaryEncoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: Buffer | DataView, input_encoding: any, output_encoding: HexBase64BinaryEncoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64BinaryEncoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string, input_encoding: Utf8AsciiBinaryEncoding, output_encoding: HexBase64BinaryEncoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiBinaryEncoding",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64BinaryEncoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "final",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "final(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "final( output_encoding: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setAutoPadding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setAutoPadding( auto_padding?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "auto_padding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getAuthTag",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getAuthTag(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setAAD",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setAAD( buffer: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createDecipher",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createDecipher( algorithm: string, password: any ): Decipher",
                            "type": {
                                "type": "reference",
                                "typeName": "Decipher"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                },
                                {
                                    "typeName": "any",
                                    "name": "password"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createDecipheriv",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createDecipheriv( algorithm: string, key: any, iv: any ): Decipher",
                            "type": {
                                "type": "reference",
                                "typeName": "Decipher"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                },
                                {
                                    "typeName": "any",
                                    "name": "key"
                                },
                                {
                                    "typeName": "any",
                                    "name": "iv"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Decipher",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Decipher",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: Buffer | DataView ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string, input_encoding: HexBase64BinaryEncoding ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64BinaryEncoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: Buffer | DataView, input_encoding: any, output_encoding: Utf8AsciiBinaryEncoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "typeName": "any",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiBinaryEncoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string, input_encoding: HexBase64BinaryEncoding, output_encoding: Utf8AsciiBinaryEncoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64BinaryEncoding",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiBinaryEncoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "final",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "final(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "final( output_encoding: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setAutoPadding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setAutoPadding( auto_padding?: boolean ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "boolean",
                                            "name": "auto_padding",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setAuthTag",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setAuthTag( tag: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "tag"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setAAD",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setAAD( buffer: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "buffer"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createSign",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createSign( algorithm: string ): Signer",
                            "type": {
                                "type": "reference",
                                "typeName": "Signer"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorithm"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Signer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Signer",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: string | Buffer | DataView ): Signer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Signer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding ): Signer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Signer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiLatin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "sign",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "sign( private_key: string | { key, passphrase } ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "key",
                                                            "name": "key"
                                                        },
                                                        {
                                                            "typeName": "passphrase",
                                                            "name": "passphrase"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "private_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "sign( private_key: string | { key, passphrase }, output_format: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "typeliteral",
                                                    "members": [
                                                        {
                                                            "typeName": "key",
                                                            "name": "key"
                                                        },
                                                        {
                                                            "typeName": "passphrase",
                                                            "name": "passphrase"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "name": "private_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "output_format"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createVerify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createVerify( algorith: string ): Verify",
                            "type": {
                                "type": "reference",
                                "typeName": "Verify"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "algorith"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "Verify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Verify",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "update",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "update( data: string | Buffer | DataView ): Verify",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Verify"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "update( data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding ): Verify",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Verify"
                                    },
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "data"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Utf8AsciiLatin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "verify",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "verify( object: string | Object, signature: Buffer | DataView ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Object"
                                                    }
                                                }
                                            ],
                                            "name": "object"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "DataView"
                                                    }
                                                }
                                            ],
                                            "name": "signature"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "verify( object: string | Object, signature: string, signature_format: HexBase64Latin1Encoding ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Object"
                                                    }
                                                }
                                            ],
                                            "name": "object"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "signature"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "signature_format"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createDiffieHellman",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createDiffieHellman( prime_length: number, generator?: number ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "prime_length"
                                },
                                {
                                    "typeName": "number",
                                    "name": "generator",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createDiffieHellman( prime: Buffer ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "prime"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createDiffieHellman( prime: string, prime_encoding: HexBase64Latin1Encoding ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prime"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "HexBase64Latin1Encoding",
                                    "name": "prime_encoding"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createDiffieHellman( prime: string, prime_encoding: HexBase64Latin1Encoding, generator: number | Buffer ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prime"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "HexBase64Latin1Encoding",
                                    "name": "prime_encoding"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "number"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "generator"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createDiffieHellman( prime: string, prime_encoding: HexBase64Latin1Encoding, generator: string, generator_encoding: HexBase64Latin1Encoding ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "prime"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "HexBase64Latin1Encoding",
                                    "name": "prime_encoding"
                                },
                                {
                                    "typeName": "string",
                                    "name": "generator"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "HexBase64Latin1Encoding",
                                    "name": "generator_encoding"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "DiffieHellman",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "DiffieHellman",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "generateKeys",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "generateKeys(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "generateKeys( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "computeSecret",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "computeSecret( other_public_key: Buffer ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "other_public_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "computeSecret( other_public_key: string, input_encoding: HexBase64Latin1Encoding ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "other_public_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "computeSecret( other_public_key: string, input_encoding: HexBase64Latin1Encoding, output_encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "other_public_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getPrime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPrime(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPrime( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getGenerator",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getGenerator(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getGenerator( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getPublicKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPublicKey(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPublicKey( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getPrivateKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPrivateKey(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPrivateKey( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setPublicKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setPublicKey( public_key: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "public_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "setPublicKey( public_key: string, encoding: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "public_key"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setPrivateKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setPrivateKey( private_key: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "private_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "setPrivateKey( private_key: string, encoding: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "private_key"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "verifyError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "verifyError: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "getDiffieHellman",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getDiffieHellman( group_name: string ): DiffieHellman",
                            "type": {
                                "type": "reference",
                                "typeName": "DiffieHellman"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "group_name"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "pbkdf2",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "pbkdf2( password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string, callback: ( err: Error, derivedKey: Buffer ) => any ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "password"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "salt"
                                },
                                {
                                    "typeName": "number",
                                    "name": "iterations"
                                },
                                {
                                    "typeName": "number",
                                    "name": "keylen"
                                },
                                {
                                    "typeName": "string",
                                    "name": "digest"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "derivedKey"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "any"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "pbkdf2Sync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "pbkdf2Sync( password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "password"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        }
                                    ],
                                    "name": "salt"
                                },
                                {
                                    "typeName": "number",
                                    "name": "iterations"
                                },
                                {
                                    "typeName": "number",
                                    "name": "keylen"
                                },
                                {
                                    "typeName": "string",
                                    "name": "digest"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "randomBytes",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "randomBytes( size: number ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "size"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomBytes( size: number, callback: ( err: Error, buf: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "size"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "pseudoRandomBytes",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "pseudoRandomBytes( size: number ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "size"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "pseudoRandomBytes( size: number, callback: ( err: Error, buf: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "size"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "randomFillSync",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "randomFillSync( buffer: Buffer | Uint8Array, offset?: number, size?: number ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Uint8Array"
                                            }
                                        }
                                    ],
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset",
                                    "optional": true
                                },
                                {
                                    "typeName": "number",
                                    "name": "size",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "randomFill",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "randomFill( buffer: Buffer, callback: ( err: Error, buf: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomFill( buffer: Uint8Array, callback: ( err: Error, buf: Uint8Array ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Uint8Array",
                                    "name": "buffer"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Uint8Array",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomFill( buffer: Buffer, offset: number, callback: ( err: Error, buf: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomFill( buffer: Uint8Array, offset: number, callback: ( err: Error, buf: Uint8Array ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Uint8Array",
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Uint8Array",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomFill( buffer: Buffer, offset: number, size: number, callback: ( err: Error, buf: Buffer ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "size"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Buffer",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "randomFill( buffer: Uint8Array, offset: number, size: number, callback: ( err: Error, buf: Uint8Array ) => void ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Uint8Array",
                                    "name": "buffer"
                                },
                                {
                                    "typeName": "number",
                                    "name": "offset"
                                },
                                {
                                    "typeName": "number",
                                    "name": "size"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Error",
                                                "name": "err"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Uint8Array",
                                                "name": "buf"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "RsaPublicKey",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RsaPublicKey",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "key: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "padding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "padding: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "RsaPrivateKey",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "RsaPrivateKey",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "key",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "key: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "passphrase",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "passphrase: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "padding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "padding: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "publicEncrypt",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "publicEncrypt( public_key: string | RsaPublicKey, buffer: Buffer ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RsaPublicKey"
                                            }
                                        }
                                    ],
                                    "name": "public_key"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "privateDecrypt",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "privateDecrypt( private_key: string | RsaPrivateKey, buffer: Buffer ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RsaPrivateKey"
                                            }
                                        }
                                    ],
                                    "name": "private_key"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "privateEncrypt",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "privateEncrypt( private_key: string | RsaPrivateKey, buffer: Buffer ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RsaPrivateKey"
                                            }
                                        }
                                    ],
                                    "name": "private_key"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "publicDecrypt",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "publicDecrypt( public_key: string | RsaPublicKey, buffer: Buffer ): Buffer",
                            "type": {
                                "type": "reference",
                                "typeName": "Buffer"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "RsaPublicKey"
                                            }
                                        }
                                    ],
                                    "name": "public_key"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "buffer"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getCiphers",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getCiphers(): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getCurves",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getCurves(): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getHashes",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getHashes(): string[]",
                            "type": {
                                "typeName": "string",
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "ECDH",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ECDH",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "generateKeys",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "generateKeys(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "generateKeys( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "generateKeys( encoding: HexBase64Latin1Encoding, format: ECDHKeyFormat ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ECDHKeyFormat",
                                            "name": "format"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "computeSecret",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "computeSecret( other_public_key: Buffer ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "other_public_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "computeSecret( other_public_key: string, input_encoding: HexBase64Latin1Encoding ): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "other_public_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "input_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "computeSecret( other_public_key: string, input_encoding: HexBase64Latin1Encoding, output_encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "other_public_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "input_encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "output_encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getPrivateKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPrivateKey(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPrivateKey( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getPublicKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getPublicKey(): Buffer",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Buffer"
                                    },
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPublicKey( encoding: HexBase64Latin1Encoding ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "getPublicKey( encoding: HexBase64Latin1Encoding, format: ECDHKeyFormat ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ECDHKeyFormat",
                                            "name": "format"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setPrivateKey",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setPrivateKey( private_key: Buffer ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "private_key"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "setPrivateKey( private_key: string, encoding: HexBase64Latin1Encoding ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "private_key"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "HexBase64Latin1Encoding",
                                            "name": "encoding"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createECDH",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createECDH( curve_name: string ): ECDH",
                            "type": {
                                "type": "reference",
                                "typeName": "ECDH"
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "curve_name"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "timingSafeEqual",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "timingSafeEqual( a: Buffer, b: Buffer ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "a"
                                },
                                {
                                    "type": "reference",
                                    "typeName": "Buffer",
                                    "name": "b"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "stream",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "util",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "format",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "format( format: any, ...param: any[] ): string",
                            "type": "string",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "format"
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "param",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "debug",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "debug( string: string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "string"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "error",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "error( ...param: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "param",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "puts",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "puts( ...param: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "param",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "print",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "print( ...param: any[] ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "param",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "log",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "log( string: string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "string"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isArray",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isArray( object: any ): object is any[]",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "any",
                                    "isArray": true
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isRegExp",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isRegExp( object: any ): object is RegExp",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "type": "reference",
                                    "typeName": {
                                        "name": "RegExp"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isDate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isDate( object: any ): object is Date",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "type": "reference",
                                    "typeName": {
                                        "name": "Date"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isError",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isError( object: any ): object is Error",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "type": "reference",
                                    "typeName": {
                                        "name": "Error"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "inherits",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "inherits( constructor: any, superConstructor: any ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "constructor"
                                },
                                {
                                    "typeName": "any",
                                    "name": "superConstructor"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "debuglog",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "debuglog( key: string ): ( msg: string, ...param: any[] ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "msg"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "param",
                                            "rest": true
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "key"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isBoolean",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isBoolean( object: any ): object is boolean",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "boolean"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isBuffer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isBuffer( object: any ): object is Buffer",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "type": "reference",
                                    "typeName": {
                                        "name": "Buffer"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isFunction",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isFunction( object: any ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isNull",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isNull( object: any ): object is null",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "null"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isNullOrUndefined",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isNullOrUndefined( object: any ): object is null | undefined",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "null"
                                        },
                                        {
                                            "typeName": "undefined"
                                        }
                                    ]
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isNumber",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isNumber( object: any ): object is number",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "number"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isObject",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isObject( object: any ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isPrimitive",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isPrimitive( object: any ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isString",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isString( object: any ): object is string",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "string"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isSymbol",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isSymbol( object: any ): object is symbol",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "symbol"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "isUndefined",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isUndefined( object: any ): object is undefined",
                            "type": {
                                "type": "predicate",
                                "param": "object",
                                "returns": {
                                    "typeName": "undefined"
                                }
                            },
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "object"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "deprecate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "deprecate<T extends Function>( fn: T, message: string ): T",
                            "type": {
                                "type": "reference",
                                "typeName": "T"
                            },
                            "typeParameters": [
                                {
                                    "typeName": "Function",
                                    "name": "T",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "T",
                                    "name": "fn"
                                },
                                {
                                    "typeName": "string",
                                    "name": "message"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "CustomPromisify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "CustomPromisify<TCustom extends Function>",
                            "heritage": [
                                {
                                    "name": "Function"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "TCustom",
                            "namespaces": [
                                ""
                            ],
                            "flags": "TypeParameter",
                            "decls": [
                                {
                                    "decl": "TCustom",
                                    "kind": "TypeParameter"
                                }
                            ]
                        },
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "___promisify__: TCustom",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "TCustom"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callbackify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "callbackify( fn: () => Promise<void> ): ( callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<TResult>( fn: () => Promise<TResult> ): ( callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1>( fn: ( arg1: T1 ) => Promise<void> ): ( arg1: T1, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, TResult>( fn: ( arg1: T1 ) => Promise<TResult> ): ( arg1: T1, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2>( fn: ( arg1: T1, arg2: T2 ) => Promise<void> ): ( arg1: T1, arg2: T2, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, TResult>( fn: ( arg1: T1, arg2: T2 ) => Promise<TResult> ): ( arg1: T1, arg2: T2, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3>( fn: ( arg1: T1, arg2: T2, arg3: T3 ) => Promise<void> ): ( arg1: T1, arg2: T2, arg3: T3, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3 ) => Promise<TResult> ): ( arg1: T1, arg2: T2, arg3: T3, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4 ) => Promise<void> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4 ) => Promise<TResult> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4, T5>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5 ) => Promise<void> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4, T5, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5 ) => Promise<TResult> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4, T5, T6>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6 ) => Promise<void> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: ( err: NodeJS.ErrnoException ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T6",
                                            "name": "arg6"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                },
                                {
                                    "typeName": "T6",
                                    "name": "T6"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T6",
                                                "name": "arg6"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "typeName": "void"
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "callbackify<T1, T2, T3, T4, T5, T6, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6 ) => Promise<TResult> ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: ( err: NodeJS.ErrnoException, result: TResult ) => void ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T6",
                                            "name": "arg6"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "NodeJS",
                                                                "ErrnoException"
                                                            ]
                                                        },
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "TResult",
                                                        "name": "result"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                },
                                {
                                    "typeName": "T6",
                                    "name": "T6"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T6",
                                                "name": "arg6"
                                            }
                                        ],
                                        "type": {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Promise"
                                            },
                                            "typeArguments": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "TResult"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "promisify",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "promisify<TCustom extends Function>( fn: CustomPromisify<TCustom> ): TCustom",
                            "type": {
                                "type": "reference",
                                "typeName": "TCustom"
                            },
                            "typeParameters": [
                                {
                                    "typeName": "Function",
                                    "name": "TCustom",
                                    "typeOperator": " extends"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "CustomPromisify",
                                    "typeArguments": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "TCustom"
                                            }
                                        }
                                    ],
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<TResult>( fn: ( callback: ( err: Error, result: TResult ) => void ) => void ): () => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify( fn: ( callback: ( err: Error ) => void ) => void ): () => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, TResult>( fn: ( arg1: T1, callback: ( err: Error, result: TResult ) => void ) => void ): ( arg1: T1 ) => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1>( fn: ( arg1: T1, callback: ( err: Error ) => void ) => void ): ( arg1: T1 ) => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, TResult>( fn: ( arg1: T1, arg2: T2, callback: ( err: Error, result: TResult ) => void ) => void ): ( arg1: T1, arg2: T2 ) => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2>( fn: ( arg1: T1, arg2: T2, callback: ( err: Error ) => void ) => void ): ( arg1: T1, arg2: T2 ) => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, callback: ( err: Error, result: TResult ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3 ) => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3>( fn: ( arg1: T1, arg2: T2, arg3: T3, callback: ( err: Error ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3 ) => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3, T4, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: ( err: Error, result: TResult ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4 ) => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3, T4>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: ( err: Error ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4 ) => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3, T4, T5, TResult>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: ( err: Error, result: TResult ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5 ) => Promise<TResult>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "TResult"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                },
                                {
                                    "typeName": "TResult",
                                    "name": "TResult"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeName": "TResult",
                                                            "name": "result"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify<T1, T2, T3, T4, T5>( fn: ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: ( err: Error ) => void ) => void ): ( arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5 ) => Promise<void>",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T1",
                                            "name": "arg1"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T2",
                                            "name": "arg2"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T3",
                                            "name": "arg3"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T4",
                                            "name": "arg4"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T5",
                                            "name": "arg5"
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "typeName": {
                                            "name": "Promise"
                                        },
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    }
                                }
                            },
                            "typeParameters": [
                                {
                                    "typeName": "T1",
                                    "name": "T1"
                                },
                                {
                                    "typeName": "T2",
                                    "name": "T2"
                                },
                                {
                                    "typeName": "T3",
                                    "name": "T3"
                                },
                                {
                                    "typeName": "T4",
                                    "name": "T4"
                                },
                                {
                                    "typeName": "T5",
                                    "name": "T5"
                                }
                            ],
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "T1",
                                                "name": "arg1"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T2",
                                                "name": "arg2"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T3",
                                                "name": "arg3"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T4",
                                                "name": "arg4"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "T5",
                                                "name": "arg5"
                                            },
                                            {
                                                "type": "function",
                                                "definition": {
                                                    "parameters": [
                                                        {
                                                            "type": "reference",
                                                            "typeName": "Error",
                                                            "name": "err"
                                                        }
                                                    ],
                                                    "type": {
                                                        "typeName": "void"
                                                    }
                                                },
                                                "name": "callback"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify( fn: Function ): Function",
                            "type": {
                                "type": "reference",
                                "typeName": "Function"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Function",
                                    "name": "fn"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "promisify",
                            "kind": "ModuleDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "assert",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "tty",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "isatty",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "isatty( fd: number ): boolean",
                            "type": "boolean",
                            "parameters": [
                                {
                                    "typeName": "number",
                                    "name": "fd"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "domain",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "Domain",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Domain",
                            "heritage": [
                                {
                                    "name": "not expression with type arguments but HeritageClause -> [ pos,end,flags,transformFlags,parent,kind,token,types ]"
                                },
                                {
                                    "name": "not expression with type arguments but HeritageClause -> [ pos,end,flags,transformFlags,parent,kind,token,types ]"
                                }
                            ],
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "run",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "run( fn: Function ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Function",
                                            "name": "fn"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "add",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "add( emitter: events.EventEmitter ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "events",
                                                    "EventEmitter"
                                                ]
                                            },
                                            "name": "emitter"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "remove( emitter: events.EventEmitter ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "events",
                                                    "EventEmitter"
                                                ]
                                            },
                                            "name": "emitter"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "bind",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "bind( cb: ( err: Error, data: any ) => any ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    },
                                                    {
                                                        "typeName": "any",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "any"
                                                }
                                            },
                                            "name": "cb"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "intercept",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "intercept( cb: ( data: any ) => any ): any",
                                    "type": "any",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "name": "data"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "any"
                                                }
                                            },
                                            "name": "cb"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "dispose",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "dispose(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "members",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "members: any[]",
                                    "type": {
                                        "typeName": "any",
                                        "isArray": true
                                    },
                                    "kind": "PropertyDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "enter",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "enter(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "exit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "exit(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "create",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "create(): Domain",
                            "type": {
                                "type": "reference",
                                "typeName": "Domain"
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "constants",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "module",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "process",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "v8",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "HeapSpaceInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "HeapSpaceInfo",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "space_name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "space_name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "space_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "space_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "space_used_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "space_used_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "space_available_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "space_available_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "physical_space_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "physical_space_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "DoesZapCodeSpaceFlag",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "DoesZapCodeSpaceFlag: 0 | 1",
                            "type": {
                                "type": "union",
                                "types": [
                                    {
                                        "type": "literal",
                                        "typeName": "number",
                                        "value": "0"
                                    },
                                    {
                                        "type": "literal",
                                        "typeName": "number",
                                        "value": "1"
                                    }
                                ]
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "HeapInfo",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "HeapInfo",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "total_heap_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "total_heap_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "total_heap_size_executable",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "total_heap_size_executable: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "total_physical_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "total_physical_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "total_available_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "total_available_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "used_heap_size",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "used_heap_size: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "heap_size_limit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "heap_size_limit: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "malloced_memory",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "malloced_memory: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "peak_malloced_memory",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "peak_malloced_memory: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "does_zap_garbage",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "does_zap_garbage: DoesZapCodeSpaceFlag",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "DoesZapCodeSpaceFlag"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "getHeapStatistics",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getHeapStatistics(): HeapInfo",
                            "type": {
                                "type": "reference",
                                "typeName": "HeapInfo"
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getHeapSpaceStatistics",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getHeapSpaceStatistics(): HeapSpaceInfo[]",
                            "type": {
                                "typeName": {
                                    "type": "reference",
                                    "typeName": "HeapSpaceInfo"
                                },
                                "isArray": true
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setFlagsFromString",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setFlagsFromString( flags: string ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "string",
                                    "name": "flags"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "timers",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "setTimeout",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setTimeout( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ): NodeJS.Timer",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "NodeJS",
                                        "Timer"
                                    ]
                                }
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                },
                                {
                                    "typeName": "number",
                                    "name": "ms"
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "args",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "setTimeout",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "setTimeout"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__( ms: number ): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "ms"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__<T>( ms: number, value: T ): Promise<T>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "T"
                                                }
                                            }
                                        ]
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "T",
                                            "name": "T"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "ms"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "T",
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "clearTimeout",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "clearTimeout( timeoutId: NodeJS.Timer ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "Timer"
                                        ]
                                    },
                                    "name": "timeoutId"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setInterval",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setInterval( callback: ( ...args: any[] ) => void, ms: number, ...args: any[] ): NodeJS.Timer",
                            "type": {
                                "type": "reference",
                                "typeName": {
                                    "type": "qualified",
                                    "names": [
                                        "NodeJS",
                                        "Timer"
                                    ]
                                }
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                },
                                {
                                    "typeName": "number",
                                    "name": "ms"
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "args",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "clearInterval",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "clearInterval( intervalId: NodeJS.Timer ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": {
                                        "type": "qualified",
                                        "names": [
                                            "NodeJS",
                                            "Timer"
                                        ]
                                    },
                                    "name": "intervalId"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "setImmediate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "setImmediate( callback: ( ...args: any[] ) => void, ...args: any[] ): any",
                            "type": "any",
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "typeName": "any",
                                                "isArray": true,
                                                "name": "args",
                                                "rest": true
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "callback"
                                },
                                {
                                    "typeName": "any",
                                    "isArray": true,
                                    "name": "args",
                                    "rest": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "setImmediate",
                            "kind": "ModuleDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "__promisify__",
                            "namespaces": [
                                "",
                                "setImmediate"
                            ],
                            "decls": [
                                {
                                    "decl": "___promisify__(): Promise<void>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "typeName": "void"
                                            }
                                        ]
                                    },
                                    "kind": "FunctionDeclaration"
                                },
                                {
                                    "decl": "___promisify__<T>( value: T ): Promise<T>",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Promise",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "T"
                                                }
                                            }
                                        ]
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "T",
                                            "name": "T"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T",
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "FunctionDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "clearImmediate",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "clearImmediate( immediateId: any ): void",
                            "type": "void",
                            "parameters": [
                                {
                                    "typeName": "any",
                                    "name": "immediateId"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "console",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ]
        },
        {
            "name": "async_hooks",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "executionAsyncId",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "executionAsyncId(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "currentId",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "currentId(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "triggerAsyncId",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "triggerAsyncId(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "triggerId",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "triggerId(): number",
                            "type": "number",
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "HookCallbacks",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "HookCallbacks",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "init",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "init( asyncId: number, type: string, triggerAsyncId: number, resource: Object ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "asyncId"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "type"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "triggerAsyncId"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Object",
                                            "name": "resource"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "before",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "before( asyncId: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "asyncId"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "after",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "after( asyncId: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "asyncId"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "promiseResolve",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "promiseResolve( asyncId: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "asyncId"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method | Optional",
                            "decls": [
                                {
                                    "decl": "destroy( asyncId: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "asyncId"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "AsyncHook",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "AsyncHook",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "enable",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "enable(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "disable",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disable(): ThisType",
                                    "type": "ThisType",
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "createHook",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createHook( options: HookCallbacks ): AsyncHook",
                            "type": {
                                "type": "reference",
                                "typeName": "AsyncHook"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "HookCallbacks",
                                    "name": "options"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "AsyncResource",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "AsyncResource",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( type: string, triggerAsyncId?: number )",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "type"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "triggerAsyncId",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "emitBefore",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emitBefore(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emitAfter",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emitAfter(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "emitDestroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emitDestroy(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "asyncId",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "asyncId(): number",
                                    "type": "number",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "triggerAsyncId",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "triggerAsyncId(): number",
                                    "type": "number",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "http2",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "StreamPriorityOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "StreamPriorityOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "exclusive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exclusive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "parent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "parent: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "weight",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "weight: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "silent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "silent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "StreamState",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "StreamState",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "localWindowSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "localWindowSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "state",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "state: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "streamLocalClose",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "streamLocalClose: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "streamRemoteClose",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "streamRemoteClose: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "sumDependencyWeight",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "sumDependencyWeight: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "weight",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "weight: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerStreamResponseOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerStreamResponseOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "endStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "endStream: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "getTrailers: ( trailers: OutgoingHttpHeaders ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": "OutgoingHttpHeaders",
                                                    "name": "trailers"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "StatOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "StatOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "offset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "offset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "length",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "length: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerStreamFileResponseOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerStreamFileResponseOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "statCheck",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "statCheck: ( stats: fs.Stats, headers: OutgoingHttpHeaders, statOptions: StatOptions ) => void | boolean",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "fs",
                                                            "Stats"
                                                        ]
                                                    },
                                                    "name": "stats"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": "OutgoingHttpHeaders",
                                                    "name": "headers"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": "StatOptions",
                                                    "name": "statOptions"
                                                }
                                            ],
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "typeName": "void"
                                                    },
                                                    {
                                                        "typeName": "boolean"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "getTrailers: ( trailers: OutgoingHttpHeaders ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": "OutgoingHttpHeaders",
                                                    "name": "trailers"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "offset",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "offset: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "length",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "length: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerStreamFileResponseOptionsWithError",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerStreamFileResponseOptionsWithError",
                            "heritage": [
                                {
                                    "name": "ServerStreamFileResponseOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "onError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "onError: ( err: NodeJS.ErrnoException ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "NodeJS",
                                                            "ErrnoException"
                                                        ]
                                                    },
                                                    "name": "err"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2Stream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2Stream",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "aborted",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "aborted: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "destroyed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "destroyed: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "priority",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "priority( options: StreamPriorityOptions ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "StreamPriorityOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstCode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rstCode: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rstStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstStream( code: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstWithNoError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstWithNoError(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstWithProtocolError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstWithProtocolError(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstWithCancel",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstWithCancel(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstWithRefuse",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstWithRefuse(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "rstWithInternalError",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstWithInternalError(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "session",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "session: Http2Session",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Http2Session"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "state",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "state: StreamState",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "StreamState"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'aborted' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'data' , listener: ( chunk: Buffer | string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "string"
                                                            }
                                                        ],
                                                        "name": "chunk"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'frameError' , listener: ( frameType: number, errorCode: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'pipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'unpipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'streamClosed' , listener: ( code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'trailers' , listener: ( trailers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "trailers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'aborted'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'data' , chunk: Buffer | string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                },
                                                {
                                                    "typeName": "string"
                                                }
                                            ],
                                            "name": "chunk"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'drain'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'end'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'finish'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'frameError' , frameType: number, errorCode: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "frameType"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "errorCode"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'pipe' , src: stream.Readable ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "stream",
                                                    "Readable"
                                                ]
                                            },
                                            "name": "src"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'unpipe' , src: stream.Readable ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "stream",
                                                    "Readable"
                                                ]
                                            },
                                            "name": "src"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'streamClosed' , code: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'timeout'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'trailers' , trailers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "trailers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'aborted' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'data' , listener: ( chunk: Buffer | string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "string"
                                                            }
                                                        ],
                                                        "name": "chunk"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'frameError' , listener: ( frameType: number, errorCode: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'pipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'unpipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'streamClosed' , listener: ( code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'trailers' , listener: ( trailers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "trailers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'aborted' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'data' , listener: ( chunk: Buffer | string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "string"
                                                            }
                                                        ],
                                                        "name": "chunk"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'frameError' , listener: ( frameType: number, errorCode: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'pipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'unpipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'streamClosed' , listener: ( code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'trailers' , listener: ( trailers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "trailers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'aborted' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'data' , listener: ( chunk: Buffer | string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "string"
                                                            }
                                                        ],
                                                        "name": "chunk"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'frameError' , listener: ( frameType: number, errorCode: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'pipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'unpipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'streamClosed' , listener: ( code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'trailers' , listener: ( trailers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "trailers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'aborted' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'data' , listener: ( chunk: Buffer | string ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "data",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Buffer"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "string"
                                                            }
                                                        ],
                                                        "name": "chunk"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'end' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "end",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'frameError' , listener: ( frameType: number, errorCode: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'pipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "pipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'unpipe' , listener: ( src: stream.Readable ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unpipe",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "stream",
                                                                "Readable"
                                                            ]
                                                        },
                                                        "name": "src"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'streamClosed' , listener: ( code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "streamClosed",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'trailers' , listener: ( trailers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "trailers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "trailers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientHttp2Stream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientHttp2Stream",
                            "heritage": [
                                {
                                    "name": "Http2Stream"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'headers' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'push' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'response' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'headers' , headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'push' , headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'response' , headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'headers' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'push' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'response' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'headers' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'push' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'response' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'headers' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'push' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'response' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'headers' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "headers",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'push' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "push",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'response' , listener: ( headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "response",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerHttp2Stream",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerHttp2Stream",
                            "heritage": [
                                {
                                    "name": "Http2Stream"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "additionalHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "additionalHeaders( headers: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "headersSent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "headersSent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pushAllowed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pushAllowed: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pushStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "pushStream( headers: OutgoingHttpHeaders, callback?: ( pushStream: ServerHttp2Stream ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "pushStream"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "pushStream( headers: OutgoingHttpHeaders, options?: StreamPriorityOptions, callback?: ( pushStream: ServerHttp2Stream ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "StreamPriorityOptions",
                                            "name": "options",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "pushStream"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "respond",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "respond( headers?: OutgoingHttpHeaders, options?: ServerStreamResponseOptions ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerStreamResponseOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "respondWithFD",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "respondWithFD( fd: number, headers?: OutgoingHttpHeaders, options?: ServerStreamFileResponseOptions ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "fd"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerStreamFileResponseOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "respondWithFile",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "respondWithFile( path: string, headers?: OutgoingHttpHeaders, options?: ServerStreamFileResponseOptionsWithError ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "path"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerStreamFileResponseOptionsWithError",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Settings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Settings",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "headerTableSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "headerTableSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "enablePush",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "enablePush: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "initialWindowSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "initialWindowSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxFrameSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxFrameSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxConcurrentStreams",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxConcurrentStreams: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxHeaderListSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxHeaderListSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientSessionRequestOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientSessionRequestOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "endStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "endStream: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "exclusive",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "exclusive: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "parent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "parent: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "weight",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "weight: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "getTrailers: ( trailers: OutgoingHttpHeaders, flags: number ) => void",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "type": "reference",
                                                    "typeName": "OutgoingHttpHeaders",
                                                    "name": "trailers"
                                                },
                                                {
                                                    "typeName": "number",
                                                    "name": "flags"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "void"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SessionShutdownOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SessionShutdownOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "graceful",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "graceful: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "errorCode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "errorCode: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lastStreamID",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lastStreamID: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "opaqueData",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "opaqueData: Buffer | Uint8Array",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Buffer"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Uint8Array"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SessionState",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SessionState",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "effectiveLocalWindowSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "effectiveLocalWindowSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "effectiveRecvDataLength",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "effectiveRecvDataLength: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "nextStreamID",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "nextStreamID: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "localWindowSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "localWindowSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "lastProcStreamID",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "lastProcStreamID: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "remoteWindowSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "remoteWindowSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "outboundQueueSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "outboundQueueSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "deflateDynamicTableSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "deflateDynamicTableSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "inflateDynamicTableSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "inflateDynamicTableSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2Session",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2Session",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "destroy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "destroy(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "destroyed",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "destroyed: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "localSettings",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "localSettings: Settings",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Settings"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "pendingSettingsAck",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "pendingSettingsAck: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "remoteSettings",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "remoteSettings: Settings",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Settings"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rstStream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "rstStream( stream: Http2Stream, code?: number ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Http2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "shutdown",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "shutdown( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "shutdown( options: SessionShutdownOptions, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "SessionShutdownOptions",
                                            "name": "options"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket | tls.TLSSocket",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "net",
                                                        "Socket"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "tls",
                                                        "TLSSocket"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "state",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "state: SessionState",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "SessionState"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "priority",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "priority( stream: Http2Stream, options: StreamPriorityOptions ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Http2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "StreamPriorityOptions",
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "settings",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "settings( settings: Settings ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "Settings",
                                            "name": "settings"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "type: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'frameError' , listener: ( frameType: number, errorCode: number, streamID: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "streamID"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'goaway' , listener: ( errorCode: number, lastStreamID: number, opaqueData: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "lastStreamID"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "opaqueData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'localSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'remoteSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'error' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'frameError' , frameType: number, errorCode: number, streamID: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "frameType"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "errorCode"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "streamID"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'goaway' , errorCode: number, lastStreamID: number, opaqueData: Buffer ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "errorCode"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "lastStreamID"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Buffer",
                                            "name": "opaqueData"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'localSettings' , settings: Settings ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Settings",
                                            "name": "settings"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'remoteSettings' , settings: Settings ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Settings",
                                            "name": "settings"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'socketError' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'timeout'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'frameError' , listener: ( frameType: number, errorCode: number, streamID: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "streamID"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'goaway' , listener: ( errorCode: number, lastStreamID: number, opaqueData: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "lastStreamID"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "opaqueData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'localSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'remoteSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'frameError' , listener: ( frameType: number, errorCode: number, streamID: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "streamID"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'goaway' , listener: ( errorCode: number, lastStreamID: number, opaqueData: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "lastStreamID"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "opaqueData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'localSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'remoteSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'frameError' , listener: ( frameType: number, errorCode: number, streamID: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "streamID"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'goaway' , listener: ( errorCode: number, lastStreamID: number, opaqueData: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "lastStreamID"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "opaqueData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'localSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'remoteSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'frameError' , listener: ( frameType: number, errorCode: number, streamID: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "frameError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "frameType"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "streamID"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'goaway' , listener: ( errorCode: number, lastStreamID: number, opaqueData: Buffer ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "goaway",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "number",
                                                        "name": "errorCode"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "lastStreamID"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Buffer",
                                                        "name": "opaqueData"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'localSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "localSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'remoteSettings' , listener: ( settings: Settings ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "remoteSettings",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Settings",
                                                        "name": "settings"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientHttp2Session",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientHttp2Session",
                            "heritage": [
                                {
                                    "name": "Http2Session"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "request",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "request( headers?: OutgoingHttpHeaders, options?: ClientSessionRequestOptions ): ClientHttp2Stream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ClientHttp2Stream"
                                    },
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ClientSessionRequestOptions",
                                            "name": "options",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'connect' , listener: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'stream' , listener: ( stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'connect' , session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ClientHttp2Session",
                                            "name": "session"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "tls",
                                                            "TLSSocket"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'stream' , stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ClientHttp2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'connect' , listener: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'stream' , listener: ( stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'connect' , listener: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'stream' , listener: ( stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'connect' , listener: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'stream' , listener: ( stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'connect' , listener: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'stream' , listener: ( stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ClientHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ServerHttp2Session",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerHttp2Session",
                            "heritage": [
                                {
                                    "name": "Http2Session"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "server",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "server: Http2Server | Http2SecureServer",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Http2Server"
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "name": "Http2SecureServer"
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'connect' , listener: ( session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'connect' , session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerHttp2Session",
                                            "name": "session"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "net",
                                                            "Socket"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "type": "qualified",
                                                        "names": [
                                                            "tls",
                                                            "TLSSocket"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'stream' , stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerHttp2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'connect' , listener: ( session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'connect' , listener: ( session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'connect' , listener: ( session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'connect' , listener: ( session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "connect",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Session",
                                                        "name": "session"
                                                    },
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "net",
                                                                        "Socket"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "type": "qualified",
                                                                    "names": [
                                                                        "tls",
                                                                        "TLSSocket"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "SessionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SessionOptions",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "maxDeflateDynamicTableSize",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxDeflateDynamicTableSize: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxReservedRemoteStreams",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxReservedRemoteStreams: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "maxSendHeaderBlockLength",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "maxSendHeaderBlockLength: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "paddingStrategy",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "paddingStrategy: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "peerMaxConcurrentStreams",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "peerMaxConcurrentStreams: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "selectPadding",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "selectPadding: ( frameLen: number, maxFrameLen: number ) => number",
                                    "type": {
                                        "type": "function",
                                        "definition": {
                                            "parameters": [
                                                {
                                                    "typeName": "number",
                                                    "name": "frameLen"
                                                },
                                                {
                                                    "typeName": "number",
                                                    "name": "maxFrameLen"
                                                }
                                            ],
                                            "type": {
                                                "typeName": "number"
                                            }
                                        }
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "settings",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "settings: Settings",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "Settings"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "ClientSessionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ClientSessionOptions: SessionOptions",
                            "type": {
                                "type": "reference",
                                "typeName": "SessionOptions"
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "ServerSessionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "ServerSessionOptions: SessionOptions",
                            "type": {
                                "type": "reference",
                                "typeName": "SessionOptions"
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "SecureClientSessionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecureClientSessionOptions",
                            "heritage": [
                                {
                                    "name": "ClientSessionOptions"
                                },
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "SecureServerSessionOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecureServerSessionOptions",
                            "heritage": [
                                {
                                    "name": "ServerSessionOptions"
                                },
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ]
                },
                {
                    "name": "SecureServerOptions",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "SecureServerOptions",
                            "heritage": [
                                {
                                    "name": "SecureServerSessionOptions"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "allowHTTP1",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "allowHTTP1: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2Server",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2Server",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'request' , request: Http2ServerRequest, response: Http2ServerResponse ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Http2ServerRequest",
                                            "name": "request"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Http2ServerResponse",
                                            "name": "response"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'sessionError' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'socketError' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'stream' , stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerHttp2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'timeout'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2SecureServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2SecureServer",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'unknownProtocol' , listener: ( socket: tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        },
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'request' , request: Http2ServerRequest, response: Http2ServerResponse ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Http2ServerRequest",
                                            "name": "request"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Http2ServerResponse",
                                            "name": "response"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'sessionError' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'socketError' , err: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "err"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'stream' , stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "ServerHttp2Stream",
                                            "name": "stream"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "IncomingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "flags"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'timeout'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'unknownProtocol' , socket: tls.TLSSocket ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "tls",
                                                    "TLSSocket"
                                                ]
                                            },
                                            "name": "socket"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'unknownProtocol' , listener: ( socket: tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        },
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'unknownProtocol' , listener: ( socket: tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        },
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'unknownProtocol' , listener: ( socket: tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        },
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'request' , listener: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "request",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerRequest",
                                                        "name": "request"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "response"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'sessionError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "sessionError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'socketError' , listener: ( err: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "socketError",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'stream' , listener: ( stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "stream",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "ServerHttp2Stream",
                                                        "name": "stream"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "IncomingHttpHeaders",
                                                        "name": "headers"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "flags"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'timeout' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "timeout",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'unknownProtocol' , listener: ( socket: tls.TLSSocket ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "unknownProtocol",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        },
                                                        "name": "socket"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2ServerRequest",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2ServerRequest",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "headers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "headers: IncomingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IncomingHttpHeaders"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "httpVersion",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "httpVersion: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "method",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "method: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rawHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rawHeaders: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "rawTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "rawTrailers: string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket | tls.TLSSocket",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "net",
                                                        "Socket"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "tls",
                                                        "TLSSocket"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stream: ServerHttp2Stream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ServerHttp2Stream"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "trailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "trailers: IncomingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "IncomingHttpHeaders"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "url",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "url: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'aborted' , hadError: boolean, code: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "boolean",
                                            "name": "hadError"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Http2ServerResponse",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Http2ServerResponse",
                            "heritage": [
                                {
                                    "name": "not identifier but PropertyAccessExpression"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "addTrailers",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addTrailers( trailers: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "trailers"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "connection: net.Socket | tls.TLSSocket",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "net",
                                                        "Socket"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "tls",
                                                        "TLSSocket"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "end",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "end( callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "end( data?: string | Buffer, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                }
                                            ],
                                            "name": "data",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "end( data?: string | Buffer, encoding?: string, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                }
                                            ],
                                            "name": "data",
                                            "optional": true
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "finished",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "finished: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "getHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeader( name: string ): string",
                                    "type": "string",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getHeaderNames",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeaderNames(): string[]",
                                    "type": {
                                        "typeName": "string",
                                        "isArray": true
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getHeaders",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getHeaders(): OutgoingHttpHeaders",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "OutgoingHttpHeaders"
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "hasHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "hasHeader( name: string ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "headersSent",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "headersSent: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "removeHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "removeHeader( name: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "sendDate",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "sendDate: boolean",
                                    "type": "boolean",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "setHeader",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setHeader( name: string, value: number | string | string[] ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "number"
                                                },
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "string",
                                                    "isArray": true
                                                }
                                            ],
                                            "name": "value"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "setTimeout( msecs: number, callback?: () => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "msecs"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "socket",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "socket: net.Socket | tls.TLSSocket",
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "net",
                                                        "Socket"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": {
                                                    "type": "qualified",
                                                    "names": [
                                                        "tls",
                                                        "TLSSocket"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "statusCode",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "statusCode: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "statusMessage",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "statusMessage: '' ",
                                    "type": {
                                        "type": "literal",
                                        "typeName": "string",
                                        "value": ""
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "stream",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "stream: ServerHttp2Stream",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "ServerHttp2Stream"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "write",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "write( chunk: string | Buffer, callback?: ( err: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                }
                                            ],
                                            "name": "chunk"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "write( chunk: string | Buffer, encoding?: string, callback?: ( err: Error ) => void ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "type": "reference",
                                                    "typeName": {
                                                        "name": "Buffer"
                                                    }
                                                }
                                            ],
                                            "name": "chunk"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "encoding",
                                            "optional": true
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "err"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "writeContinue",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "writeContinue(): void",
                                    "type": "void",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "writeHead",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "writeHead( statusCode: number, headers?: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "statusCode"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "writeHead( statusCode: number, statusMessage?: string, headers?: OutgoingHttpHeaders ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "number",
                                            "name": "statusCode"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "statusMessage",
                                            "optional": true
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "createPushResponse",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "createPushResponse( headers: OutgoingHttpHeaders, callback: ( err: Error | null, res: Http2ServerResponse ) => void ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "OutgoingHttpHeaders",
                                            "name": "headers"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "reference",
                                                                "typeName": {
                                                                    "name": "Error"
                                                                }
                                                            },
                                                            {
                                                                "typeName": "null"
                                                            }
                                                        ],
                                                        "name": "err"
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Http2ServerResponse",
                                                        "name": "res"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "addListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "addListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "addListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "emit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "emit( event: string | symbol, ...args: any[] ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "typeName": "string"
                                                },
                                                {
                                                    "typeName": "symbol"
                                                }
                                            ],
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "any",
                                            "isArray": true,
                                            "name": "args",
                                            "rest": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'aborted' , hadError: boolean, code: number ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "typeName": "boolean",
                                            "name": "hadError"
                                        },
                                        {
                                            "typeName": "number",
                                            "name": "code"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'close'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'drain'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'error' , error: Error ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "Error",
                                            "name": "error"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "emit( event: 'finish'  ): boolean",
                                    "type": "boolean",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "on",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "on( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "on( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "once",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "once( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "once( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "prependOnceListener",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "prependOnceListener( event: string, listener: ( ...args: any[] ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "any",
                                                        "isArray": true,
                                                        "name": "args",
                                                        "rest": true
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'aborted' , listener: ( hadError: boolean, code: number ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "aborted",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "typeName": "boolean",
                                                        "name": "hadError"
                                                    },
                                                    {
                                                        "typeName": "number",
                                                        "name": "code"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'close' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "close",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'drain' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "drain",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'error' , listener: ( error: Error ) => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "error",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "parameters": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": "Error",
                                                        "name": "error"
                                                    }
                                                ],
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                },
                                {
                                    "decl": "prependOnceListener( event: 'finish' , listener: () => void ): ThisType",
                                    "type": "ThisType",
                                    "parameters": [
                                        {
                                            "type": "literal",
                                            "typeName": "string",
                                            "value": "finish",
                                            "name": "event"
                                        },
                                        {
                                            "type": "function",
                                            "definition": {
                                                "type": {
                                                    "typeName": "void"
                                                }
                                            },
                                            "name": "listener"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "constants",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "constants",
                            "kind": "ModuleDeclaration"
                        }
                    ]
                },
                {
                    "name": "getDefaultSettings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getDefaultSettings(): Settings",
                            "type": {
                                "type": "reference",
                                "typeName": "Settings"
                            },
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getPackedSettings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getPackedSettings( settings: Settings ): Settings",
                            "type": {
                                "type": "reference",
                                "typeName": "Settings"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "Settings",
                                    "name": "settings"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "getUnpackedSettings",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "getUnpackedSettings( buf: Buffer | Uint8Array ): Settings",
                            "type": {
                                "type": "reference",
                                "typeName": "Settings"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Buffer"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "Uint8Array"
                                            }
                                        }
                                    ],
                                    "name": "buf"
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createServer( onRequestHandler?: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): Http2Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Http2Server"
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerRequest",
                                                "name": "request"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerResponse",
                                                "name": "response"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "onRequestHandler",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createServer( options: ServerOptions, onRequestHandler?: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): Http2Server",
                            "type": {
                                "type": "reference",
                                "typeName": "Http2Server"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "ServerOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerRequest",
                                                "name": "request"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerResponse",
                                                "name": "response"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "onRequestHandler",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "createSecureServer",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "createSecureServer( onRequestHandler?: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): Http2SecureServer",
                            "type": {
                                "type": "reference",
                                "typeName": "Http2SecureServer"
                            },
                            "parameters": [
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerRequest",
                                                "name": "request"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerResponse",
                                                "name": "response"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "onRequestHandler",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "createSecureServer( options: SecureServerOptions, onRequestHandler?: ( request: Http2ServerRequest, response: Http2ServerResponse ) => void ): Http2SecureServer",
                            "type": {
                                "type": "reference",
                                "typeName": "Http2SecureServer"
                            },
                            "parameters": [
                                {
                                    "type": "reference",
                                    "typeName": "SecureServerOptions",
                                    "name": "options"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerRequest",
                                                "name": "request"
                                            },
                                            {
                                                "type": "reference",
                                                "typeName": "Http2ServerResponse",
                                                "name": "response"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "onRequestHandler",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                },
                {
                    "name": "connect",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "connect( authority: string | url.URL, listener?: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ClientHttp2Session",
                            "type": {
                                "type": "reference",
                                "typeName": "ClientHttp2Session"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "url",
                                                    "URL"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": "authority"
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "ClientHttp2Session",
                                                "name": "session"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "socket"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        },
                        {
                            "decl": "connect( authority: string | url.URL, options?: ClientSessionOptions | SecureClientSessionOptions, listener?: ( session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket ) => void ): ClientHttp2Session",
                            "type": {
                                "type": "reference",
                                "typeName": "ClientHttp2Session"
                            },
                            "parameters": [
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "typeName": "string"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "type": "qualified",
                                                "names": [
                                                    "url",
                                                    "URL"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": "authority"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "ClientSessionOptions"
                                            }
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": {
                                                "name": "SecureClientSessionOptions"
                                            }
                                        }
                                    ],
                                    "name": "options",
                                    "optional": true
                                },
                                {
                                    "type": "function",
                                    "definition": {
                                        "parameters": [
                                            {
                                                "type": "reference",
                                                "typeName": "ClientHttp2Session",
                                                "name": "session"
                                            },
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "net",
                                                                "Socket"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "reference",
                                                        "typeName": {
                                                            "type": "qualified",
                                                            "names": [
                                                                "tls",
                                                                "TLSSocket"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "name": "socket"
                                            }
                                        ],
                                        "type": {
                                            "typeName": "void"
                                        }
                                    },
                                    "name": "listener",
                                    "optional": true
                                }
                            ],
                            "kind": "FunctionDeclaration"
                        }
                    ]
                }
            ]
        },
        {
            "name": "perf_hooks",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "ModuleDeclaration"
                }
            ],
            "members": [
                {
                    "name": "PerformanceEntry",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PerformanceEntry",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "duration",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "duration: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "name",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "name: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "startTime",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "startTime: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "entryType",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "entryType: string",
                                    "type": "string",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "kind",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property | Optional",
                            "decls": [
                                {
                                    "decl": "kind: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "PerformanceNodeTiming",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PerformanceNodeTiming",
                            "heritage": [
                                {
                                    "name": "PerformanceEntry"
                                }
                            ],
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "bootstrapComplete",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "bootstrapComplete: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "clusterSetupEnd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "clusterSetupEnd: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "clusterSetupStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "clusterSetupStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "loopExit",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "loopExit: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "loopStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "loopStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "moduleLoadEnd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "moduleLoadEnd: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "moduleLoadStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "moduleLoadStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "nodeStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "nodeStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "preloadModuleLoadEnd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "preloadModuleLoadEnd: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "preloadModuleLoadStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "preloadModuleLoadStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "thirdPartyMainEnd",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "thirdPartyMainEnd: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "thirdPartyMainStart",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "thirdPartyMainStart: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "v8Start",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "v8Start: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Performance",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "Performance",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "clearFunctions",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "clearFunctions( name?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "clearMarks",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "clearMarks( name?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "clearMeasures",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "clearMeasures( name?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEntries",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntries(): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEntriesByName",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntriesByName( name: string, type?: string ): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "type",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEntriesByType",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntriesByType( type: string ): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "type"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "mark",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "mark( name?: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "measure",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "measure( name: string, startMark: string, endMark: string ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "startMark"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "endMark"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "nodeTiming",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "nodeTiming: PerformanceNodeTiming",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "PerformanceNodeTiming"
                                    },
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "now",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "now(): number",
                                    "type": "number",
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "timeOrigin",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Property",
                            "decls": [
                                {
                                    "decl": "timeOrigin: number",
                                    "type": "number",
                                    "kind": "PropertySignature"
                                }
                            ]
                        },
                        {
                            "name": "timerify",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "timerify<T extends FunctionType>( fn: T ): T",
                                    "type": {
                                        "type": "reference",
                                        "typeName": "T"
                                    },
                                    "typeParameters": [
                                        {
                                            "typeName": "FunctionType",
                                            "name": "T",
                                            "typeOperator": " extends"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "T",
                                            "name": "fn"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "PerformanceObserverEntryList",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PerformanceObserverEntryList",
                            "kind": "InterfaceDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "getEntries",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntries(): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEntriesByName",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntriesByName( name: string, type?: string ): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "name"
                                        },
                                        {
                                            "typeName": "string",
                                            "name": "type",
                                            "optional": true
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        },
                        {
                            "name": "getEntriesByType",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "getEntriesByType( type: string ): PerformanceEntry[]",
                                    "type": {
                                        "typeName": {
                                            "type": "reference",
                                            "typeName": "PerformanceEntry"
                                        },
                                        "isArray": true
                                    },
                                    "parameters": [
                                        {
                                            "typeName": "string",
                                            "name": "type"
                                        }
                                    ],
                                    "kind": "MethodSignature"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "PerformanceObserverCallback",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PerformanceObserverCallback: ( list: PerformanceObserverEntryList, observer: PerformanceObserver ) => void",
                            "type": {
                                "type": "function",
                                "definition": {
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PerformanceObserverEntryList",
                                            "name": "list"
                                        },
                                        {
                                            "type": "reference",
                                            "typeName": "PerformanceObserver",
                                            "name": "observer"
                                        }
                                    ],
                                    "type": {
                                        "typeName": "void"
                                    }
                                }
                            },
                            "kind": "TypeAliasDeclaration"
                        }
                    ]
                },
                {
                    "name": "PerformanceObserver",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "PerformanceObserver",
                            "kind": "ClassDeclaration"
                        }
                    ],
                    "members": [
                        {
                            "name": "Constructor",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Constructor",
                            "decls": [
                                {
                                    "decl": "( callback: PerformanceObserverCallback )",
                                    "parameters": [
                                        {
                                            "type": "reference",
                                            "typeName": "PerformanceObserverCallback",
                                            "name": "callback"
                                        }
                                    ],
                                    "kind": "Constructor"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "disconnect(): void",
                                    "type": "void",
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        },
                        {
                            "name": "observe",
                            "namespaces": [
                                ""
                            ],
                            "flags": "Method",
                            "decls": [
                                {
                                    "decl": "observe( options: { entryTypes, buffered } ): void",
                                    "type": "void",
                                    "parameters": [
                                        {
                                            "type": "typeliteral",
                                            "members": [
                                                {
                                                    "typeName": "entryTypes",
                                                    "name": "entryTypes"
                                                },
                                                {
                                                    "typeName": "buffered",
                                                    "name": "buffered",
                                                    "optional": true
                                                }
                                            ],
                                            "name": "options"
                                        }
                                    ],
                                    "kind": "MethodDeclaration"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "constants",
                    "namespaces": [
                        ""
                    ],
                    "decls": [
                        {
                            "decl": "constants",
                            "kind": "ModuleDeclaration"
                        }
                    ]
                }
            ]
        }
    ],
    "internal": [
        {
            "name": "generated.d",
            "flags": "ValueModule",
            "decls": [
                {
                    "decl": "",
                    "kind": "SourceFile"
                }
            ]
        }
    ],
    "topLevelNames": [
        "AssertionError",
        "Buffer",
        "BufferEncoding",
        "COPYFILE_EXCL",
        "Console",
        "DEFAULT_SETTINGS_ENABLE_PUSH",
        "DEFAULT_SETTINGS_HEADER_TABLE_SIZE",
        "DEFAULT_SETTINGS_INITIAL_WINDOW_SIZE",
        "DEFAULT_SETTINGS_MAX_FRAME_SIZE",
        "Duplex",
        "DuplexOptions",
        "Error",
        "ErrorConstructor",
        "EventEmitter",
        "F_OK",
        "HTTP2_HEADER_ACCEPT",
        "HTTP2_HEADER_ACCEPT_CHARSET",
        "HTTP2_HEADER_ACCEPT_ENCODING",
        "HTTP2_HEADER_ACCEPT_LANGUAGE",
        "HTTP2_HEADER_ACCEPT_RANGES",
        "HTTP2_HEADER_ACCESS_CONTROL_ALLOW_ORIGIN",
        "HTTP2_HEADER_AGE",
        "HTTP2_HEADER_ALLOW",
        "HTTP2_HEADER_AUTHORITY",
        "HTTP2_HEADER_AUTHORIZATION",
        "HTTP2_HEADER_CACHE_CONTROL",
        "HTTP2_HEADER_CONNECTION",
        "HTTP2_HEADER_CONTENT_DISPOSITION",
        "HTTP2_HEADER_CONTENT_ENCODING",
        "HTTP2_HEADER_CONTENT_LANGUAGE",
        "HTTP2_HEADER_CONTENT_LENGTH",
        "HTTP2_HEADER_CONTENT_LOCATION",
        "HTTP2_HEADER_CONTENT_MD5",
        "HTTP2_HEADER_CONTENT_RANGE",
        "HTTP2_HEADER_CONTENT_TYPE",
        "HTTP2_HEADER_COOKIE",
        "HTTP2_HEADER_DATE",
        "HTTP2_HEADER_ETAG",
        "HTTP2_HEADER_EXPECT",
        "HTTP2_HEADER_EXPIRES",
        "HTTP2_HEADER_FROM",
        "HTTP2_HEADER_HOST",
        "HTTP2_HEADER_HTTP2_SETTINGS",
        "HTTP2_HEADER_IF_MATCH",
        "HTTP2_HEADER_IF_MODIFIED_SINCE",
        "HTTP2_HEADER_IF_NONE_MATCH",
        "HTTP2_HEADER_IF_RANGE",
        "HTTP2_HEADER_IF_UNMODIFIED_SINCE",
        "HTTP2_HEADER_KEEP_ALIVE",
        "HTTP2_HEADER_LAST_MODIFIED",
        "HTTP2_HEADER_LINK",
        "HTTP2_HEADER_LOCATION",
        "HTTP2_HEADER_MAX_FORWARDS",
        "HTTP2_HEADER_METHOD",
        "HTTP2_HEADER_PATH",
        "HTTP2_HEADER_PREFER",
        "HTTP2_HEADER_PROXY_AUTHENTICATE",
        "HTTP2_HEADER_PROXY_AUTHORIZATION",
        "HTTP2_HEADER_PROXY_CONNECTION",
        "HTTP2_HEADER_RANGE",
        "HTTP2_HEADER_REFERER",
        "HTTP2_HEADER_REFRESH",
        "HTTP2_HEADER_RETRY_AFTER",
        "HTTP2_HEADER_SCHEME",
        "HTTP2_HEADER_SERVER",
        "HTTP2_HEADER_SET_COOKIE",
        "HTTP2_HEADER_STATUS",
        "HTTP2_HEADER_STRICT_TRANSPORT_SECURITY",
        "HTTP2_HEADER_TE",
        "HTTP2_HEADER_TRANSFER_ENCODING",
        "HTTP2_HEADER_UPGRADE",
        "HTTP2_HEADER_USER_AGENT",
        "HTTP2_HEADER_VARY",
        "HTTP2_HEADER_VIA",
        "HTTP2_HEADER_WWW_AUTHENTICATE",
        "HTTP2_METHOD_ACL",
        "HTTP2_METHOD_BASELINE_CONTROL",
        "HTTP2_METHOD_BIND",
        "HTTP2_METHOD_CHECKIN",
        "HTTP2_METHOD_CHECKOUT",
        "HTTP2_METHOD_CONNECT",
        "HTTP2_METHOD_COPY",
        "HTTP2_METHOD_DELETE",
        "HTTP2_METHOD_GET",
        "HTTP2_METHOD_HEAD",
        "HTTP2_METHOD_LABEL",
        "HTTP2_METHOD_LINK",
        "HTTP2_METHOD_LOCK",
        "HTTP2_METHOD_MERGE",
        "HTTP2_METHOD_MKACTIVITY",
        "HTTP2_METHOD_MKCALENDAR",
        "HTTP2_METHOD_MKCOL",
        "HTTP2_METHOD_MKREDIRECTREF",
        "HTTP2_METHOD_MKWORKSPACE",
        "HTTP2_METHOD_MOVE",
        "HTTP2_METHOD_OPTIONS",
        "HTTP2_METHOD_ORDERPATCH",
        "HTTP2_METHOD_PATCH",
        "HTTP2_METHOD_POST",
        "HTTP2_METHOD_PRI",
        "HTTP2_METHOD_PROPFIND",
        "HTTP2_METHOD_PROPPATCH",
        "HTTP2_METHOD_PUT",
        "HTTP2_METHOD_REBIND",
        "HTTP2_METHOD_REPORT",
        "HTTP2_METHOD_SEARCH",
        "HTTP2_METHOD_TRACE",
        "HTTP2_METHOD_UNBIND",
        "HTTP2_METHOD_UNCHECKOUT",
        "HTTP2_METHOD_UNLINK",
        "HTTP2_METHOD_UNLOCK",
        "HTTP2_METHOD_UPDATE",
        "HTTP2_METHOD_UPDATEREDIRECTREF",
        "HTTP2_METHOD_VERSION_CONTROL",
        "HTTP_STATUS_ACCEPTED",
        "HTTP_STATUS_ALREADY_REPORTED",
        "HTTP_STATUS_BAD_GATEWAY",
        "HTTP_STATUS_BAD_REQUEST",
        "HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED",
        "HTTP_STATUS_CONFLICT",
        "HTTP_STATUS_CONTINUE",
        "HTTP_STATUS_CREATED",
        "HTTP_STATUS_EXPECTATION_FAILED",
        "HTTP_STATUS_FAILED_DEPENDENCY",
        "HTTP_STATUS_FORBIDDEN",
        "HTTP_STATUS_FOUND",
        "HTTP_STATUS_GATEWAY_TIMEOUT",
        "HTTP_STATUS_GONE",
        "HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED",
        "HTTP_STATUS_IM_USED",
        "HTTP_STATUS_INSUFFICIENT_STORAGE",
        "HTTP_STATUS_INTERNAL_SERVER_ERROR",
        "HTTP_STATUS_LENGTH_REQUIRED",
        "HTTP_STATUS_LOCKED",
        "HTTP_STATUS_LOOP_DETECTED",
        "HTTP_STATUS_METHOD_NOT_ALLOWED",
        "HTTP_STATUS_MISDIRECTED_REQUEST",
        "HTTP_STATUS_MOVED_PERMANENTLY",
        "HTTP_STATUS_MULTIPLE_CHOICES",
        "HTTP_STATUS_MULTI_STATUS",
        "HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED",
        "HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION",
        "HTTP_STATUS_NOT_ACCEPTABLE",
        "HTTP_STATUS_NOT_EXTENDED",
        "HTTP_STATUS_NOT_FOUND",
        "HTTP_STATUS_NOT_IMPLEMENTED",
        "HTTP_STATUS_NOT_MODIFIED",
        "HTTP_STATUS_NO_CONTENT",
        "HTTP_STATUS_OK",
        "HTTP_STATUS_PARTIAL_CONTENT",
        "HTTP_STATUS_PAYLOAD_TOO_LARGE",
        "HTTP_STATUS_PAYMENT_REQUIRED",
        "HTTP_STATUS_PERMANENT_REDIRECT",
        "HTTP_STATUS_PRECONDITION_FAILED",
        "HTTP_STATUS_PRECONDITION_REQUIRED",
        "HTTP_STATUS_PROCESSING",
        "HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED",
        "HTTP_STATUS_RANGE_NOT_SATISFIABLE",
        "HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE",
        "HTTP_STATUS_REQUEST_TIMEOUT",
        "HTTP_STATUS_RESET_CONTENT",
        "HTTP_STATUS_SEE_OTHER",
        "HTTP_STATUS_SERVICE_UNAVAILABLE",
        "HTTP_STATUS_SWITCHING_PROTOCOLS",
        "HTTP_STATUS_TEAPOT",
        "HTTP_STATUS_TEMPORARY_REDIRECT",
        "HTTP_STATUS_TOO_MANY_REQUESTS",
        "HTTP_STATUS_UNAUTHORIZED",
        "HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS",
        "HTTP_STATUS_UNORDERED_COLLECTION",
        "HTTP_STATUS_UNPROCESSABLE_ENTITY",
        "HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE",
        "HTTP_STATUS_UPGRADE_REQUIRED",
        "HTTP_STATUS_URI_TOO_LONG",
        "HTTP_STATUS_USE_PROXY",
        "HTTP_STATUS_VARIANT_ALSO_NEGOTIATES",
        "Iterable",
        "IterableIterator",
        "Iterator",
        "IteratorResult",
        "MAX_INITIAL_WINDOW_SIZE",
        "MAX_MAX_FRAME_SIZE",
        "MIN_MAX_FRAME_SIZE",
        "MapConstructor",
        "NGHTTP2_CANCEL",
        "NGHTTP2_COMPRESSION_ERROR",
        "NGHTTP2_CONNECT_ERROR",
        "NGHTTP2_DEFAULT_WEIGHT",
        "NGHTTP2_ENHANCE_YOUR_CALM",
        "NGHTTP2_ERR_FRAME_SIZE_ERROR",
        "NGHTTP2_FLAG_ACK",
        "NGHTTP2_FLAG_END_HEADERS",
        "NGHTTP2_FLAG_END_STREAM",
        "NGHTTP2_FLAG_NONE",
        "NGHTTP2_FLAG_PADDED",
        "NGHTTP2_FLAG_PRIORITY",
        "NGHTTP2_FLOW_CONTROL_ERROR",
        "NGHTTP2_FRAME_SIZE_ERROR",
        "NGHTTP2_HTTP_1_1_REQUIRED",
        "NGHTTP2_INADEQUATE_SECURITY",
        "NGHTTP2_INTERNAL_ERROR",
        "NGHTTP2_NO_ERROR",
        "NGHTTP2_PROTOCOL_ERROR",
        "NGHTTP2_REFUSED_STREAM",
        "NGHTTP2_SESSION_CLIENT",
        "NGHTTP2_SESSION_SERVER",
        "NGHTTP2_SETTINGS_ENABLE_PUSH",
        "NGHTTP2_SETTINGS_HEADER_TABLE_SIZE",
        "NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE",
        "NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS",
        "NGHTTP2_SETTINGS_MAX_FRAME_SIZE",
        "NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE",
        "NGHTTP2_SETTINGS_TIMEOUT",
        "NGHTTP2_STREAM_CLOSED",
        "NGHTTP2_STREAM_STATE_CLOSED",
        "NGHTTP2_STREAM_STATE_HALF_CLOSED_LOCAL",
        "NGHTTP2_STREAM_STATE_HALF_CLOSED_REMOTE",
        "NGHTTP2_STREAM_STATE_IDLE",
        "NGHTTP2_STREAM_STATE_OPEN",
        "NGHTTP2_STREAM_STATE_RESERVED_LOCAL",
        "NGHTTP2_STREAM_STATE_RESERVED_REMOTE",
        "NODE_PERFORMANCE_GC_INCREMENTAL",
        "NODE_PERFORMANCE_GC_MAJOR",
        "NODE_PERFORMANCE_GC_MINOR",
        "NODE_PERFORMANCE_GC_WEAKCB",
        "NodeBuffer",
        "NodeExtensions",
        "NodeJS",
        "NodeModule",
        "NodeRequire",
        "NodeRequireFunction",
        "O_APPEND",
        "O_CREAT",
        "O_DIRECT",
        "O_DIRECTORY",
        "O_DSYNC",
        "O_EXCL",
        "O_NOATIME",
        "O_NOCTTY",
        "O_NOFOLLOW",
        "O_NONBLOCK",
        "O_RDONLY",
        "O_RDWR",
        "O_SYMLINK",
        "O_SYNC",
        "O_TRUNC",
        "O_WRONLY",
        "PADDING_STRATEGY_CALLBACK",
        "PADDING_STRATEGY_MAX",
        "PADDING_STRATEGY_NONE",
        "PassThrough",
        "R_OK",
        "Readable",
        "ReadableOptions",
        "S_IFBLK",
        "S_IFCHR",
        "S_IFDIR",
        "S_IFIFO",
        "S_IFLNK",
        "S_IFMT",
        "S_IFREG",
        "S_IFSOCK",
        "S_IRGRP",
        "S_IROTH",
        "S_IRUSR",
        "S_IRWXG",
        "S_IRWXO",
        "S_IRWXU",
        "S_IWGRP",
        "S_IWOTH",
        "S_IWUSR",
        "S_IXGRP",
        "S_IXOTH",
        "S_IXUSR",
        "SetConstructor",
        "SlowBuffer",
        "Stream",
        "String",
        "Symbol",
        "SymbolConstructor",
        "T",
        "T",
        "T",
        "T",
        "T",
        "T",
        "T",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T1",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T2",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T3",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T4",
        "T5",
        "T5",
        "T5",
        "T5",
        "T5",
        "T5",
        "T6",
        "T6",
        "TBuffer",
        "TBuffer",
        "TBuffer",
        "TBuffer",
        "TBuffer",
        "TBuffer",
        "TBuffer",
        "TCustom",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "TResult",
        "Transform",
        "TransformOptions",
        "URL",
        "W_OK",
        "WeakMapConstructor",
        "WeakSetConstructor",
        "Writable",
        "WritableOptions",
        "X_OK",
        "Z_BEST_COMPRESSION",
        "Z_BEST_SPEED",
        "Z_BLOCK",
        "Z_BUF_ERROR",
        "Z_DATA_ERROR",
        "Z_DEFAULT_COMPRESSION",
        "Z_DEFAULT_STRATEGY",
        "Z_ERRNO",
        "Z_FILTERED",
        "Z_FINISH",
        "Z_FIXED",
        "Z_FULL_FLUSH",
        "Z_HUFFMAN_ONLY",
        "Z_MEM_ERROR",
        "Z_NEED_DICT",
        "Z_NO_COMPRESSION",
        "Z_NO_FLUSH",
        "Z_OK",
        "Z_PARTIAL_FLUSH",
        "Z_RLE",
        "Z_STREAM_END",
        "Z_STREAM_ERROR",
        "Z_SYNC_FLUSH",
        "Z_TREES",
        "Z_VERSION_ERROR",
        "__constructor",
        "__dirname",
        "__filename",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "__promisify__",
        "a",
        "actual",
        "actual",
        "actual",
        "actual",
        "actual",
        "actual",
        "actual",
        "actual",
        "acutal",
        "address",
        "algorith",
        "algorithm",
        "algorithm",
        "algorithm",
        "algorithm",
        "algorithm",
        "algorithm",
        "algorithm",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "assert",
        "async_hooks",
        "atime",
        "atime",
        "atime",
        "atime",
        "atime",
        "atime",
        "authority",
        "authority",
        "b",
        "basename",
        "basename",
        "block",
        "block",
        "block",
        "block",
        "block",
        "block",
        "block",
        "block",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "cert",
        "child_process",
        "clearImmediate",
        "clearInterval",
        "clearTimeout",
        "cluster",
        "code",
        "code",
        "code",
        "code",
        "code",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "command",
        "completer",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "connectionListener",
        "console",
        "console",
        "constants",
        "contextifiedSandbox",
        "credentials",
        "crypto",
        "curve_name",
        "custom",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "deepEqual",
        "deepStrictEqual",
        "delimiter",
        "delimiter",
        "dest",
        "dest",
        "dest",
        "details",
        "details",
        "dgram",
        "digest",
        "digest",
        "dir",
        "dirname",
        "dirname",
        "dns",
        "doesNotThrow",
        "domain",
        "domain",
        "domain",
        "dst",
        "dx",
        "dy",
        "encoding",
        "encoding",
        "encoding",
        "env",
        "eq",
        "eq",
        "eq",
        "equal",
        "error",
        "error",
        "error",
        "error",
        "error",
        "error",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "event",
        "events",
        "existingPath",
        "existingPath",
        "existingPath",
        "expected",
        "expected",
        "expected",
        "expected",
        "expected",
        "expected",
        "expected",
        "expected",
        "expected",
        "exports",
        "ext",
        "ext",
        "ext",
        "extname",
        "extname",
        "fail",
        "family",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "fd",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "file",
        "filename",
        "filename",
        "filename",
        "filename",
        "filename",
        "filename",
        "filename",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "format",
        "format",
        "format",
        "from",
        "from",
        "from",
        "from",
        "fs",
        "generator",
        "generator",
        "generator",
        "generator_encoding",
        "gid",
        "gid",
        "gid",
        "gid",
        "gid",
        "gid",
        "gid",
        "gid",
        "gid",
        "global",
        "group_name",
        "handle",
        "host",
        "host",
        "host",
        "host",
        "host",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "hostname",
        "http",
        "http2",
        "https",
        "ifError",
        "immediateId",
        "input",
        "input",
        "input",
        "input",
        "interface",
        "intervalId",
        "ip",
        "isAbsolute",
        "isAbsolute",
        "isServer",
        "iterations",
        "iterations",
        "iv",
        "iv",
        "join",
        "join",
        "key",
        "key",
        "key",
        "key",
        "keylen",
        "keylen",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "length",
        "length",
        "length",
        "length",
        "length",
        "length",
        "length",
        "link",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "module",
        "module",
        "modulePath",
        "ms",
        "ms",
        "ms",
        "ms",
        "ms",
        "ms",
        "mtime",
        "mtime",
        "mtime",
        "mtime",
        "mtime",
        "mtime",
        "n",
        "net",
        "newPath",
        "newPath",
        "newPath",
        "newPath",
        "newPath",
        "newPath",
        "normalize",
        "normalize",
        "notDeepEqual",
        "notDeepStrictEqual",
        "notEqual",
        "notStrictEqual",
        "obj",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "object",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "ok",
        "oldPath",
        "oldPath",
        "oldPath",
        "onRequestHandler",
        "onRequestHandler",
        "onRequestHandler",
        "onRequestHandler",
        "operator",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "os",
        "output",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "pP",
        "pP",
        "param",
        "param",
        "param",
        "param",
        "parse",
        "parse",
        "parseQueryString",
        "password",
        "password",
        "password",
        "password",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "pathObject",
        "pathSegments",
        "pathSegments",
        "pathSegments",
        "pathString",
        "paths",
        "paths",
        "paths",
        "perf_hooks",
        "port",
        "port",
        "port",
        "port",
        "port",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "prime",
        "prime",
        "prime",
        "prime",
        "prime_encoding",
        "prime_encoding",
        "prime_encoding",
        "prime_length",
        "private_key",
        "private_key",
        "process",
        "process",
        "public_key",
        "public_key",
        "punycode",
        "querystring",
        "readline",
        "rejectUnauthorized",
        "relative",
        "relative",
        "repl",
        "requestCert",
        "requestListener",
        "requestListener",
        "require",
        "resolve",
        "resolve",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "rrtype",
        "salt",
        "salt",
        "sandbox",
        "sandbox",
        "sandbox",
        "secureConnectListener",
        "secureConnectListener",
        "secureConnectionListener",
        "secureConnectionListener",
        "sep",
        "sep",
        "sep",
        "sep",
        "sep",
        "servers",
        "setImmediate",
        "setInterval",
        "setTimeout",
        "settings",
        "settings",
        "settings",
        "signal",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "slashesDenoteHost",
        "src",
        "src",
        "src",
        "src",
        "str",
        "str",
        "str",
        "str",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "strictEqual",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string_decoder",
        "superConstructor",
        "target",
        "target",
        "target",
        "target",
        "terminal",
        "throws",
        "timeoutId",
        "timers",
        "tls",
        "to",
        "to",
        "to",
        "to",
        "tty",
        "type",
        "type",
        "type",
        "type",
        "type",
        "uid",
        "uid",
        "uid",
        "uid",
        "uid",
        "uid",
        "uid",
        "uid",
        "uid",
        "url",
        "urlObject",
        "urlStr",
        "util",
        "v8",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "vm",
        "worker",
        "worker",
        "worker",
        "worker",
        "worker",
        "worker",
        "x",
        "y",
        "zlib"
    ]
}
