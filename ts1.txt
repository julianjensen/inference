SourceFile [pos, end, flags, transformFlags, parent, kind, text, bindDiagnostics, languageVersion, fileName, languageVariant, isDeclarationFile, scriptKind, referencedFiles, typeReferenceDirectives, amdDependencies, moduleName, checkJsDirective, statements, endOfFileToken, externalModuleIndicator, nodeCount, identifierCount, identifiers, parseDiagnostics, path, imports, moduleAugmentations, ambientModuleNames, resolvedModules]
    [statements]: VariableStatement [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, declarationList, modifierFlagsCache]
        [modifiers]: DeclareKeyword [pos, end, flags, parent, kind]
        [declarationList]: VariableDeclarationList [pos, end, flags, transformFlags, parent, kind, declarations]
            [declarations]: VariableDeclaration -> "NaN" [pos, end, flags, transformFlags, parent, kind, name, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
    [statements]: VariableStatement [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, declarationList, modifierFlagsCache]
        [modifiers]: DeclareKeyword [pos, end, flags, parent, kind]
        [declarationList]: VariableDeclarationList [pos, end, flags, transformFlags, parent, kind, declarations]
            [declarations]: VariableDeclaration -> "Infinity" [pos, end, flags, transformFlags, parent, kind, name, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
    [statements]: FunctionDeclaration -> "eval" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, asteriskToken, modifierFlagsCache, name, typeParameters, parameters, type, body, jsDoc]
        [modifiers]: DeclareKeyword [pos, end, flags, parent, kind]
        [parameters]: Parameter -> "x" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [type]: AnyKeyword [pos, end, flags, parent, kind]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
            [tags]: JSDocParameterTag -> "x" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                [atToken]: AtToken [pos, end, flags, parent, kind]
    [statements]: InterfaceDeclaration -> "PropertyDescriptor" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: PropertySignature -> "configurable" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "enumerable" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "value" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "writable" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "get" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "set" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "v" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: VoidKeyword [pos, end, flags, parent, kind]
    [statements]: InterfaceDeclaration -> "PropertyDescriptorMap" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: IndexSignature [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, parameters, type]
            [parameters]: Parameter -> "s" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "PropertyDescriptor" [pos, end, flags, transformFlags, parent, kind, typeName]
    [statements]: InterfaceDeclaration -> "ObjectConstructor" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Object" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "prototype" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type, jsDoc]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Object" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
        [members]: MethodSignature -> "getPrototypeOf" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "getOwnPropertyDescriptor" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "p" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                [types]: TypeReference -> "PropertyDescriptor" [pos, end, flags, transformFlags, parent, kind, typeName]
                [types]: UndefinedKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "p" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "getOwnPropertyNames" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: StringKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "create" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: ObjectKeyword [pos, end, flags, parent, kind]
                    [types]: NullKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "create" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: ObjectKeyword [pos, end, flags, parent, kind]
                    [types]: NullKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "properties" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: IntersectionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "PropertyDescriptorMap" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: TypeReference -> "ThisType" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                        [typeArguments]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "properties" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "defineProperty" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "p" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "attributes" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: IntersectionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "PropertyDescriptor" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: TypeReference -> "ThisType" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                        [typeArguments]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "p" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "attributes" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "defineProperties" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "properties" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: IntersectionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "PropertyDescriptorMap" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: TypeReference -> "ThisType" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                        [typeArguments]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: AnyKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "properties" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "seal" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "freeze" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "a" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "freeze" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeReference -> "Function" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "f" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "freeze" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "Readonly" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "preventExtensions" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "isSealed" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "isFrozen" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "isExtensible" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "keys" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "o" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeLiteral [pos, end, flags, transformFlags, parent, kind, members]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: StringKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "o" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
    [statements]: InterfaceDeclaration -> "FunctionConstructor" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "args" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Function" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "args" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "args" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Function" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: PropertySignature -> "prototype" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Function" [pos, end, flags, transformFlags, parent, kind, typeName]
    [statements]: InterfaceDeclaration -> "RegExpConstructor" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "pattern" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "pattern" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "flags" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "pattern" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "pattern" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "flags" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: PropertySignature -> "prototype" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "RegExp" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: PropertySignature -> "$1" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$2" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$3" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$4" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$5" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$6" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$7" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$8" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "$9" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "lastMatch" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [type]: StringKeyword [pos, end, flags, parent, kind]
    [statements]: InterfaceDeclaration -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [members]: PropertySignature -> "length" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type, jsDoc]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: NumberKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
        [members]: MethodSignature -> "toString" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [type]: StringKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
        [members]: MethodSignature -> "toLocaleString" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [type]: StringKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
        [members]: MethodSignature -> "concat" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "items" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                        [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "items" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "concat" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "items" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: ParenthesizedType [pos, end, flags, transformFlags, parent, kind, type]
                        [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                            [types]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                            [types]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                                [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "items" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "join" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "separator" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: StringKeyword [pos, end, flags, parent, kind]
            [type]: StringKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "separator" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "slice" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "start" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "end" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "start" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "end" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "indexOf" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "searchElement" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "fromIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: NumberKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "searchElement" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "fromIndex" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "lastIndexOf" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "searchElement" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "fromIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: NumberKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "searchElement" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "fromIndex" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "every" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "some" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: BooleanKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "forEach" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: VoidKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: VoidKeyword [pos, end, flags, parent, kind]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "map" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "U" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "filter" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "S" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: FirstTypeNode [pos, end, flags, transformFlags, parent, kind, parameterName, type]
                        [type]: TypeReference -> "S" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "S" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "filter" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "index" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: AnyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "thisArg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "thisArg" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "reduce" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "initialValue" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "reduce" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "initialValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: MethodSignature -> "reduce" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "U" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "initialValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "initialValue" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "reduceRight" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "initialValue" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "reduceRight" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "initialValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: MethodSignature -> "reduceRight" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "U" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                    [parameters]: Parameter -> "previousValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [parameters]: Parameter -> "currentIndex" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: NumberKeyword [pos, end, flags, parent, kind]
                    [parameters]: Parameter -> "array" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                        [type]: TypeReference -> "ReadonlyArray" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                            [typeArguments]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [parameters]: Parameter -> "initialValue" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "U" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "callbackfn" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "initialValue" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: IndexSignature [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, parameters, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "n" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
    [statements]: InterfaceDeclaration -> "ArrayConstructor" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "arrayLength" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "arrayLength" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: ConstructSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "items" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [parameters]: Parameter -> "arrayLength" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "arrayLength" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: CallSignature [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
            [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
            [parameters]: Parameter -> "items" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [dotDotDotToken]: DotDotDotToken [pos, end, flags, parent, kind]
                [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                    [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: ArrayType [pos, end, flags, transformFlags, parent, kind, elementType]
                [elementType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [members]: MethodSignature -> "isArray" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type]
            [parameters]: Parameter -> "arg" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: AnyKeyword [pos, end, flags, parent, kind]
            [type]: FirstTypeNode [pos, end, flags, transformFlags, parent, kind, parameterName, type]
                [type]: TypeReference -> "Array" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                    [typeArguments]: AnyKeyword [pos, end, flags, parent, kind]
        [members]: PropertySignature -> "prototype" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Array" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                [typeArguments]: AnyKeyword [pos, end, flags, parent, kind]
    [statements]: InterfaceDeclaration -> "Promise" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [members]: MethodSignature -> "then" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "TResult1" [pos, end, flags, transformFlags, parent, kind, name, default]
                [default]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [typeParameters]: TypeParameter -> "TResult2" [pos, end, flags, transformFlags, parent, kind, name, default]
                [default]: NeverKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "onfulfilled" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: ParenthesizedType [pos, end, flags, transformFlags, parent, kind, type]
                        [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                            [parameters]: Parameter -> "value" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                            [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                                [types]: TypeReference -> "TResult1" [pos, end, flags, transformFlags, parent, kind, typeName]
                                [types]: TypeReference -> "PromiseLike" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                                    [typeArguments]: TypeReference -> "TResult1" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: UndefinedKeyword [pos, end, flags, parent, kind]
                    [types]: NullKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "onrejected" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: ParenthesizedType [pos, end, flags, transformFlags, parent, kind, type]
                        [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                            [parameters]: Parameter -> "reason" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                                [type]: AnyKeyword [pos, end, flags, parent, kind]
                            [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                                [types]: TypeReference -> "TResult2" [pos, end, flags, transformFlags, parent, kind, typeName]
                                [types]: TypeReference -> "PromiseLike" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                                    [typeArguments]: TypeReference -> "TResult2" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: UndefinedKeyword [pos, end, flags, parent, kind]
                    [types]: NullKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Promise" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                [typeArguments]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "TResult1" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: TypeReference -> "TResult2" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "onfulfilled" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocParameterTag -> "onrejected" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocReturnTag [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [members]: MethodSignature -> "catch" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, typeParameters, parameters, type, jsDoc]
            [typeParameters]: TypeParameter -> "TResult" [pos, end, flags, transformFlags, parent, kind, name, default]
                [default]: NeverKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "onrejected" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [questionToken]: QuestionToken [pos, end, flags, parent, kind]
                [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: ParenthesizedType [pos, end, flags, transformFlags, parent, kind, type]
                        [type]: FunctionType [pos, end, flags, transformFlags, parent, kind, typeParameters, parameters, type]
                            [parameters]: Parameter -> "reason" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                                [type]: AnyKeyword [pos, end, flags, parent, kind]
                            [type]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                                [types]: TypeReference -> "TResult" [pos, end, flags, transformFlags, parent, kind, typeName]
                                [types]: TypeReference -> "PromiseLike" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                                    [typeArguments]: TypeReference -> "TResult" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: UndefinedKeyword [pos, end, flags, parent, kind]
                    [types]: NullKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "Promise" [pos, end, flags, transformFlags, parent, kind, typeName, typeArguments]
                [typeArguments]: UnionType [pos, end, flags, transformFlags, parent, kind, types]
                    [types]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                    [types]: TypeReference -> "TResult" [pos, end, flags, transformFlags, parent, kind, typeName]
            [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
                [tags]: JSDocParameterTag -> "onrejected" [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, name, isNameFirst, isBracketed, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
                [tags]: JSDocReturnTag [pos, end, flags, transformFlags, parent, kind, atToken, tagName, typeExpression, comment]
                    [atToken]: AtToken [pos, end, flags, parent, kind]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [statements]: InterfaceDeclaration -> "ArrayLike" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [members]: PropertySignature -> "length" [pos, end, flags, transformFlags, parent, kind, modifiers, name, questionToken, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [type]: NumberKeyword [pos, end, flags, parent, kind]
        [members]: IndexSignature [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, parameters, type]
            [modifiers]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [parameters]: Parameter -> "n" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, dotDotDotToken, name, questionToken, type, initializer]
                [type]: NumberKeyword [pos, end, flags, parent, kind]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
    [statements]: TypeAliasDeclaration -> "Partial" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, type, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [type]: MappedType [pos, end, flags, transformFlags, parent, kind, readonlyToken, typeParameter, questionToken, type]
            [typeParameter]: TypeParameter -> "P" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeOperator [pos, end, flags, transformFlags, parent, kind, operator, type]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [questionToken]: QuestionToken [pos, end, flags, parent, kind]
            [type]: IndexedAccessType [pos, end, flags, transformFlags, parent, kind, objectType, indexType]
                [objectType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                [indexType]: TypeReference -> "P" [pos, end, flags, transformFlags, parent, kind, typeName]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [statements]: TypeAliasDeclaration -> "Readonly" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, type, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [type]: MappedType [pos, end, flags, transformFlags, parent, kind, readonlyToken, typeParameter, questionToken, type]
            [readonlyToken]: ReadonlyKeyword [pos, end, flags, parent, kind]
            [typeParameter]: TypeParameter -> "P" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeOperator [pos, end, flags, transformFlags, parent, kind, operator, type]
                    [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: IndexedAccessType [pos, end, flags, transformFlags, parent, kind, objectType, indexType]
                [objectType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                [indexType]: TypeReference -> "P" [pos, end, flags, transformFlags, parent, kind, typeName]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [statements]: TypeAliasDeclaration -> "Pick" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, type, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [typeParameters]: TypeParameter -> "K" [pos, end, flags, transformFlags, parent, kind, name, constraint]
            [constraint]: TypeOperator [pos, end, flags, transformFlags, parent, kind, operator, type]
                [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [type]: MappedType [pos, end, flags, transformFlags, parent, kind, readonlyToken, typeParameter, questionToken, type]
            [typeParameter]: TypeParameter -> "P" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeReference -> "K" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: IndexedAccessType [pos, end, flags, transformFlags, parent, kind, objectType, indexType]
                [objectType]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
                [indexType]: TypeReference -> "P" [pos, end, flags, transformFlags, parent, kind, typeName]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [statements]: TypeAliasDeclaration -> "Record" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, type, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "K" [pos, end, flags, transformFlags, parent, kind, name, constraint]
            [constraint]: StringKeyword [pos, end, flags, parent, kind]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [type]: MappedType [pos, end, flags, transformFlags, parent, kind, readonlyToken, typeParameter, questionToken, type]
            [typeParameter]: TypeParameter -> "P" [pos, end, flags, transformFlags, parent, kind, name, constraint]
                [constraint]: TypeReference -> "K" [pos, end, flags, transformFlags, parent, kind, typeName]
            [type]: TypeReference -> "T" [pos, end, flags, transformFlags, parent, kind, typeName]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [statements]: InterfaceDeclaration -> "ThisType" [pos, end, flags, transformFlags, parent, kind, decorators, modifiers, name, typeParameters, heritageClauses, members, jsDoc, modifierFlagsCache]
        [typeParameters]: TypeParameter -> "T" [pos, end, flags, transformFlags, parent, kind, name]
        [jsDoc]: JSDocComment [pos, end, flags, transformFlags, parent, kind, tags, comment]
    [endOfFileToken]: EndOfFileToken [pos, end, flags, parent, kind]
AnyKeyword:
    
ArrayType:
    elementType: StringKeyword
AtToken:
    
BooleanKeyword:
    
CallSignature:
    typeParameters: Array<*>, parameters: Array<*>, type: AnyKeyword
ConstructSignature:
    typeParameters: Array<*>, parameters: Array<Parameter|String>, type: TypeReference, jsDoc: Array<JSDocComment>
DeclareKeyword:
    
DotDotDotToken:
    
EndOfFileToken:
    
FirstTypeNode:
    parameterName: IdentifierObject, type: TypeReference
FunctionDeclaration:
    decorators: undefined, modifiers: Array<DeclareKeyword>, asteriskToken: undefined, name: IdentifierObject, typeParameters: undefined, parameters: Array<Parameter>, type: AnyKeyword, body: undefined, jsDoc: Array<JSDocComment>
FunctionType:
    typeParameters: undefined, parameters: Array<Parameter|String>, type: BooleanKeyword
IndexSignature:
    decorators: undefined, modifiers: Array<*>, parameters: Array<Parameter|String>, type: TypeReference
IndexedAccessType:
    objectType: TypeReference, indexType: TypeReference
InterfaceDeclaration:
    decorators: undefined, modifiers: undefined, name: IdentifierObject, typeParameters: Array<*>, heritageClauses: undefined, members: Array<PropertySignature|String>, jsDoc: Array<JSDocComment|String>
IntersectionType:
    types: Array<TypeReference|String>
JSDocComment:
    tags: Array<JSDocParameterTag|String>, comment: string (String)
JSDocParameterTag:
    atToken: AtToken, tagName: IdentifierObject, typeExpression: undefined, name: IdentifierObject, isNameFirst: boolean (Boolean), isBracketed: boolean (Boolean), comment: string (String)
JSDocReturnTag:
    atToken: AtToken, tagName: IdentifierObject, typeExpression: undefined, comment: string (String)
MappedType:
    readonlyToken: ReadonlyKeyword, typeParameter: TypeParameter, questionToken: QuestionToken, type: IndexedAccessType
MethodSignature:
    modifiers: undefined, name: IdentifierObject, questionToken: QuestionToken, typeParameters: Array<*>, parameters: Array<*>, type: AnyKeyword, jsDoc: Array<JSDocComment|String>
NeverKeyword:
    
NullKeyword:
    
NumberKeyword:
    
ObjectKeyword:
    
Parameter:
    decorators: undefined, modifiers: undefined, dotDotDotToken: DotDotDotToken, name: IdentifierObject, questionToken: QuestionToken, type: StringKeyword, initializer: undefined
ParenthesizedType:
    type: UnionType
PropertySignature:
    modifiers: Array<*>, name: IdentifierObject, questionToken: QuestionToken, type: BooleanKeyword, jsDoc: Array<JSDocComment|String>
QuestionToken:
    
ReadonlyKeyword:
    
SourceFile:
    text: string (String), bindDiagnostics: Array<*>, languageVersion: number (Number), fileName: string (String), languageVariant: number (Number), isDeclarationFile: boolean (Boolean), scriptKind: number (Number), referencedFiles: Array<*>, typeReferenceDirectives: Array<*>, amdDependencies: Array<*>, moduleName: undefined, checkJsDirective: undefined, statements: Array<VariableStatement>, endOfFileToken: EndOfFileToken, externalModuleIndicator: undefined, nodeCount: number (Number), identifierCount: number (Number), identifiers: Map, parseDiagnostics: Array<*>, path: string (String), imports: Array<*>, moduleAugmentations: Array<*>, ambientModuleNames: Array<*>, resolvedModules: undefined
StringKeyword:
    
TypeAliasDeclaration:
    decorators: undefined, modifiers: undefined, name: IdentifierObject, typeParameters: Array<TypeParameter|String>, type: MappedType, jsDoc: Array<JSDocComment|String>
TypeLiteral:
    members: Array<*>
TypeOperator:
    operator: number (Number), type: TypeReference
TypeParameter:
    name: IdentifierObject, constraint: TypeReference, default: TypeReference
TypeReference:
    typeName: IdentifierObject, typeArguments: Array<AnyKeyword|String>
UndefinedKeyword:
    
UnionType:
    types: Array<TypeReference|String>
VariableDeclaration:
    name: IdentifierObject, type: NumberKeyword, initializer: undefined
VariableDeclarationList:
    declarations: Array<VariableDeclaration|String>
VariableStatement:
    decorators: undefined, modifiers: Array<DeclareKeyword|String>, declarationList: VariableDeclarationList
VoidKeyword:
    
